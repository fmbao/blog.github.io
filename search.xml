<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title></title>
      <link href="/2018/12/16/%E5%AE%9E%E9%AA%8C%E8%AE%B0%E5%BD%95/"/>
      <url>/2018/12/16/%E5%AE%9E%E9%AA%8C%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>&#x6574;&#x4E2A;&#x9879;&#x76EE;&#x4E3B;&#x8981;&#x5206;&#x4E09;&#x4E2A;&#x90E8;&#x5206;&#x53BB;&#x5B8C;&#x6210;&#xFF1A;</p><ol><li>GAN</li><li>&#x526A;&#x5207;&#x51FD;&#x6570;</li><li>CNN</li></ol><p>GAN&#x7684;&#x90E8;&#x5206;&#x8C03;&#x8FC7;&#x4E86;&#xFF0C;&#x73B0;&#x5728;&#x53EF;&#x4EE5;&#x8C03;CNN&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9A8C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x4E0D;&#x540C;&#x7684;&#x53C2;&#x6570;&#x53BB;&#x8BBE;&#x7F6E;&#x3002;&#x5728;&#x8FD9;&#x91CC;&#x4E3E;&#x51FA;&#x5B9E;&#x9A8C;&#x7684;&#x53C2;&#x6570;&#x65B9;&#x4FBF;&#x8FDB;&#x884C;&#x5BF9;&#x6BD4;&#x3002;</p><h2><span id="x5b9ex9a8cx6570x636ex4e0ax7684x5bf9x6bd4x5b9ex9a8c">&#x5B9E;&#x9A8C;&#x6570;&#x636E;&#x4E0A;&#x7684;&#x5BF9;&#x6BD4;&#x5B9E;&#x9A8C;</span></h2><ol><li>&#x3010;exp1_train , exp1_test&#x3011;&#x8BAD;&#x7EC3;&#x96C6;&#xFF1A;900+GAN&#x6570;&#x636E;&#xFF08;&#x5177;&#x4F53;&#x6570;&#x636E;&#x4E4B;&#x540E;&#x7EDF;&#x8BA1;&#x51FA;&#x6765;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x6570;&#x636E;&#x662F;900&#x4E2A;&#x56FE;&#x7247;&#x751F;&#x6210;&#x51FA;&#x6765;&#x7684;&#xFF09;&#x603B;&#x5171;&#x7684;&#x56FE;&#x7247;&#x6570;&#x76EE;&#x662F;679&#x4E2A;  &#x6D4B;&#x8BD5;&#x96C6;&#xFF1A;450</li><li>&#x3010;exp2_train , exp2_test&#x3011;&#x8BAD;&#x7EC3;&#x96C6;&#xFF1A;900                            &#x6D4B;&#x8BD5;&#x96C6;&#xFF1A;450</li><li>&#x3010;exp3_train , exp3_test&#x3011;&#x8BAD;&#x7EC3;&#x96C6;&#xFF1A;450+GAN&#x6570;&#x636E;&#xFF08;&#x5177;&#x4F53;&#x6570;&#x636E;&#x7EDF;&#x8BA1;&#x4E4B;&#x540E;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x6570;&#x636E;&#x4E5F;&#x662F;450&#x751F;&#x6210;&#x51FA;&#x6765;&#x7684;&#xFF09;    &#x6D4B;&#x8BD5;&#x96C6;&#xFF1A;450   &#xFF08;&#x73B0;&#x5728;&#x8FD9;&#x90E8;&#x5206;&#x56FE;&#x7247;&#x8FD8;&#x662F;&#x539F;&#x59CB;&#x56FE;&#x7247;&#xFF09;</li></ol><h2><span id="cnnx5bf9x7167x5b9ex9a8c">CNN&#x5BF9;&#x7167;&#x5B9E;&#x9A8C;</span></h2><ol><li>&#x7B2C;&#x4E00;&#x7EC4;<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlextNet</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, in_channel, n_class)</span>:</span></span><br><span class="line">        super(AlextNet, self).__init__()</span><br><span class="line"></span><br><span class="line">        self.conv1 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channel, <span class="number">96</span>, kernel_size=<span class="number">11</span>, stride=<span class="number">4</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">96</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv2 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">96</span>, <span class="number">256</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">256</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv3 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">256</span>, <span class="number">384</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">384</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">384</span>, <span class="number">384</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">384</span>, <span class="number">256</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.fc = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">1</span>*<span class="number">1</span>*<span class="number">256</span>, <span class="number">4096</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.5</span>),</span><br><span class="line">            nn.Linear(<span class="number">4096</span>, <span class="number">4096</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.15</span>),</span><br><span class="line">            nn.Linear(<span class="number">4096</span>, n_class)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        con1_x = self.conv1(x)</span><br><span class="line">        con2_x = self.conv2(con1_x)</span><br><span class="line">        con3_x = self.conv3(con2_x)</span><br><span class="line">        lin_x = con3_x.view(con3_x.size(<span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line">        y_hat = self.fc(lin_x)</span><br><span class="line">        <span class="keyword">return</span> y_hat</span><br></pre></td></tr></tbody></table></figure></li></ol><p>&#x5B9E;&#x9A8C;&#x53C2;&#x6570;&#xFF1A;<br>DOWNLOAD = True<br>BATCH_SIZE = 10<br>EPOCH = 100<br>learning_rate = 0.001<br>use_gpu = True<br>&#x8BAD;&#x7EC3;&#x96C6;&#xFF1A;900+GAN&#x56FE;&#x7247;<br>&#x6D4B;&#x8BD5;&#x96C6;&#xFF1A;450</p><p>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 90 %<br>Accuracy of the model on the test images: 71 %</p><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x4E2A;&#x5B9E;&#x9A8C;&#x7684;&#x6539;&#x8FDB;&#xFF1A;<br>do(dropout&#x7684;&#x7B80;&#x79F0;)&#x7B2C;&#x4E00;&#x4E2A;0.2  &#x7B2C;&#x4E8C;&#x4E2A;0.1 BATCH_SIZE = 8<br>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 89 %<br>Accuracy of the model on the test images: 69 %</p><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x4E2A;&#x5B9E;&#x9A8C;&#x7684;&#x6539;&#x8FDB;&#xFF1A;<br>do(dropout&#x7684;&#x7B80;&#x79F0;)&#x7B2C;&#x4E00;&#x4E2A;0.2  &#x7B2C;&#x4E8C;&#x4E2A;0.1 BATCH_SIZE = 12  learning_rate = 0.0001<br>Accuracy of the model on the train images: 92 %<br>Accuracy of the model on the test images: 69 %</p><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x4E2A;&#x5B9E;&#x9A8C;&#x7684;&#x6539;&#x8FDB;&#xFF1A;<br>do(dropout&#x7684;&#x7B80;&#x79F0;)&#x7B2C;&#x4E00;&#x4E2A;0.2  &#x7B2C;&#x4E8C;&#x4E2A;0.1 BATCH_SIZE = 10  learning_rate = 0.0001<br>Accuracy of the model on the train images: 90 %<br>Accuracy of the model on the test images: 67 %</p><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x4E2A;&#x5B9E;&#x9A8C;&#x7684;&#x6539;&#x8FDB;&#xFF1A;<br>do(dropout&#x7684;&#x7B80;&#x79F0;)&#x7B2C;&#x4E00;&#x4E2A;0.2  &#x7B2C;&#x4E8C;&#x4E2A;0.1 BATCH_SIZE = 12  learning_rate = 0.0001<br>&#x4F18;&#x5316;&#x5668;&#x6539;&#x6210;&#x4E86;Adagrad&#xFF0C;&#x6548;&#x679C;&#x6BD4;&#x8F83;&#x663E;&#x8457;<br>Accuracy of the model on the train images: 95 %<br>Accuracy of the model on the test images: 72 %</p><p>&#x8FD9;&#x7BC7;<a href="https://www.jiqizhixin.com/articles/2018-05-13-2" target="_blank" rel="noopener">&#x535A;&#x5BA2;</a>&#x8BB2;&#x8FF0;&#x4E86;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x4F18;&#x5316;&#x6A21;&#x578B;&#x7684;&#x601D;&#x8DEF;</p><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x4E2A;&#x5B9E;&#x9A8C;&#x7684;&#x6539;&#x8FDB;&#xFF1A;<br>do(dropout&#x7684;&#x7B80;&#x79F0;)&#x7B2C;&#x4E00;&#x4E2A;0.5  &#x7B2C;&#x4E8C;&#x4E2A;0.3 BATCH_SIZE = 12  learning_rate = 0.0001<br>&#x4F18;&#x5316;&#x5668;&#x6539;&#x6210;&#x4E86;Adagrad&#xFF0C;&#x6548;&#x679C;&#x6BD4;&#x8F83;&#x663E;&#x8457;<br>Accuracy of the model on the train images: 93 %<br>Accuracy of the model on the test images: 70 %</p><p>&#x975E;&#x5E38;&#x5947;&#x602A;&#x7684;&#x8BBE;&#x7F6E;&#xFF0C;&#x5F00;&#x59CB;&#x7684;&#x65F6;&#x5019; &#x91C7;&#x7528;&#x7684;&#x4F18;&#x5316;&#x5668;&#x662F;AdaGrad  &#x7136;&#x540E;&#x5728;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E2D;&#x53EF;&#x4EE5;&#x66F4;&#x6539;&#x4F18;&#x5316;&#x5668;&#x4E3A;Adam<br>&#x4F46;&#x662F;&#x6548;&#x679C;&#x975E;&#x5E38;&#x5DEE;<br>Accuracy of the model on the train images: 75 %<br>Accuracy of the model on the test images: 55 %</p><p>&#x5C06;&#x6BCF;&#x4E2A;&#x7C7B;&#x522B;&#x7684;&#x56FE;&#x7247;&#x6570;&#x91CF;&#x51CF;&#x5C11;&#x4E3A;&#xFF08;&#x7531;679&#x51CF;&#x5C11;&#x4E3A;540&#x4E2A;&#xFF09;&#xFF0C;&#x4F46;&#x662F;&#x6536;&#x6548;&#x751A;&#x5FAE;<br>&#x5B9E;&#x9A8C;&#x6548;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 92 %<br>Accuracy of the model on the test images: 70 %</p><ol start="2"><li>&#x7B2C;&#x4E8C;&#x7EC4;<br>&#x4EE3;&#x7801;&#x76F8;&#x8F83;&#x4E8E;&#x7B2C;&#x4E00;&#x7EC4;&#x5B9E;&#x9A8C;&#x66F4;&#x6539;&#x4E86;<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.autograd <span class="keyword">import</span> Variable</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets , transforms</span><br><span class="line"><span class="keyword">from</span> config <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># AlexNet model</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlextNet</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, in_channel, n_class)</span>:</span></span><br><span class="line">        super(AlextNet, self).__init__()</span><br><span class="line">        self.conv1 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channel, <span class="number">96</span>, kernel_size=<span class="number">11</span>, stride=<span class="number">4</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">96</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        self.conv2 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">96</span>, <span class="number">256</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">256</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        self.conv3 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">256</span>, <span class="number">384</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">384</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">384</span>, <span class="number">384</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">384</span>, <span class="number">256</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),</span><br><span class="line">        )</span><br><span class="line">        self.fc = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">1</span>*<span class="number">1</span>*<span class="number">256</span>, <span class="number">4096</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.3</span>),</span><br><span class="line">            nn.Linear(<span class="number">4096</span>, <span class="number">4096</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.15</span>),</span><br><span class="line">            nn.Linear(<span class="number">4096</span>, n_class)</span><br><span class="line">        )</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        con1_x = self.conv1(x)</span><br><span class="line">        con2_x = self.conv2(con1_x)</span><br><span class="line">        con3_x = self.conv3(con2_x)</span><br><span class="line">        lin_x = con3_x.view(con3_x.size(<span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line">        y_hat = self.fc(lin_x)</span><br><span class="line">        <span class="keyword">return</span> y_hat</span><br></pre></td></tr></tbody></table></figure></li></ol><p>&#x5B9E;&#x9A8C;&#x53C2;&#x6570;&#xFF1A;<br>DOWNLOAD = True<br>BATCH_SIZE = 16<br>EPOCH = 100<br>learning_rate = 0.001<br>use_gpu = True<br>&#x8BAD;&#x7EC3;&#x96C6;&#xFF1A;900+GAN&#x56FE;&#x7247;<br>&#x6D4B;&#x8BD5;&#x96C6;&#xFF1A;450</p><p>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 92 %<br>Accuracy of the model on the test images: 74 %</p><ol start="3"><li>&#x7B2C;&#x4E09;&#x7EC4;&#x5B9E;&#x9A8C;<br>&#x76F8;&#x8F83;&#x4E8E;&#x4E0A;&#x9762;&#x7684;&#x5B9E;&#x9A8C;&#xFF0C;&#x66F4;&#x6539;&#x4E86;batch&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;batch=10&#x4E86; &#xFF0C;&#x5176;&#x4ED6;&#x6CA1;&#x6539;&#xFF0C;</li></ol><p>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 90 %<br>Accuracy of the model on the test images: 68 %<br>&#x4FEE;&#x6539;batch_size&#x4E5F;&#x53EF;&#x4EE5;&#x6539;&#x53D8;&#x7ED3;&#x679C;&#xFF0C;&#x5728;&#x8FD9;&#x7BC7;<a href="https://blog.csdn.net/silent56_th/article/details/81021766" target="_blank" rel="noopener">&#x535A;&#x5BA2;</a>&#x4E0A;  </p><ol start="4"><li>&#x7B2C;&#x56DB;&#x7EC4;&#x5B9E;&#x9A8C;<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlextNet</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, in_channel, n_class)</span>:</span></span><br><span class="line">        super(AlextNet, self).__init__()</span><br><span class="line">        self.conv1 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channel, <span class="number">96</span>, kernel_size=<span class="number">11</span>, stride=<span class="number">4</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">96</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.15</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv2 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">96</span>, <span class="number">256</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">256</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.15</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        self.conv3 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">256</span>, <span class="number">384</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">384</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.3</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">384</span>, <span class="number">384</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">384</span>, <span class="number">256</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.15</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),</span><br><span class="line">        )</span><br><span class="line">        self.fc = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">1</span>*<span class="number">1</span>*<span class="number">256</span>, <span class="number">4096</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.3</span>),</span><br><span class="line">            nn.Linear(<span class="number">4096</span>, <span class="number">4096</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.15</span>),</span><br><span class="line">            nn.Linear(<span class="number">4096</span>, n_class)</span><br><span class="line">        )</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        con1_x = self.conv1(x)</span><br><span class="line">        con2_x = self.conv2(con1_x)</span><br><span class="line">        con3_x = self.conv3(con2_x)</span><br><span class="line">        lin_x = con3_x.view(con3_x.size(<span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line">        y_hat = self.fc(lin_x)</span><br><span class="line">        <span class="keyword">return</span> y_hat</span><br></pre></td></tr></tbody></table></figure></li></ol><p>&#x5728;&#x524D;&#x9762;&#x7684;&#x5377;&#x79EF;&#x5C42;&#x52A0;&#x5165;&#x4E86;droupout  &#x9632;&#x6B62;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x4E0A;&#x6548;&#x679C;&#x4E00;&#x822C;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x4E5F;&#x6539;&#x53D8;&#x4E86;batch&#x7684;&#x5927;&#x5C0F;  &#x6253;&#x7B97;&#x628A;batch&#x8C03;&#x5230;16&#x518D;&#x8DD1;&#x4E00;&#x8FB9;<br>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 90 %<br>Accuracy of the model on the test images: 65 %</p><p>batch&#x6539;&#x6210;16&#x7684;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 89 %<br>Accuracy of the model on the test images: 67 %</p><p>&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x7684; &#x3010;exp2_train , exp2_test&#x3011;<br>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 75 %<br>Accuracy of the model on the test images: 65 %</p><p>&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x7684; &#x3010;exp3_train , exp3_test&#x3011;<br>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 91 %<br>Accuracy of the model on the test images: 69 %</p><p>&#x5728;&#x8FD9;&#x7BC7;<a href="https://blog.csdn.net/qq_27292549/article/details/81092653" target="_blank" rel="noopener">&#x535A;&#x5BA2;</a>&#x4E2D;&#x63D0;&#x5230;&#x4E86;  &#x5728;&#x5377;&#x79EF;&#x5C42;&#x4E2D;&#x4F7F;&#x7528;dropout&#x6548;&#x679C;&#x4E00;&#x822C;&#xFF0C;&#x56E0;&#x4E3A;&#x5377;&#x79EF;&#x5C42;&#x7684;&#x53C2;&#x6570;&#x6BD4;&#x8F83;&#x5C11;</p><ol start="5"><li>&#x7B2C;&#x4E94;&#x7EC4;&#x5B9E;&#x9A8C;<br>&#x5C06;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x76F8;&#x5173;&#x53C2;&#x6570;&#x90FD;&#x91CD;&#x65B0;&#x6539;&#x4E86;&#x4E00;&#x904D;&#xFF0C;&#x540C;&#x65F6;&#x8FD8;&#x4FEE;&#x6539;&#x4E86;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x4F46;&#x662F;&#x6548;&#x679C;&#x5E76;&#x4E0D;&#x7406;&#x60F3;<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">data_transforms = {</span><br><span class="line">    <span class="string">&apos;train&apos;</span>: transforms.Compose([</span><br><span class="line">        transforms.Grayscale(<span class="number">1</span>),</span><br><span class="line">        transforms.Resize(<span class="number">256</span>),</span><br><span class="line">        transforms.CenterCrop(<span class="number">128</span>),</span><br><span class="line">        transforms.ToTensor(),</span><br><span class="line">        transforms.Normalize((<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>), (<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>)),</span><br><span class="line">    ]),</span><br><span class="line">    <span class="string">&apos;test&apos;</span>: transforms.Compose([</span><br><span class="line">        transforms.Grayscale(<span class="number">1</span>),</span><br><span class="line">        transforms.Resize(<span class="number">256</span>),</span><br><span class="line">        transforms.CenterCrop(<span class="number">128</span>),</span><br><span class="line">        transforms.ToTensor(),</span><br><span class="line">        transforms.Normalize((<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>), (<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>)),</span><br><span class="line">    ])</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlextNet</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, in_channel, n_class)</span>:</span></span><br><span class="line">        super(AlextNet, self).__init__()</span><br><span class="line">        self.conv1 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channel, <span class="number">32</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">3</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">32</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv2 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">32</span>, <span class="number">64</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">3</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">64</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv3 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">64</span>, <span class="number">64</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">64</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">64</span>, <span class="number">64</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">64</span>, <span class="number">512</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.fc = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">1</span>*<span class="number">1</span>*<span class="number">8192</span>, <span class="number">4096</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.2</span>),</span><br><span class="line">            nn.Linear(<span class="number">4096</span>, <span class="number">4096</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.1</span>),</span><br><span class="line">            nn.Linear(<span class="number">4096</span>, n_class)</span><br><span class="line">        )</span><br></pre></td></tr></tbody></table></figure></li></ol><p>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 88 %<br>Accuracy of the model on the test images: 70 %</p><ol start="6"><li>&#x7B2C;&#x516D;&#x7EC4;&#x5B9E;&#x9A8C;<br>&#x8FD9;&#x7EC4;&#x5B9E;&#x9A8C;&#x4E2D;&#x6211;&#x6DFB;&#x52A0;&#x4E86;&#x4E00;&#x5C42;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x5176;&#x53C2;&#x6570;&#x4E3B;&#x8981;&#x662F;&#x4EFF;&#x7167;&#x4E4B;&#x524D;&#x7684;&#x81EA;&#x5DF1;&#x7684;&#x4E00;&#x4E2A;CNN&#x6A21;&#x578B;&#x6784;&#x9020;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x6548;&#x679C;&#x8FD8;&#x662F;&#x4E0D;&#x7406;&#x60F3;<br>&#x4F46;&#x662F;&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x73B0;&#x8C61;&#x7A0D;&#x5FAE;&#x6709;&#x4E9B;&#x7F13;&#x89E3;&#x4E86;&#x3002;</li></ol><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlextNet</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, in_channel, n_class)</span>:</span></span><br><span class="line">        super(AlextNet, self).__init__()</span><br><span class="line">        self.conv1 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channel, <span class="number">32</span>, kernel_size=<span class="number">5</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">32</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv2 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">32</span>, <span class="number">64</span>, kernel_size=<span class="number">5</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">64</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">## &#x65B0;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">        self.conv3 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">64</span>,<span class="number">64</span>,kernel_size= <span class="number">5</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">64</span>),</span><br><span class="line">            nn.ReLU(inplace= <span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>,stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        self.conv4 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">64</span>, <span class="number">64</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">64</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">64</span>, <span class="number">512</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">512</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        self.fc = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">1</span>*<span class="number">1</span>*<span class="number">8192</span>, <span class="number">128</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.2</span>),</span><br><span class="line">            nn.Linear(<span class="number">128</span>, <span class="number">128</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.1</span>),</span><br><span class="line">            nn.Linear(<span class="number">128</span>, n_class)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        con1_x = self.conv1(x)</span><br><span class="line"></span><br><span class="line">        con2_x = self.conv2(con1_x)</span><br><span class="line"></span><br><span class="line">        con3_x = self.conv3(con2_x)</span><br><span class="line"></span><br><span class="line">        con4_x = self.conv4(con3_x)</span><br><span class="line"></span><br><span class="line">        lin_x = con4_x.view(con4_x.size(<span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line">        <span class="comment"># print(&quot;&#x5C3A;&#x5BF8;&#x662F;&#x591A;&#x5C11;&#xFF1A;&quot;, lin_x.shape)</span></span><br><span class="line">        <span class="comment"># print(&quot;&#x5C3A;&#x5BF8;&#x5927;&#x5C0F;&#xFF1A;&quot;,lin_x.shape)</span></span><br><span class="line">        y_hat = self.fc(lin_x)</span><br><span class="line">        <span class="keyword">return</span> y_hat</span><br></pre></td></tr></tbody></table></figure><p>&#x5176;&#x4E2D;&#x7684;&#x56FE;&#x50CF;&#x5927;&#x5C0F;&#x8FD8;&#x662F;128<br>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 82 %<br>Accuracy of the model on the test images: 68 %</p><p>&#x5BF9;&#x5B9E;&#x9A8C;&#x4E94;&#x7684;&#x6539;&#x8FDB;&#x662F;&#xFF0C;&#x5C06;&#x7B2C;&#x4E00;&#x4E2A;&#x4F18;&#x5316;&#x5668;&#x6539;&#x6210; adadelta<br>&#x5B9E;&#x9A8C;&#x6548;&#x679C;&#x8FD8;&#x662F;&#x4E0D;&#x7406;&#x60F3;&#xFF1A;<br>Accuracy of the model on the train images: 89 %<br>Accuracy of the model on the test images: 75 %</p><p>&#x5BF9;&#x5B9E;&#x9A8C;&#x4E94;&#x7684;&#x6539;&#x8FDB;&#x662F;&#xFF0C;&#x5C06;&#x7B2C;&#x4E00;&#x4E2A;&#x4F18;&#x5316;&#x5668;&#x6539;&#x6210;Adagrad ,&#x5E76;&#x4E14;&#x6DFB;&#x52A0;&#x4E86;weight decay=0.1 &#x7684;&#x53C2;&#x6570;<br>&#x5728;&#x8FD9;&#x7BC7;<a href="http://jermmy.xyz/2017/07/22/2017-7-22-reading-notes-neuralnetworkanddeeplearning-3-2/" target="_blank" rel="noopener">&#x535A;&#x5BA2;</a>&#x91CC;&#x9762;&#x8BB2;&#x8FF0;&#x4E86;&#x4E00;&#x4E9B; &#x5BF9;&#x6297;&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x65B9;&#x6CD5;<br>&#x5B9E;&#x9A8C;&#x6548;&#x679C;&#x8F83;&#x4E4B;&#x524D;&#x6709;&#x4E00;&#x5B9A;&#x63D0;&#x5347;&#xFF1A;<br>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 94 %<br>Accuracy of the model on the test images: 81 %</p><p>&#x5BF9;&#x5B9E;&#x9A8C;&#x4E94;&#x7684;&#x6539;&#x8FDB;&#x662F;&#xFF0C;&#x5C06;&#x4E24;&#x4E2A;&#x4F18;&#x5316;&#x5668;&#x90FD;&#x52A0;&#x5165;&#x4E86;weight&#x2014;&#x2014;decay<br>&#x4F46;&#x662F;&#x8BAD;&#x7EC3;&#x7684;&#x6548;&#x679C;&#x4E5F;&#x4E00;&#x822C;<br>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 92 %<br>Accuracy of the model on the test images: 77 %</p><p>&#x5728;&#x8FD9;&#x7BC7;[&#x535A;&#x5BA2;]&#xFF08;<a href="https://www.jiqizhixin.com/articles/2018-07-03-14&#xFF09;&#x91CC;&#x9762;&#x8C08;&#x5230;&#x4E86;&#x8BBE;&#x7F6E;" target="_blank" rel="noopener">https://www.jiqizhixin.com/articles/2018-07-03-14&#xFF09;&#x91CC;&#x9762;&#x8C08;&#x5230;&#x4E86;&#x8BBE;&#x7F6E;</a> weight_decay &#x7684;&#x5927;&#x4F53;&#x5408;&#x9002;&#x7684;&#x6570;&#x503C;&#x3002;</p><ol start="7"><li>&#x7B2C;&#x4E03;&#x7EC4;&#x5B9E;&#x9A8C;<br>&#x8FD9;&#x4E2A;&#x7EC4;&#x5B9E;&#x9A8C;&#x6539;&#x4E86;&#x4E00;&#x4E0B;&#x5377;&#x79EF;&#x5C42;&#x7684;&#x76F8;&#x5173;&#x53C2;&#x6570;&#xFF1A;<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.autograd <span class="keyword">import</span> Variable</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets , transforms</span><br><span class="line"><span class="keyword">from</span> config <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># AlexNet model</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlextNet</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, in_channel, n_class)</span>:</span></span><br><span class="line">        super(AlextNet, self).__init__()</span><br><span class="line">        self.conv1 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channel, <span class="number">32</span>, kernel_size=<span class="number">5</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">32</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv2 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">32</span>, <span class="number">64</span>, kernel_size=<span class="number">5</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">64</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">## &#x65B0;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">        self.conv3 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">64</span>,<span class="number">128</span>,kernel_size= <span class="number">5</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">128</span>),</span><br><span class="line">            nn.ReLU(inplace= <span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>,stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        self.conv4 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">128</span>, <span class="number">256</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">256</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">256</span>, <span class="number">512</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">512</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        self.fc = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">1</span>*<span class="number">1</span>*<span class="number">12800</span>, <span class="number">128</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.2</span>),</span><br><span class="line">            nn.Linear(<span class="number">128</span>, <span class="number">128</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.1</span>),</span><br><span class="line">            nn.Linear(<span class="number">128</span>, n_class)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        con1_x = self.conv1(x)</span><br><span class="line"></span><br><span class="line">        con2_x = self.conv2(con1_x)</span><br><span class="line"></span><br><span class="line">        con3_x = self.conv3(con2_x)</span><br><span class="line"></span><br><span class="line">        con4_x = self.conv4(con3_x)</span><br><span class="line"></span><br><span class="line">        lin_x = con4_x.view(con4_x.size(<span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line">        <span class="comment"># print(&quot;&#x5C3A;&#x5BF8;&#x662F;&#x591A;&#x5C11;&#xFF1A;&quot;, lin_x.shape)</span></span><br><span class="line">        <span class="comment"># print(&quot;&#x5C3A;&#x5BF8;&#x5927;&#x5C0F;&#xFF1A;&quot;,lin_x.shape)</span></span><br><span class="line">        y_hat = self.fc(lin_x)</span><br><span class="line">        <span class="keyword">return</span> y_hat</span><br></pre></td></tr></tbody></table></figure></li></ol><p>&#x8FD9;&#x4E2A;&#x7ED3;&#x679C;&#x8FD8;&#x4E0D;&#x9519;,&#x5B9E;&#x9A8C;&#x6570;&#x636E;&#x7528;&#x7684;&#x662F;exp2(&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x96C6;&#x4E0A;&#x8FBE;&#x5230;&#x8FD9;&#x4E2A;&#x6548;&#x679C;&#xFF0C;&#x6211;&#x4E2A;&#x4EBA;&#x5230;&#x73B0;&#x5728;&#x6765;&#x8BF4;&#x8FD8;&#x662F;&#x6EE1;&#x610F;&#x7684;)&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5168;&#x90E8;&#x90FD;&#x662F;&#x539F;&#x59CB;&#x56FE;&#x7247;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x4F18;&#x5316;&#x5668;AdaGrad &#x7B2C;&#x4E8C;&#x4E2A;&#x4F18;&#x5316;&#x5668;&#x662F;Adadelta<br>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 76 %<br>Accuracy of the model on the test images: 73 %</p><p>&#x8FD9;&#x7BC7;<a href="https://yq.aliyun.com/articles/610509" target="_blank" rel="noopener">&#x535A;&#x5BA2;</a>&#x8BB2;&#x8FF0;&#x4E86;&#x5982;&#x4F55;&#x8C03;&#x8282;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x7684;&#x5377;&#x79EF;&#x6838;&#x5927;&#x5C0F;&#xFF0C;&#x4E2A;&#x6570;&#xFF0C;&#x5377;&#x79EF;&#x5C42;&#x6570;&#x7B49;&#x8C03;&#x53C2;&#x6570;&#x6280;&#x5DE7;<br>&#x53EF;&#x4EE5;&#x53C2;&#x7167;&#x4E00;&#x4E0B;&#x3002;</p><p>&#x7528;&#x4E0A;&#x9762;&#x8FD9;&#x4E2A;&#x6A21;&#x578B;&#x8FBE;&#x5230;&#x4E86;&#x8FC4;&#x4ECA;&#x4E3A;&#x6B62;&#x6700;&#x597D;&#x7684;&#x4E00;&#x4E2A;&#x7ED3;&#x679C;&#xFF0C;&#x5B9E;&#x9A8C;&#x6570;&#x636E;&#x7528;&#x7684;&#x662F;exp1<br>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 95 %<br>Accuracy of the model on the test images: 82 %</p><ol start="8"><li>&#x7B2C;&#x516B;&#x7EC4;&#x5B9E;&#x9A8C;</li></ol><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlextNet</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, in_channel, n_class)</span>:</span></span><br><span class="line">        super(AlextNet, self).__init__()</span><br><span class="line">        self.conv1 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channel, <span class="number">32</span>, kernel_size=<span class="number">3</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">32</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">32</span>,<span class="number">64</span>,kernel_size=<span class="number">3</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">64</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv2 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">64</span>, <span class="number">128</span>, kernel_size=<span class="number">3</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">128</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">## &#x65B0;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">        self.conv3 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">128</span>,<span class="number">256</span>,kernel_size= <span class="number">3</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">256</span>),</span><br><span class="line">            nn.ReLU(inplace= <span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>,stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        self.conv4 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">256</span>, <span class="number">512</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">512</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>),</span><br><span class="line">        )</span><br><span class="line">        self.fc = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">1</span>*<span class="number">1</span>*<span class="number">18432</span>, <span class="number">128</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.2</span>),</span><br><span class="line">            nn.Linear(<span class="number">128</span>, <span class="number">128</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.1</span>),</span><br><span class="line">            nn.Linear(<span class="number">128</span>, n_class)</span><br><span class="line">        )</span><br></pre></td></tr></tbody></table></figure><p>&#x8FD9;&#x7EC4;&#x53C2;&#x6570;&#x8C03;&#x6574;&#x597D;&#x4E4B;&#x540E;&#xFF0C;&#x91C7;&#x7528;&#x7684;&#x6570;&#x636E;&#x662F;exp2,&#x5B9E;&#x9A8C;&#x6548;&#x679C;&#x4E5F;&#x8BA9;&#x4EBA;&#x8F83;&#x4E3A;&#x6EE1;&#x610F;<br>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 81 %<br>Accuracy of the model on the test images: 82 %<br>&#x91C7;&#x7528;exp1&#x5B9E;&#x9A8C;&#x6570;&#x636E;&#x4E48;&#x6709;&#x53D6;&#x5F97;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x6709;&#x6BD4;&#x8F83;&#x663E;&#x8457;&#x7684;&#x8FC7;&#x62DF;&#x5408;&#x73B0;&#x8C61;&#x4E00;&#x822C;&#x8BAD;&#x7EC3;&#x96C6;&#x51C6;&#x786E;&#x7387;&#x8FBE;&#x5230;96%&#xFF0C;&#x6D4B;&#x8BD5;&#x96C6;&#x51C6;&#x786E;&#x7387;&#x81F3;&#x5C11;&#x8981;&#x5230;&#x8FBE;83%<br>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 96 %<br>Accuracy of the model on the test images: 79 %</p><ol start="9"><li>&#x7B2C;&#x4E5D;&#x7EC4;&#x5B9E;&#x9A8C;<br>&#x5927;&#x7EA6;&#x4ECE;&#x8FD9;&#x90E8;&#x5206;&#x5B9E;&#x9A8C;&#x5F00;&#x59CB;&#xFF0C;&#x610F;&#x8BC6;&#x4E0A;&#x5927;&#x7EA6;&#x662F;&#x5148;&#x7528;&#x5C0F;&#x6570;&#x636E;&#x96C6;&#x8FDB;&#x884C;&#x53C2;&#x6570;&#x7684;&#x8BBE;&#x5B9A;&#xFF0C;&#x7136;&#x540E;&#x6548;&#x679C;&#x597D;&#x4E86;&#xFF0C;&#x518D;&#x653E;&#x5230;&#x5927;&#x6570;&#x636E;&#x96C6;&#x4E0A;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;<br>&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x4E3B;&#x8981;&#x4FEE;&#x6539;&#x7684;&#x662F;dropout&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x4FEE;&#x6539;&#x4E86;learning rate &#x7684;&#x4E0B;&#x964D;&#x901F;&#x5EA6;&#x3002;<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlextNet</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, in_channel, n_class)</span>:</span></span><br><span class="line">        super(AlextNet, self).__init__()</span><br><span class="line">        self.conv1 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channel, <span class="number">32</span>, kernel_size=<span class="number">3</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">32</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">32</span>,<span class="number">64</span>,kernel_size=<span class="number">3</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">64</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.conv2 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">64</span>, <span class="number">128</span>, kernel_size=<span class="number">3</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">128</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">## &#x65B0;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">        self.conv3 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">128</span>,<span class="number">256</span>,kernel_size= <span class="number">3</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">256</span>),</span><br><span class="line">            nn.ReLU(inplace= <span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>,stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        self.conv4 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">256</span>, <span class="number">512</span>, kernel_size=<span class="number">3</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">512</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>),</span><br><span class="line">        )</span><br><span class="line">        self.fc = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">1</span>*<span class="number">1</span>*<span class="number">18432</span>, <span class="number">512</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.15</span>),</span><br><span class="line">            nn.Linear(<span class="number">512</span>, <span class="number">128</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.3</span>),</span><br><span class="line">            nn.Linear(<span class="number">128</span>, n_class)</span><br><span class="line">        )</span><br></pre></td></tr></tbody></table></figure></li></ol><p>learning_rate /= 2<br>&#x653E;&#x5230;exp2&#x5B9E;&#x9A8C;&#x6570;&#x636E;&#x4E0A;&#x7684;&#x6548;&#x679C;&#x5BF9;&#x7167;&#x4E4B;&#x524D;&#x7684;&#x6548;&#x679C;&#x8FD8;&#x662F;&#x6709;&#x4E00;&#x5B9A;&#x63D0;&#x5347;&#x7684;<br>&#x5B9E;&#x9A8C;&#x6548;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 85 %<br>Accuracy of the model on the test images: 84 %</p><p>PS: &#x6709;&#x4E00;&#x4E2A;&#x7591;&#x95EE;&#x5C31;&#x662F;&#x6D4B;&#x8BD5;&#x96C6;&#x7684;&#x51C6;&#x786E;&#x7387;&#x603B;&#x662F;&#x9AD8;&#x4E8E;&#x8BAD;&#x7EC3;&#x96C6;&#x7684;&#x51C6;&#x786E;&#x7387;</p><p>&#x66F4;&#x6539;&#x4E86;&#x56FE;&#x7247;&#x7684;&#x5C3A;&#x5BF8;&#x4E4B;&#x540E;&#xFF0C;&#x51C6;&#x786E;&#x7387;&#x6709;&#x4E86;&#x8FDB;&#x4E00;&#x6B65;&#x63D0;&#x5347;<br>&#x4FEE;&#x6539;&#x7684;&#x4EE3;&#x7801;&#xFF1A;<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ata_transforms = {</span><br><span class="line">    <span class="string">&apos;train&apos;</span>: transforms.Compose([</span><br><span class="line">        transforms.Grayscale(<span class="number">1</span>),</span><br><span class="line">        transforms.Resize(<span class="number">256</span>),</span><br><span class="line">        transforms.CenterCrop(<span class="number">224</span>),</span><br><span class="line">        transforms.ToTensor(),</span><br><span class="line">        transforms.Normalize((<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>), (<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>)),</span><br><span class="line">    ]),</span><br><span class="line">    <span class="string">&apos;test&apos;</span>: transforms.Compose([</span><br><span class="line">        transforms.Grayscale(<span class="number">1</span>),</span><br><span class="line">        transforms.Resize(<span class="number">256</span>),</span><br><span class="line">        transforms.CenterCrop(<span class="number">224</span>),</span><br><span class="line">        transforms.ToTensor(),</span><br><span class="line">        transforms.Normalize((<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>), (<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>)),</span><br><span class="line">    ])</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#xFF1A;<br>Accuracy of the model on the train images: 90 %<br>Accuracy of the model on the test images: 88 %</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>卷积神经网络（AlexNet）调参技巧总结</title>
      <link href="/2018/12/16/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%88AlexNet%EF%BC%89%E8%B0%83%E5%8F%82%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/"/>
      <url>/2018/12/16/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%88AlexNet%EF%BC%89%E8%B0%83%E5%8F%82%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;&#x8BB2;&#x8BB2;&#x5BF9;AlexNet&#x5982;&#x4F55;&#x8C03;&#x53C2;&#xFF0C;&#x6700;&#x8FD1;&#x56E0;&#x4E3A;&#x79D1;&#x7814;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x5BF9;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x8FDB;&#x884C;&#x4E86;&#x8C03;&#x53C2;&#xFF0C;&#x5FD9;&#x6D3B;&#x4E86;&#x5927;&#x6982;&#x4E00;&#x4E24;&#x4E2A;&#x661F;&#x671F;&#xFF0C;&#x671F;&#x95F4;&#x5BF9;AlexNet&#x8FDB;&#x884C;&#x4E86;&#x5168;&#x65B9;&#x9762;&#x3001;&#x591A;&#x5C42;&#x6B21;&#x3001;&#x5BBD;&#x9886;&#x57DF;&#x7684;&#x8C03;&#x53C2;&#xFF0C;&#x603B;&#x7ED3;&#x4E86;&#x4E00;&#x4E9B;&#x8C03;&#x53C2;&#x6280;&#x5DE7;&#xFF0C;&#x5728;&#x8FD9;&#x513F;&#x603B;&#x7ED3;&#x4E00;&#x4E0B;&#x3002;</p><p>&#x8C03;&#x53C2;&#x7684;&#x6280;&#x5DE7;&#xFF0C;&#x6211;&#x6253;&#x7B97;&#x4ECE;&#x4E24;&#x4E2A;&#x65B9;&#x9762;&#x6765;&#x8BB2;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x6A21;&#x578B;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x8BAD;&#x7EC3;&#x53C2;&#x6570;&#x3002;</p><h2><span id="x73afx5883x53c2x6570">&#x73AF;&#x5883;&#x53C2;&#x6570;</span></h2><ol><li>Pytorch 0.4.1</li><li>torchvision 0.1.8</li><li>Python 3.6.3</li><li>CUDA 8.0.61</li><li>Linux + Pycharm</li></ol><h2><span id="x6a21x578bx53c2x6570">&#x6A21;&#x578B;&#x53C2;&#x6570;</span></h2><p>&#x9996;&#x5148;&#x6211;&#x6446;&#x51FA;&#x539F;&#x59CB;&#x7684;&#x6A21;&#x578B;&#x4EE3;&#x7801;&#xFF0C;&#x662F;AlexNet&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x4E2A;&#x5728;&#x7F51;&#x4E0A;&#x5F88;&#x5E38;&#x89C1;&#x3002;</p><img src="/2018/12/16/&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF08;AlexNet&#xFF09;&#x8C03;&#x53C2;&#x6280;&#x5DE7;&#x603B;&#x7ED3;/1.png" title="AlexNet&#x6A21;&#x578B;&#x7ED3;&#x6784;&#x56FE;"><p>&#x6A21;&#x578B;&#x4EE3;&#x7801;&#xFF1A;</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlextNet</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, in_channel, n_class)</span>:</span></span><br><span class="line">        super(AlextNet, self).__init__()</span><br><span class="line">        <span class="comment"># &#x7B2C;&#x4E00;&#x9636;&#x6BB5;</span></span><br><span class="line">        self.conv1 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channel, <span class="number">96</span>, kernel_size=<span class="number">11</span>, stride=<span class="number">4</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        <span class="comment"># &#x7B2C;&#x4E8C;&#x9636;&#x6BB5;</span></span><br><span class="line">        self.conv2 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">96</span>, <span class="number">256</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        <span class="comment"># &#x7B2C;&#x4E09;&#x9636;&#x6BB5;</span></span><br><span class="line">        self.conv3 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">256</span>, <span class="number">384</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">384</span>, <span class="number">384</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">384</span>, <span class="number">256</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>)</span><br><span class="line">        )</span><br><span class="line">        <span class="comment"># &#x7B2C;&#x56DB;&#x9636;&#x6BB5; &#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">        self.fc = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">1</span>*<span class="number">1</span>*<span class="number">256</span>, <span class="number">4096</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.5</span>),</span><br><span class="line">            nn.Linear(<span class="number">4096</span>, <span class="number">4096</span>),</span><br><span class="line">            nn.ReLU(inplace=<span class="keyword">True</span>),</span><br><span class="line">            nn.Dropout(<span class="number">0.5</span>),</span><br><span class="line">            nn.Linear(<span class="number">4096</span>, n_class) <span class="comment"># AlexNet&#x4E0A;&#x9762;&#x662F;1000 ...&#x5982;&#x679C;&#x6D4B;&#x8BD5;&#x7684;&#x8BDD;&#x7528;MNIST&#x5219;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;10</span></span><br><span class="line">        )</span><br><span class="line">    <span class="comment"># &#x5411;&#x524D;&#x4F20;&#x64AD;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        con1_x = self.conv1(x)</span><br><span class="line">        con2_x = self.conv2(con1_x)</span><br><span class="line">        con3_x = self.conv3(con2_x)</span><br><span class="line">        lin_x = con3_x.view(con3_x.size(<span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line">        y_hat = self.fc(lin_x)</span><br><span class="line">        <span class="keyword">return</span> y_hat</span><br></pre></td></tr></tbody></table></figure><p>&#x8FD9;&#x4E2A;&#x5C31;&#x662F;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x5982;&#x4F55;&#x770B;&#xFF0C;&#x5728;&#x6211;&#x4E4B;&#x524D;&#x7684;&#x535A;&#x5BA2;<a href="https://blog.csdn.net/u011268787/article/details/84926246" target="_blank" rel="noopener">&#x300A;DCGAN&#x6A21;&#x578B;&#x8BB2;&#x89E3;&#x53CA;&#x907F;&#x5751;&#x6307;&#x5357;&#x300B;</a> &#x4E2D;&#x5DF2;&#x7ECF;&#x8BB2;&#x7684;&#x5F88;&#x8BE6;&#x7EC6;&#x4E86;&#x3002;&#x8FD9;&#x91CC;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x6A21;&#x578B;&#x662F;&#x7531;&#x4E24;&#x5927;&#x90E8;&#x5206;&#x7EC4;&#x6210;&#xFF0C;&#x5377;&#x79EF;&#x5C42;&#x548C;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x53C2;&#x6570;&#x4E5F;&#x975E;&#x5E38;&#x591A;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x8C03;&#x8282;&#x7684;&#x90E8;&#x5206;&#x4E5F;&#x975E;&#x5E38;&#x591A;&#x3002;</p><h3><span id="x6a21x578bx8c03x53c2x6280x5de7-x5377x79efx5c42">&#x6A21;&#x578B;&#x8C03;&#x53C2;&#x6280;&#x5DE7;-&#x5377;&#x79EF;&#x5C42;</span></h3><p>&#x9996;&#x5148;&#x5728;<a href="https://yq.aliyun.com/articles/610509" target="_blank" rel="noopener">&#x300A;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x5377;&#x79EF;&#x6838;&#x5927;&#x5C0F;&#x3001;&#x4E2A;&#x6570;&#xFF0C;&#x5377;&#x79EF;&#x5C42;&#x6570;&#x5982;&#x4F55;&#x786E;&#x5B9A;&#x5462;&#xFF1F;&#x300B;</a> &#x8BB2;&#x8FF0;&#x4E86;&#x76F8;&#x5F53;&#x5168;&#x9762;&#x7684;&#x5377;&#x79EF;&#x6838;&#x4EE5;&#x53CA;&#x5377;&#x79EF;&#x5C42;&#x7684;&#x53C2;&#x6570;&#x786E;&#x5B9A;&#x3002;</p><ul><li>&#x5377;&#x79EF;&#x6838;</li></ul><p>&#x5377;&#x79EF;&#x6838;&#x662F;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6838;&#x5FC3;&#xFF0C;&#x5377;&#x79EF;&#x6838;&#x7684;&#x5927;&#x5C0F;&#x8BBE;&#x7F6E;&#xFF0C;&#x6211;&#x90FD;&#x662F;&#x8BBE;&#x7F6E;&#x4E3A;3&#xD7;3&#xFF0C;&#x4E00;&#x4E2A;&#x65B9;&#x9762;&#x662F;&#x56E0;&#x4E3A;&#x6211;&#x7684;&#x56FE;&#x7247;&#x6BD4;&#x8F83;&#x5C0F;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x539F;&#x56E0;&#x662F;&#x8FD9;&#x4E2A;&#x5377;&#x79EF;&#x6838;&#x662F;&#x6700;&#x5C0F;&#x7684;&#x5E76;&#x4E14;&#x80FD;&#x591F;&#x4F53;&#x73B0;&#x51FA;&#x4E0A;&#x4E0B;&#x5DE6;&#x53F3;&#x4E2D;&#x65B9;&#x4F4D;&#x4FE1;&#x606F;&#x7684;&#x5377;&#x79EF;&#x6838;&#x3002;</p><ul><li>&#x6C60;&#x5316;&#x5C42;</li></ul><p>&#x6C60;&#x5316;&#x5C42;&#x7684;&#x7A97;&#x53E3;&#x5927;&#x5C0F;&#x662F;2&#xD7;2&#xFF0C;&#x53EF;&#x4EE5;&#x642D;&#x914D;stride =2 &#x7684;&#x6B65;&#x5E45;&#xFF0C;&#x8FD9;&#x662F;&#x4E3A;&#x4E86;&#x5C42;&#x52A0;&#x6DF1;&#x5C31;&#x9700;&#x8981;&#x4F7F;&#x4E0B;&#x91C7;&#x6837;&#x901F;&#x5EA6;&#x66F4;&#x6162;&#x3002;</p><ul><li>&#x5C42;&#x6570;</li></ul><p>&#x5F00;&#x59CB;&#x7684;&#x4EE3;&#x7801;&#x662F;&#x4E09;&#x5C42;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x4F46;&#x662F;&#x6548;&#x679C;&#x4E00;&#x76F4;&#x90FD;&#x4E00;&#x822C;&#xFF0C;&#x540E;&#x6765;&#x6CA1;&#x529E;&#x6CD5;&#xFF0C;&#x6211;&#x6DFB;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x3002;&#x5377;&#x79EF;&#x5C42;&#x8FBE;&#x5230;&#x4E86;&#x56DB;&#x5C42;&#xFF0C;&#x800C;&#x5377;&#x79EF;&#x6838;&#x6709;&#x4E94;&#x4E2A;&#x3002;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x5377;&#x79EF;&#x6838;&#x7684;&#x4E2A;&#x6570;&#x6700;&#x597D;&#x662F;&#x5947;&#x6570;&#x4E2A;&#x3002;</p><h3><span id="x6a21x578bx8c03x53c2x6280x5de7-x5168x8fdex63a5x5c42">&#x6A21;&#x578B;&#x8C03;&#x53C2;&#x6280;&#x5DE7;-&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></h3><p>&#x5377;&#x79EF;&#x5C42;&#x662F;&#x7528;&#x6765;&#x628A;&#x56FE;&#x7247;&#x7684;&#x7279;&#x5F81;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#xFF0C;&#x800C;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x662F;&#x6839;&#x636E;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#x7684;&#x7279;&#x5F81;&#x5C06;&#x56FE;&#x7247;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x3002;&#x5728;&#x8FD9;&#x7BC7;<a href="https://blog.csdn.net/qq_27292549/article/details/81092653" target="_blank" rel="noopener">&#x300A;Dropout &#x5C42;&#x5E94;&#x8BE5;&#x52A0;&#x5728;&#x4EC0;&#x4E48;&#x5730;&#x65B9;&#xFF1F;&#x300B;</a> &#x4E2D;&#x8BB2;&#x8FF0;&#x4E86;dropout&#x5C42;&#x5E94;&#x8BE5;&#x653E;&#x7F6E;&#x7684;&#x4F4D;&#x7F6E;&#x3002;<code>&#x4E00;&#x822C;&#x90FD;&#x8981;&#x653E;&#x7F6E;&#x5728;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x4E2D;</code>&#xFF0C;&#x6211;&#x4E5F;&#x5C1D;&#x8BD5;&#x4E86;&#x653E;&#x7F6E;&#x5728;&#x5377;&#x79EF;&#x5C42;&#x4E2D;&#xFF0C;&#x4F46;&#x662F;&#x6548;&#x679C;&#x4E00;&#x822C;&#x3002;&#xFF08;&#x539F;&#x56E0;&#x662F;&#xFF1A;&#x5377;&#x79EF;&#x5C42;&#x53C2;&#x6570;&#x6BD4;&#x8F83;&#x5C11;&#xFF0C;&#x4E0D;&#x5BB9;&#x6613;&#x8FC7;&#x62DF;&#x5408;&#xFF09;&#x3002;&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;&#x8FD8;&#x8BB0;&#x5F55;&#x4E86;&#x5916;&#x6587;&#x8BBA;&#x6587;&#x548C;&#x535A;&#x5BA2;&#x5173;&#x4E8E;&#x8FD9;&#x4E00;&#x89C2;&#x70B9;&#x7684;&#x4F8B;&#x5B50;&#x3002;</p><p>&#x5176;&#x6B21;&#x662F;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x7684;<code>dropout</code>&#x5C42;&#x7684;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;&#x3002;&#x6211;&#x7684;&#x4E2A;&#x4EBA;&#x7ECF;&#x9A8C;&#x662F;&#xFF0C;&#x4E0D;&#x8981;&#x8BBE;&#x7F6E;&#x5730;&#x592A;&#x5927;&#xFF0C;&#x6211;&#x4E00;&#x822C;&#x8BBE;&#x7F6E;&#x5728;<code>0.1~0.3</code>&#x4E4B;&#x95F4;&#x3002;</p><p>&#x6211;&#x7ECF;&#x5E38;&#x770B;&#x7F51;&#x4E0A;&#x6709;&#x4EBA;&#x63A8;&#x8350;&#x4F7F;&#x7528;<code>softmax</code>&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x4E0A;&#x5728;&#x6211;&#x7684;&#x4EE3;&#x7801;&#x91CC;&#x9762;<code>crossEntropyloss()</code>&#x51FD;&#x6570;&#x91CC;&#x9762;&#x5C31;&#x5305;&#x542B;&#x4E86;<code>softmax</code>&#xFF0C;&#x5728;&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;<a href="http://lawlite.me/2017/05/10/PyTorch/" target="_blank" rel="noopener">&#x300A;PyTorch&#x5B66;&#x4E60;&#x300B;</a>&#x91CC;&#x9762;&#x8BB2;&#x8FC7;&#x3002;</p><h2><span id="x8badx7ec3x53c2x6570x8c03x53c2x6280x5de7">&#x8BAD;&#x7EC3;&#x53C2;&#x6570;&#x8C03;&#x53C2;&#x6280;&#x5DE7;</span></h2><p>&#x8FD9;&#x4E2A;&#x8BAD;&#x7EC3;&#x53C2;&#x6570;&#x5176;&#x5B9E;&#x8BF4;&#x7684;&#x4E0D;&#x592A;&#x597D;&#xFF0C;&#x51C6;&#x786E;&#x6765;&#x8BF4;&#x5E94;&#x8BE5;&#x662F;&#xFF0C;&#x56FE;&#x7247;&#x7684;&#x53C2;&#x6570;&#x548C;&#x6A21;&#x578B;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E2D;&#x9047;&#x5230;&#x7684;&#x53C2;&#x6570;&#x7684;&#x8C03;&#x6574;&#x3002;</p><h3><span id="x8badx7ec3x53c2x6570x8c03x53c2x6280x5de7-x56fex7247x8bfbx53d6">&#x8BAD;&#x7EC3;&#x53C2;&#x6570;&#x8C03;&#x53C2;&#x6280;&#x5DE7;-&#x56FE;&#x7247;&#x8BFB;&#x53D6;</span></h3><p>&#x8FD9;&#x4E2A;&#x56FE;&#x7247;&#x8BFB;&#x53D6;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5728;&#x6211;&#x4E4B;&#x524D;&#x7684;&#x535A;&#x5BA2;<a href="https://blog.csdn.net/u011268787/article/details/80385686" target="_blank" rel="noopener">&#x300A;&#x57FA;&#x4E8E;Pytorch&#x5BF9;WGAN_gp&#x6A21;&#x578B;&#x8FDB;&#x884C;&#x8C03;&#x53C2;&#x603B;&#x7ED3;&#x300B;</a>&#x91CC;&#x9762;&#x4E5F;&#x8BB2;&#x8FC7;&#xFF0C;&#x4E3B;&#x8981;&#x7528;&#x7684;&#x51FD;&#x6570;&#x4EE3;&#x7801;&#x662F;&#xFF1A;</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">data_transforms = {</span><br><span class="line">    <span class="string">&apos;train&apos;</span>: transforms.Compose([</span><br><span class="line">        transforms.Grayscale(<span class="number">1</span>),</span><br><span class="line">        transforms.Resize(<span class="number">256</span>),</span><br><span class="line">        transforms.CenterCrop(<span class="number">224</span>),</span><br><span class="line">        transforms.ToTensor(),</span><br><span class="line">        transforms.Normalize((<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>), (<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>)),</span><br><span class="line">    ]),</span><br><span class="line">    <span class="string">&apos;test&apos;</span>: transforms.Compose([</span><br><span class="line">        transforms.Grayscale(<span class="number">1</span>),</span><br><span class="line">        transforms.Resize(<span class="number">256</span>),</span><br><span class="line">        transforms.CenterCrop(<span class="number">224</span>),</span><br><span class="line">        transforms.ToTensor(),</span><br><span class="line">        transforms.Normalize((<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>), (<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>)),</span><br><span class="line">    ])</span><br><span class="line">}</span><br><span class="line">train_dataset = datasets.ImageFolder(os.path.join(CNN_data_dir, <span class="string">&apos;exp1_train&apos;</span>),data_transforms[<span class="string">&apos;train&apos;</span>])</span><br><span class="line">train_loader = torch.utils.data.DataLoader(train_dataset batch_size = BATCH_SIZE ,shuffle = <span class="keyword">True</span> ,num_workers = <span class="number">8</span>)</span><br></pre></td></tr></tbody></table></figure><p>&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x7684;&#x610F;&#x601D;&#x5C31;&#x662F;&#x6309;&#x7167;<code>data_trandform</code>&#x7684;&#x5F62;&#x5F0F;&#x8FDB;&#x884C;&#x8BFB;&#x53D6;&#xFF0C;&#x8BFB;&#x53D6;&#x4E4B;&#x540E;&#x6309;&#x7167;&#x6307;&#x5B9A;&#x7684;<code>batch_size</code> &#x548C; <code>shuffle</code>&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x8F7D;&#x5165;&#x6570;&#x636E;&#x3002;&#x5F00;&#x59CB;&#x7684;&#x65F6;&#x5019;&#x6211;&#x5BF9;&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x4E0D;&#x4EE5;&#x4E3A;&#x610F;&#xFF0C;&#x60F3;&#x7740;&#x5C31;&#x662F;&#x7B80;&#x5355;&#x7684;&#x6570;&#x636E;&#x8F7D;&#x5165;&#xFF0C;&#x6CA1;&#x4EC0;&#x4E48;&#x53EF;&#x4EE5;&#x6539;&#x7684;&#x5730;&#x65B9;&#x3002;&#x56E0;&#x4E3A;&#x6211;&#x770B;&#x7F51;&#x4E0A;&#x7ED9;&#x51FA;&#x7684;&#x5206;&#x7C7B;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x7684;&#x53C2;&#x6570;&#x90FD;&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x60F3;&#x6539;&#x70B9;&#x53C2;&#x6570;&#x5E94;&#x8BE5;&#x6CA1;&#x4EC0;&#x4E48;&#x5F71;&#x54CD;&#xFF0C;&#x540E;&#x6765;&#x53D1;&#x73B0;&#x6211;&#x9519;&#x4E86;&#xFF01;&#xFF01;&#xFF01;</p><p>&#x7279;&#x522B;&#x6709;&#x6548;&#x7684;&#x53C2;&#x6570;&#x662F;&#xFF1A;<code>transforms.CenterCrop()</code>&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x662F;&#x5C06;&#x66F4;&#x6539;&#x5927;&#x5C0F;&#x4E4B;&#x540E;&#x7684;&#x56FE;&#x7247;&#x8FDB;&#x884C;&#x526A;&#x88C1;&#xFF0C;&#x662F;&#x5BF9;&#x56FE;&#x7247;&#x7684;&#x4E2D;&#x5FC3;&#x90E8;&#x5206;&#x8FDB;&#x884C;&#x526A;&#x88C1;&#x3002;&#x521A;&#x5F00;&#x59CB;&#x6211;&#x5728;&#x8FD9;&#x8BBE;&#x7F6E;&#x7684;&#x53C2;&#x6570;&#x662F;<code>96</code>&#xFF0C;&#x8BAD;&#x7EC3;&#x7684;&#x51C6;&#x786E;&#x7387;&#x4E00;&#x76F4;&#x5728;<code>85%</code>&#x5DE6;&#x53F3;&#x5F98;&#x5F8A;&#xFF0C;&#x4F46;&#x662F;&#x5C06;&#x53C2;&#x6570;&#x6539;&#x4E3A;<code>224</code>&#x4E4B;&#x540E;&#xFF0C;&#x8BAD;&#x7EC3;&#x51C6;&#x786E;&#x7387;&#x8FBE;&#x5230;&#x60CA;&#x4EBA;&#x7684;<code>92%</code>&#xFF0C;&#x672C;&#x4EBA;&#x611F;&#x89C9;&#x5341;&#x5206;&#x6EE1;&#x610F;&#x3002;</p><h3><span id="x8badx7ec3x53c2x6570x8c03x53c2x6280x5de7-x4f18x5316x5668xff08optimizerxff09">&#x8BAD;&#x7EC3;&#x53C2;&#x6570;&#x8C03;&#x53C2;&#x6280;&#x5DE7;-&#x4F18;&#x5316;&#x5668;&#xFF08;<code>Optimizer</code>&#xFF09;</span></h3><p>&#x8FD9;&#x4E2A;&#x4F18;&#x5316;&#x5668;&#x4E5F;&#x662F;&#x8C03;&#x53C2;&#x975E;&#x5E38;&#x5173;&#x952E;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x56E0;&#x4E3A;&#x4F18;&#x5316;&#x5668;&#x63A7;&#x5236;&#x4E86;&#x68AF;&#x5EA6;&#x53D8;&#x5316;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5982;&#x679C;&#x4F18;&#x5316;&#x5668;&#x642D;&#x914D;&#x5730;&#x597D;&#xFF0C;&#x5C06;&#x663E;&#x8457;&#x63D0;&#x5347;&#x8BAD;&#x7EC3;&#x96C6;&#x7684;&#x51C6;&#x786E;&#x7387;&#x3002;</p><p>&#x4F18;&#x5316;&#x5668;&#x53EF;&#x4EE5;&#x8C03;&#x8282;&#x7684;&#x53C2;&#x6570;&#x4E3B;&#x8981;&#x5305;&#x62EC;&#xFF1A;&#x4F18;&#x5316;&#x5668;&#x7684;&#x79CD;&#x7C7B;&#xFF0C; &#x5B66;&#x4E60;&#x7387;&#xFF0C; <code>weight_decay</code>&#x7B49;&#x3002;&#x5728;&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;<a href="https://www.jiqizhixin.com/articles/2018-07-03-14" target="_blank" rel="noopener">&#x300A;&#x5F53;&#x524D;&#x8BAD;&#x7EC3;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6700;&#x5FEB;&#x7684;&#x65B9;&#x5F0F;&#xFF1A;AdamW&#x4F18;&#x5316;&#x7B97;&#x6CD5;+&#x8D85;&#x7EA7;&#x6536;&#x655B;&#x300B;</a>&#x4E2D; &#x8BB2;&#x4E86;&#x4E0D;&#x540C;&#x7684;&#x4F18;&#x5316;&#x5668;&#x7684;&#x8BBE;&#x7F6E;&#xFF0C;&#x5C24;&#x5176;&#x662F;L2&#x6B63;&#x5219;&#x5316;&#x7684;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;&#xFF0C;L2&#x6B63;&#x5219;&#x5316;&#x5C31;&#x662F;<code>weight_decay</code>&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x9632;&#x6B62;&#x8FC7;&#x62DF;&#x5408;&#x3002;</p><p>&#x9664;&#x6B64;&#x4E4B;&#x5916;&#x8FD8;&#x6709;&#x5B66;&#x4E60;&#x7387;&#x9700;&#x8981;&#x8C03;&#x8282;&#xFF0C;&#x5B66;&#x4E60;&#x7387;&#x5728;&#x7A0B;&#x5E8F;&#x8FED;&#x4EE3;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x968F;&#x7740;<code>loss</code>&#x503C;&#x7684;&#x4E0B;&#x964D;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x7EE7;&#x7EED;&#x524A;&#x51CF;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x5224;&#x65AD;&#x8BED;&#x53E5;&#xFF0C;&#x53EA;&#x8981;&#x7B49;&#x5230;&#x8FED;&#x4EE3;&#x6761;&#x4EF6;&#x8FBE;&#x5230;&#x67D0;&#x4E00;&#x7A0B;&#x5EA6;&#x65F6;&#x5C31;&#x53EF;&#x4EE5;&#x5C31;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x51CF;&#x5C0F;&#x5176;&#x503C;&#x3002;</p><p>&#x5F53;&#x7136;&#x7531;&#x4E8E;<code>GAN</code>&#x6DFB;&#x52A0;&#x4E86;&#x4E00;&#x4E9B;&#x751F;&#x6210;&#x7684;&#x6570;&#x636E;&#x5230;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#xFF0C;&#x56E0;&#x6B64;&#x4F1A;&#x5BFC;&#x81F4;&#x8FC7;&#x62DF;&#x5408;&#xFF08;&#x6D4B;&#x8BD5;&#x96C6;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x90FD;&#x662F;&#x539F;&#x59CB;&#x6570;&#x636E;&#xFF0C;&#x6A21;&#x578B;&#x5B66;&#x4E60;&#x5230;&#x7684;&#x662F;&#x539F;&#x59CB;&#x6570;&#x636E;&#x548C;&#x751F;&#x6210;&#x6570;&#x636E;&#x7684;&#x6A21;&#x6837;&#xFF0C;&#x8FD9;&#x6837;&#x4E5F;&#x53EF;&#x4EE5;&#x5F88;&#x5B9A;&#x6027;&#x5730;&#x7406;&#x89E3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF09;&#x4E5F;&#x5C31;&#x4E0D;&#x5947;&#x602A;&#x4E86;&#xFF0C;&#x6211;&#x5728;&#x8FD9;&#x7BC7;<a href="http://jermmy.xyz/2017/07/22/2017-7-22-reading-notes-neuralnetworkanddeeplearning-3-2/" target="_blank" rel="noopener">&#x300A;&#x8BFB;&#x4E66;&#x7B14;&#x8BB0;&#xFF1A;&#x5BF9;&#x6297;&#x8FC7;&#x62DF;&#x5408;&#x300B;</a>&#x535A;&#x5BA2;&#x4E2D;&#x627E;&#x5230;&#x4E00;&#x4E9B;&#x5BF9;&#x6297;&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x6BD4;&#x5982;&#x65E9;&#x505C;&#x6B62;&#xFF0C;dropout&#xFF0C;&#x6570;&#x636E;&#x589E;&#x5F3A;&#x7B49;&#x65B9;&#x6CD5;&#x3002;</p><h2><span id="x5c55x671b">&#x5C55;&#x671B;</span></h2><p>&#x6211;&#x5728;&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;<a href="https://blog.csdn.net/sunqiande88/article/details/80100891" target="_blank" rel="noopener">&#x300A;Pytorch&#x5B9E;&#x6218;2&#xFF1A;ResNet-18&#x5B9E;&#x73B0;Cifar-10&#x56FE;&#x50CF;&#x5206;&#x7C7B;&#xFF08;&#x6D4B;&#x8BD5;&#x96C6;&#x5206;&#x7C7B;&#x51C6;&#x786E;&#x7387;95.170%&#xFF09;&#x300B;</a>&#x91CC;&#x9762;&#x770B;&#x5230;&#xFF0C;&#x4F7F;&#x7528;<code>ResNet-18</code>&#x5B9E;&#x73B0;&#x56FE;&#x50CF;&#x5206;&#x7C7B;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x6548;&#x679C;&#x4E5F;&#x975E;&#x5E38;&#x597D;&#x3002;&#x5982;&#x679C;&#x540E;&#x671F;&#xFF0C;&#x6709;&#x9700;&#x8981;&#x901A;&#x8FC7;&#x4E0D;&#x540C;&#x7684;&#x7F51;&#x7EDC;&#x8FDB;&#x884C;&#x5BF9;&#x6BD4;&#x8BD5;&#x9A8C;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x597D;&#x7684;&#x53C2;&#x7167;&#x70B9;&#x3002;</p><h2><span id="x53c2x8003x6587x732e">&#x53C2;&#x8003;&#x6587;&#x732E;</span></h2><p><a href="https://blog.csdn.net/qq_27292549/article/details/81092653" target="_blank" rel="noopener">&#x300A;Dropout &#x5C42;&#x5E94;&#x8BE5;&#x52A0;&#x5728;&#x4EC0;&#x4E48;&#x5730;&#x65B9;&#xFF1F;&#x300B;</a></p><p><a href="https://www.jiqizhixin.com/articles/2018-07-03-14" target="_blank" rel="noopener">&#x300A;&#x5F53;&#x524D;&#x8BAD;&#x7EC3;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6700;&#x5FEB;&#x7684;&#x65B9;&#x5F0F;&#xFF1A;AdamW&#x4F18;&#x5316;&#x7B97;&#x6CD5;+&#x8D85;&#x7EA7;&#x6536;&#x655B;&#x300B;</a></p><p><a href="http://jermmy.xyz/2017/07/22/2017-7-22-reading-notes-neuralnetworkanddeeplearning-3-2/" target="_blank" rel="noopener">&#x300A;&#x8BFB;&#x4E66;&#x7B14;&#x8BB0;&#xFF1A;&#x5BF9;&#x6297;&#x8FC7;&#x62DF;&#x5408;&#x300B;</a></p><p><a href="https://yq.aliyun.com/articles/610509" target="_blank" rel="noopener">&#x300A;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x5377;&#x79EF;&#x6838;&#x5927;&#x5C0F;&#x3001;&#x4E2A;&#x6570;&#xFF0C;&#x5377;&#x79EF;&#x5C42;&#x6570;&#x5982;&#x4F55;&#x786E;&#x5B9A;&#x5462;&#xFF1F;&#x300B;</a></p><p><a href="http://lawlite.me/2017/05/10/PyTorch/" target="_blank" rel="noopener">&#x300A;PyTorch&#x5B66;&#x4E60;&#x300B;</a></p><p><a href="https://blog.csdn.net/sunqiande88/article/details/80100891" target="_blank" rel="noopener">&#x300A;Pytorch&#x5B9E;&#x6218;2&#xFF1A;ResNet-18&#x5B9E;&#x73B0;Cifar-10&#x56FE;&#x50CF;&#x5206;&#x7C7B;&#xFF08;&#x6D4B;&#x8BD5;&#x96C6;&#x5206;&#x7C7B;&#x51C6;&#x786E;&#x7387;95.170%&#xFF09;&#x300B;</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CNN调参 </tag>
            
            <tag> AlexNet </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>DCGAN模型讲解及避坑指南</title>
      <link href="/2018/12/08/DCGAN%E6%A8%A1%E5%9E%8B%E8%AE%B2%E8%A7%A3%E5%8F%8A%E9%81%BF%E5%9D%91%E6%8C%87%E5%8D%97/"/>
      <url>/2018/12/08/DCGAN%E6%A8%A1%E5%9E%8B%E8%AE%B2%E8%A7%A3%E5%8F%8A%E9%81%BF%E5%9D%91%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p>&#x6700;&#x8FD1;&#x5728;&#x505A;&#x79D1;&#x7814;&#x4E0A;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x9700;&#x8981;&#x8C03;&#x5404;&#x79CD;GAN&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x9274;&#x4E8E;&#x7F51;&#x4E0A;&#x5404;&#x79CD;&#x62FF;&#x7740;&#x6807;&#x51C6;&#x6570;&#x636E;&#x96C6;&#x8DD1;&#x6A21;&#x578B;&#x7684;&#x6D41;&#x6C13;&#x884C;&#x4E3A;&#xFF0C;&#x672C;&#x4EBA;&#x51B3;&#x5B9A;&#x63A8;&#x51FA;&#x4E00;&#x79CD;&#x5BF9;&#x5404;&#x79CD;&#x6570;&#x636E;&#x96C6;&#x90FD;&#x9002;&#x7528;&#x7684;&#x6A21;&#x578B;&#x8BAD;&#x7EC3;&#x6559;&#x7A0B;&#x3002;</p><a id="more"></a><p>&#x8BDD;&#x4E0D;&#x591A;&#x8BF4;&#xFF0C;&#x5148;&#x4E0A;&#x4EE3;&#x7801;&#xFF0C;&#x5927;&#x5BB6;&#x770B;&#x7740;&#x6211;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x52A0;&#x4E0A;&#x6211;&#x7684;&#x8BB2;&#x89E3;&#xFF0C;&#x76F8;&#x4FE1;&#x6240;&#x6709;&#x4EBA;&#x90FD;&#x80FD;&#x65E0;&#x75DB;&#x8C03;&#x8282;&#x6A21;&#x578B;&#x7684;&#x53C2;&#x6570;&#x3002;</p><p>&#x6211;&#x7528;&#x7684;&#x662F;github&#x4E0A;<a href="https://github.com/eriklindernoren/PyTorch-GAN" target="_blank" rel="noopener">PyTorch-GAN</a>&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x4E2A;github&#x5B9E;&#x73B0;&#x4E86;&#x5F88;&#x591A;&#x79CD;&#x7C7B;&#x7684;GAN&#xFF0C;&#x5E76;&#x4E14;&#x5199;&#x51FA;&#x6765;&#x7684;&#x6A21;&#x578B;&#x4E5F;&#x4E0D;&#x590D;&#x6742;&#xFF0C;&#x5F88;&#x9002;&#x5408;&#x5C0F;&#x767D;&#x3002;&#x7136;&#x540E;&#x6211;&#x8C03;&#x7684;&#x662F;<code>DCGAN</code></p><h2><span id="dcgan-x6a21x578bx4ee3x7801">DCGAN-  &#x6A21;&#x578B;&#x4EE3;&#x7801;</span></h2><blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Generator</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">&gt;    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">&gt;        super(Generator, self).__init__()</span><br><span class="line">&gt;</span><br><span class="line">&gt;        self.init_size = opt.img_size // <span class="number">4</span></span><br><span class="line">&gt;        self.l1 = nn.Sequential(nn.Linear(opt.latent_dim, <span class="number">128</span>*self.init_size**<span class="number">2</span>))</span><br><span class="line">&gt;</span><br><span class="line">&gt;        self.conv_blocks = nn.Sequential(</span><br><span class="line">&gt;            nn.BatchNorm2d(<span class="number">128</span>),</span><br><span class="line">&gt;            nn.Upsample(scale_factor=<span class="number">2</span>),</span><br><span class="line">&gt;            nn.Conv2d(<span class="number">128</span>, <span class="number">128</span>, <span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">&gt;            nn.BatchNorm2d(<span class="number">128</span>, <span class="number">0.8</span>),</span><br><span class="line">&gt;            nn.LeakyReLU(<span class="number">0.2</span>, inplace=<span class="keyword">True</span>),</span><br><span class="line">&gt;            nn.Upsample(scale_factor=<span class="number">2</span>),</span><br><span class="line">&gt;            nn.Conv2d(<span class="number">128</span>, <span class="number">64</span>, <span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">&gt;            nn.BatchNorm2d(<span class="number">64</span>, <span class="number">0.8</span>),</span><br><span class="line">&gt;            nn.LeakyReLU(<span class="number">0.2</span>, inplace=<span class="keyword">True</span>),</span><br><span class="line">&gt;            nn.Conv2d(<span class="number">64</span>, opt.channels, <span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">&gt;            nn.Tanh()</span><br><span class="line">&gt;        )</span><br><span class="line">&gt;</span><br><span class="line">&gt;    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, z)</span>:</span></span><br><span class="line">&gt;        out = self.l1(z)</span><br><span class="line">&gt;        out = out.view(out.shape[<span class="number">0</span>], <span class="number">128</span>, self.init_size, self.init_size)</span><br><span class="line">&gt;        img = self.conv_blocks(out)</span><br><span class="line">&gt;        <span class="keyword">return</span> img</span><br><span class="line">&gt;</span><br><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Discriminator</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">&gt;    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">&gt;        super(Discriminator, self).__init__()</span><br><span class="line">&gt;</span><br><span class="line">&gt;        <span class="function"><span class="keyword">def</span> <span class="title">discriminator_block</span><span class="params">(in_filters, out_filters, bn=True)</span>:</span></span><br><span class="line">&gt;            block = [   nn.Conv2d(in_filters, out_filters, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>),</span><br><span class="line">&gt;                        nn.LeakyReLU(<span class="number">0.2</span>, inplace=<span class="keyword">True</span>),</span><br><span class="line">&gt;                        nn.Dropout2d(<span class="number">0.25</span>)]</span><br><span class="line">&gt;            <span class="keyword">if</span> bn:</span><br><span class="line">&gt;                block.append(nn.BatchNorm2d(out_filters, <span class="number">0.8</span>))</span><br><span class="line">&gt;            <span class="keyword">return</span> block</span><br><span class="line">&gt;</span><br><span class="line">&gt;        self.model = nn.Sequential(</span><br><span class="line">&gt;            *discriminator_block(opt.channels, <span class="number">16</span>, bn=<span class="keyword">False</span>),</span><br><span class="line">&gt;            *discriminator_block(<span class="number">16</span>, <span class="number">32</span>),</span><br><span class="line">&gt;            *discriminator_block(<span class="number">32</span>, <span class="number">64</span>),</span><br><span class="line">&gt;            *discriminator_block(<span class="number">64</span>, <span class="number">128</span>),</span><br><span class="line">&gt;        )</span><br><span class="line">&gt;</span><br><span class="line">&gt;        <span class="comment"># The height and width of downsampled image</span></span><br><span class="line">&gt;        ds_size = opt.img_size // <span class="number">2</span>**<span class="number">4</span></span><br><span class="line">&gt;        self.adv_layer = nn.Sequential( nn.Linear(<span class="number">128</span>*ds_size**<span class="number">2</span>, <span class="number">1</span>),</span><br><span class="line">&gt;                                        nn.Sigmoid())</span><br><span class="line">&gt;</span><br><span class="line">&gt;    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, img)</span>:</span></span><br><span class="line">&gt;        out = self.model(img)</span><br><span class="line">&gt;        out = out.view(out.shape[<span class="number">0</span>], <span class="number">-1</span>)</span><br><span class="line">&gt;        validity = self.adv_layer(out)</span><br><span class="line">&gt;</span><br><span class="line">&gt;        <span class="keyword">return</span> validity</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><p>&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x662F;<code>DCGAN</code>&#x6700;&#x6838;&#x5FC3;&#x7684;&#x90E8;&#x5206;&#x3002;&#x662F;&#x7531;&#x4E24;&#x4E2A;&#x7F51;&#x7EDC;&#x7EC4;&#x6210;&#xFF1A;&#x751F;&#x6210;&#x7F51;&#x7EDC;&#x548C;&#x5224;&#x522B;&#x7F51;&#x7EDC;&#x3002;&#x597D;&#x4E86;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4E00;&#x70B9;&#x70B9;&#x7684;&#x89E3;&#x91CA;&#x8FD9;&#x4E9B;&#x4EE3;&#x7801;&#x3002;</p><h2><span id="generatorx751fx6210x7f51x7edcx4ee3x7801">Generator&#x751F;&#x6210;&#x7F51;&#x7EDC;&#x4EE3;&#x7801;</span></h2><blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Generator</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">&gt;    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">&gt;        super(Generator, self).__init__()</span><br><span class="line">&gt;</span><br><span class="line">&gt;        self.init_size = opt.img_size // <span class="number">4</span></span><br><span class="line">&gt;        self.l1 = nn.Sequential(nn.Linear(opt.latent_dim, <span class="number">128</span>*self.init_size**<span class="number">2</span>))</span><br><span class="line">&gt;</span><br><span class="line">&gt;        self.conv_blocks = nn.Sequential(</span><br><span class="line">&gt;            nn.BatchNorm2d(<span class="number">128</span>),</span><br><span class="line">&gt;            nn.Upsample(scale_factor=<span class="number">2</span>),</span><br><span class="line">&gt;            nn.Conv2d(<span class="number">128</span>, <span class="number">128</span>, <span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">&gt;            nn.BatchNorm2d(<span class="number">128</span>, <span class="number">0.8</span>),</span><br><span class="line">&gt;            nn.LeakyReLU(<span class="number">0.2</span>, inplace=<span class="keyword">True</span>),</span><br><span class="line">&gt;            nn.Upsample(scale_factor=<span class="number">2</span>),</span><br><span class="line">&gt;            nn.Conv2d(<span class="number">128</span>, <span class="number">64</span>, <span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">&gt;            nn.BatchNorm2d(<span class="number">64</span>, <span class="number">0.8</span>),</span><br><span class="line">&gt;            nn.LeakyReLU(<span class="number">0.2</span>, inplace=<span class="keyword">True</span>),</span><br><span class="line">&gt;            nn.Conv2d(<span class="number">64</span>, opt.channels, <span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">&gt;            nn.Tanh()</span><br><span class="line">&gt;        )</span><br><span class="line">&gt;</span><br><span class="line">&gt;    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, z)</span>:</span></span><br><span class="line">&gt;        out = self.l1(z)</span><br><span class="line">&gt;        out = out.view(out.shape[<span class="number">0</span>], <span class="number">128</span>, self.init_size, self.init_size)</span><br><span class="line">&gt;        img = self.conv_blocks(out)</span><br><span class="line">&gt;        <span class="keyword">return</span> img</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote></blockquote><p>&#x770B;&#x8FD9;&#x4E2A;&#x751F;&#x6210;&#x7F51;&#x7EDC;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x9700;&#x8981;&#x4ECE;<code>def forward(self,z):</code>&#x770B;&#x8D77;&#x3002;&#x8FD9;&#x4E2A;&#x662F;&#x6570;&#x636E;&#x771F;&#x6B63;&#x88AB;&#x5904;&#x7406;&#x7684;&#x6D41;&#x7A0B;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x5904;&#x7406;&#x7684;&#x987A;&#x5E8F;&#x662F;&#xFF1A;</p><ol><li><p><code>out = self.l1(z)</code></p></li><li><p><code>out = out.view(out.shape[0], 128, self.init_size, self.init_size)</code></p></li><li><p><code>img = self.conv_blocks(out)</code></p></li><li><p><code>return img</code></p></li></ol><p>&#x7B2C;&#x4E00;&#x4E2A;&#x8BED;&#x53E5;&#x6267;&#x884C;&#x7684;&#x662F;<code>l1</code>&#x51FD;&#x6570;,&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5728;&#x4E0A;&#x9762;&#x7684;<code>class</code>&#x91CC;&#x9762;&#x5B9A;&#x4E49;&#x597D;&#x4E86;&#xFF1A;<code>self.l1 = nn.Sequential(nn.Linear(opt.latent_dim, 128*self.init_size**2))</code>&#x8FD9;&#x4E2A;&#x8BED;&#x53E5;&#x7684;&#x610F;&#x601D;&#x5C31;&#x662F;<code>l1</code>&#x51FD;&#x6570;&#x8FDB;&#x884C;&#x7684;&#x662F;<code>Linear</code>&#x53D8;&#x6362;&#x3002;&#x8FD9;&#x4E2A;&#x7EBF;&#x6027;&#x53D8;&#x6362;&#x7684;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x53D8;&#x6362;&#x524D;&#x7684;&#x7EF4;&#x5EA6;&#xFF0C;&#x548C;&#x53D8;&#x6362;&#x4E4B;&#x540E;&#x7684;&#x7EF4;&#x5EA6;&#x3002;&#x535A;&#x4E3B;&#x5EFA;&#x8BAE;&#x5927;&#x5BB6;&#x4E00;&#x4E2A;&#x5B66;&#x4E60;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;<code>&#x5982;&#x679C;&#x4F60;&#x4F7F;&#x7528;&#x7684;&#x662F;pycharm &#x5C31;&#x53EF;&#x4EE5;&#x9009;&#x4E2D;&#x4F60;&#x60F3;&#x4E86;&#x89E3;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x6309;&#x4E0B;ctrl + B &#x5C31;&#x53EF;&#x4EE5;&#x8DF3;&#x8F6C;&#x5230;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#x5904;&#xFF0C;&#x4E00;&#x822C;&#x5728;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x91CC;&#x90FD;&#x4F1A;&#x6709;&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x7684;&#x4ECB;&#x7ECD;&#xFF0C;&#x4EE5;&#x53CA;example&#xFF0C;&#x975E;&#x5E38;&#x597D;&#x7528;&#x3002;</code></p><p>&#x90A3;&#x4F60;&#x4F1A;&#x95EE;&#x4E86;&#xFF1A;&#x8FD9;&#x4E2A;<code>Linear</code>&#x51FD;&#x6570;&#x91CC;&#x9762;&#x4F7F;&#x7528;&#x7684;&#x53C2;&#x6570;&#x662F; <code>self.init_size = opt.img_size // 4</code>&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x662F;<code>opt.img_size</code>&#x5462;&#xFF0C;&#x8FD9;&#x4E2A;&#x5C31;&#x662F;&#x63A5;&#x4E0B;&#x6765;&#x9700;&#x8981;&#x8BF4;&#x7684;&#x4E00;&#x4E2A;<code>&#x4E0A;&#x91C7;&#x6837;</code>.</p><p>&#x7B2C;&#x4E8C;&#x4E2A;&#x8BED;&#x53E5;&#x6267;&#x884C;&#x7684;&#x662F;<code>view()</code>&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x7EF4;&#x5EA6;&#x53D8;&#x6362;&#x51FD;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;<code>out</code>&#x6570;&#x636E;&#x53D8;&#x6210;&#x4E86;&#x56DB;&#x7EF4;&#x6570;&#x636E;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x662F;<code>batch_size(&#x901A;&#x8FC7;&#x6574;&#x4E2A;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4F60;&#x5C31;&#x53EF;&#x4EE5;&#x660E;&#x767D;&#x4E86;)</code>,&#x7B2C;&#x4E8C;&#x4E2A;&#x662F;<code>channel</code>&#xFF0C;&#x7B2C;&#x4E09;,&#x56DB;&#x662F;&#x5355;&#x5F20;&#x56FE;&#x7247;&#x7684;&#x957F;&#x5BBD;&#x3002;</p><p>&#x7B2C;&#x4E09;&#x4E2A;&#x8BED;&#x53E5;&#x6267;&#x884C;&#x7684;&#x662F;<code>self.conv_blocks(out)</code>&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x6211;&#x4EEC;&#x5F80;&#x4E0A;&#x770B;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF1A;</p><blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt;self.conv_blocks = nn.Sequential(</span><br><span class="line">&gt;            nn.BatchNorm2d(<span class="number">128</span>),</span><br><span class="line">&gt;            nn.Upsample(scale_factor=<span class="number">2</span>),</span><br><span class="line">&gt;            nn.Conv2d(<span class="number">128</span>, <span class="number">128</span>, <span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">&gt;            nn.BatchNorm2d(<span class="number">128</span>, <span class="number">0.8</span>),</span><br><span class="line">&gt;            nn.LeakyReLU(<span class="number">0.2</span>, inplace=<span class="keyword">True</span>),</span><br><span class="line">&gt;            nn.Upsample(scale_factor=<span class="number">2</span>),</span><br><span class="line">&gt;            nn.Conv2d(<span class="number">128</span>, <span class="number">64</span>, <span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">&gt;            nn.BatchNorm2d(<span class="number">64</span>, <span class="number">0.8</span>),</span><br><span class="line">&gt;            nn.LeakyReLU(<span class="number">0.2</span>, inplace=<span class="keyword">True</span>),</span><br><span class="line">&gt;            nn.Conv2d(<span class="number">64</span>, opt.channels, <span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">&gt;            nn.Tanh()</span><br><span class="line">&gt;        )</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote></blockquote><p><code>nn.sequential{}</code>&#x662F;&#x4E00;&#x4E2A;&#x7EC4;&#x6210;&#x6A21;&#x578B;&#x7684;&#x58F3;&#x5B50;&#xFF0C;&#x7528;&#x6765;&#x5BB9;&#x7EB3;&#x4E0D;&#x540C;&#x7684;&#x64CD;&#x4F5C;&#x3002;</p><p>&#x6211;&#x4EEC;&#x5927;&#x4F53;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x58F3;&#x5B50;&#x91CC;&#x9762;&#x662F;&#x7531;<code>BatchNorm2d</code>&#xFF0C;<code>Upsample</code>&#xFF0C;<code>Conv2d</code>&#xFF0C;<code>LeakyReLU</code>&#x7EC4;&#x6210;&#x3002;</p><p>&#x7B2C;&#x4E00;&#x4E2A;&#x662F;&#x5F52;&#x4E00;&#x5316;&#x51FD;&#x6570;&#x5BF9;&#x6570;&#x636E;&#x7684;&#x5F62;&#x72B6;&#x6CA1;&#x5F71;&#x54CD;&#x4E3B;&#x8981;&#x5C31;&#x662F;&#x6539;&#x53D8;&#x6570;&#x636E;&#x7684;&#x91CF;&#x7EB2;&#x3002;</p><p>&#x7B2C;&#x4E8C;&#x4E2A;&#x51FD;&#x6570;&#x662F;&#x4E0A;&#x91C7;&#x6837;&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4F1A;&#x5C06;&#x5355;&#x5F20;&#x56FE;&#x7247;&#x7684;&#x5C3A;&#x5BF8;&#x8FDB;&#x884C;&#x653E;&#x5927;&#xFF08;<code>&#x8FD9;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;class&#x6700;&#x5148;&#x5F00;&#x59CB;&#x5C06;&#x56FE;&#x7247;&#x7684;&#x957F;&#x5BBD;&#x9664;&#x4E86;4&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x58F3;&#x5B50;&#x91CC;&#x9762;&#x5B58;&#x5728;&#x4E24;&#x4E2A;2&#x500D;&#x7684;&#x4E0A;&#x91C7;&#x6837;&#x51FD;&#x6570;</code>&#xFF09;&#x3002;</p><p>&#x7B2C;&#x4E09;&#x4E2A;&#x51FD;&#x6570;&#x662F;&#x4E8C;&#x7EF4;&#x5377;&#x79EF;&#x51FD;&#x6570;&#xFF0C;&#x5404;&#x4E2A;&#x53C2;&#x6570;&#x5206;&#x522B;&#x662F;&#x8F93;&#x5165;&#x6570;&#x636E;&#x7684;<code>channel</code>&#xFF0C;&#x8F93;&#x51FA;&#x6570;&#x636E;&#x7684;<code>channel</code>&#xFF0C;&#x5269;&#x4E0B;&#x7684;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x5377;&#x79EF;&#x7684;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#xFF1A;&#x5377;&#x79EF;&#x6B65;&#x957F;&#xFF0C;&#x5377;&#x79EF;&#x6838;&#x5927;&#x5C0F;&#xFF0C;padding&#x7684;&#x5927;&#x5C0F;&#x3002;&#x8FD9;&#x4E2A;&#x4E8C;&#x7EF4;&#x5377;&#x79EF;&#x51FD;&#x6570;&#x4F1A;&#x5BF9;<code>channel</code>&#x7684;&#x5927;&#x5C0F;&#x6709;&#x5F71;&#x54CD;&#xFF0C;&#x540C;&#x65F6;&#x8FD8;&#x4F1A;&#x5BF9;&#x5355;&#x5F20;&#x56FE;&#x7247;&#x7684;&#x5927;&#x5C0F;&#x6709;&#x5F71;&#x54CD;&#x3002;&#x5377;&#x79EF;&#x7684;&#x8BA1;&#x7B97;&#x516C;&#x5F0F;$H_{out} = (H_{in}-1)<em> S-2</em>P +K $</p><p>&#x7B2C;&#x56DB;&#x4E2A;&#x51FD;&#x6570;&#x662F;&#x4E00;&#x4E2A;&#x5E26;&#x6709;&#x503E;&#x659C;&#x89D2;&#x5EA6;&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x662F;&#x7531;<code>ReLu</code>&#x51FD;&#x6570;&#x6539;&#x9020;&#x800C;&#x6765;&#x7684;&#x3002;</p><p>&#x597D;&#x4E86;&#x751F;&#x6210;&#x7F51;&#x7EDC;&#x5C31;&#x8BB2;&#x5B8C;&#x4E86;&#x3002;&#x6211;&#x4EEC;&#x518D;&#x6765;&#x770B;&#x5224;&#x522B;&#x7F51;&#x7EDC;&#xFF1A;</p><h2><span id="discriminatorx5224x522bx7f51x7edcx4ee3x7801">Discriminator&#x5224;&#x522B;&#x7F51;&#x7EDC;&#x4EE3;&#x7801;</span></h2><blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Discriminator</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">&gt;    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">&gt;        super(Discriminator, self).__init__()</span><br><span class="line">&gt;</span><br><span class="line">&gt;        <span class="function"><span class="keyword">def</span> <span class="title">discriminator_block</span><span class="params">(in_filters, out_filters, bn=True)</span>:</span></span><br><span class="line">&gt;            block = [   nn.Conv2d(in_filters, out_filters, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>),</span><br><span class="line">&gt;                        nn.LeakyReLU(<span class="number">0.2</span>, inplace=<span class="keyword">True</span>),</span><br><span class="line">&gt;                        nn.Dropout2d(<span class="number">0.25</span>)]</span><br><span class="line">&gt;            <span class="keyword">if</span> bn:</span><br><span class="line">&gt;                block.append(nn.BatchNorm2d(out_filters, <span class="number">0.8</span>))</span><br><span class="line">&gt;            <span class="keyword">return</span> block</span><br><span class="line">&gt;</span><br><span class="line">&gt;        self.model = nn.Sequential(</span><br><span class="line">&gt;            *discriminator_block(opt.channels, <span class="number">16</span>, bn=<span class="keyword">False</span>),</span><br><span class="line">&gt;            *discriminator_block(<span class="number">16</span>, <span class="number">32</span>),</span><br><span class="line">&gt;            *discriminator_block(<span class="number">32</span>, <span class="number">64</span>),</span><br><span class="line">&gt;            *discriminator_block(<span class="number">64</span>, <span class="number">128</span>),</span><br><span class="line">&gt;        )</span><br><span class="line">&gt;</span><br><span class="line">&gt;        <span class="comment"># The height and width of downsampled image</span></span><br><span class="line">&gt;        ds_size = opt.img_size // <span class="number">2</span>**<span class="number">4</span></span><br><span class="line">&gt;        self.adv_layer = nn.Sequential( nn.Linear(<span class="number">128</span>*ds_size**<span class="number">2</span>, <span class="number">1</span>),</span><br><span class="line">&gt;                                        nn.Sigmoid())</span><br><span class="line">&gt;</span><br><span class="line">&gt;    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, img)</span>:</span></span><br><span class="line">&gt;        out = self.model(img)</span><br><span class="line">&gt;        out = out.view(out.shape[<span class="number">0</span>], <span class="number">-1</span>)</span><br><span class="line">&gt;        validity = self.adv_layer(out)</span><br><span class="line">&gt;</span><br><span class="line">&gt;        <span class="keyword">return</span> validity</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><p>&#x540C;&#x6837;&#x5730;&#x7528;&#x751F;&#x6210;&#x7F51;&#x7EDC;&#x770B;&#x4EE3;&#x7801;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x770B;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x3002;&#x6570;&#x636E;&#x5904;&#x7406;&#x7684;&#x6D41;&#x7A0B;&#x5206;&#x56DB;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A;</p><ol><li><code>out = self.model(img)</code></li><li><code>out = out.view(out.shape[0], -1)</code></li><li><code>validity = self.adv_layer(out)</code></li><li><code>return validity</code></li></ol><p>&#x7B2C;&#x4E00;&#x4E2A;&#x8BED;&#x53E5;&#x6267;&#x884C;&#x7684;&#x662F;<code>model</code>&#x51FD;&#x6570;&#x3002;&#x597D;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x770B;<code>model</code>&#x51FD;&#x6570;&#x5728;<code>class</code>&#x91CC;&#x9762;&#x662F;&#x5982;&#x4F55;&#x5B9A;&#x4E49;&#x7684;&#x3002;</p><blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;  <span class="function"><span class="keyword">def</span> <span class="title">discriminator_block</span><span class="params">(in_filters, out_filters, bn=True)</span>:</span></span><br><span class="line">&gt;            block = [   nn.Conv2d(in_filters, out_filters, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>),</span><br><span class="line">&gt;                        nn.LeakyReLU(<span class="number">0.2</span>, inplace=<span class="keyword">True</span>),</span><br><span class="line">&gt;                        nn.Dropout2d(<span class="number">0.25</span>)]</span><br><span class="line">&gt;            <span class="keyword">if</span> bn:</span><br><span class="line">&gt;                block.append(nn.BatchNorm2d(out_filters, <span class="number">0.8</span>))</span><br><span class="line">&gt;            <span class="keyword">return</span> block</span><br><span class="line">&gt;</span><br><span class="line">&gt;        self.model = nn.Sequential(</span><br><span class="line">&gt;            *discriminator_block(opt.channels, <span class="number">16</span>, bn=<span class="keyword">False</span>),</span><br><span class="line">&gt;            *discriminator_block(<span class="number">16</span>, <span class="number">32</span>),</span><br><span class="line">&gt;            *discriminator_block(<span class="number">32</span>, <span class="number">64</span>),</span><br><span class="line">&gt;            *discriminator_block(<span class="number">64</span>, <span class="number">128</span>),</span><br><span class="line">&gt;        )</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><p><code>model</code>&#x51FD;&#x6570;&#x662F;&#x7531;&#x56DB;&#x4E2A;<code>discriminator_block</code>&#x51FD;&#x6570;&#x7EC4;&#x6210;&#x3002;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x518D;&#x770B;<code>discriminator_block</code>&#x51FD;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#xFF1A;</p><blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="function"><span class="keyword">def</span> <span class="title">discriminator_block</span><span class="params">(in_filters, out_filters, bn=True)</span>:</span></span><br><span class="line">&gt;            block = [   nn.Conv2d(in_filters, out_filters, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>),</span><br><span class="line">&gt;                        nn.LeakyReLU(<span class="number">0.2</span>, inplace=<span class="keyword">True</span>),</span><br><span class="line">&gt;                        nn.Dropout2d(<span class="number">0.25</span>)]</span><br><span class="line">&gt;            <span class="keyword">if</span> bn:</span><br><span class="line">&gt;                block.append(nn.BatchNorm2d(out_filters, <span class="number">0.8</span>))</span><br><span class="line">&gt;            <span class="keyword">return</span> block</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><p>&#x8FD9;&#x4E2A;&#x6A21;&#x5757;&#x662F;&#x7531;&#x56DB;&#x90E8;&#x5206;&#x7EC4;&#x6210;&#xFF1A;<code>conv2d</code>&#xFF0C;<code>leakyRelu</code>&#xFF0C;<code>Dropout</code>&#xFF0C;<code>BatchNorm2d</code>&#x3002;</p><p>&#x7B2C;&#x4E00;&#x4E2A;&#x8BED;&#x53E5;&#xFF1A;<code>conv2d</code>&#x51FD;&#x6570;&#xFF0C;&#x662F;&#x7528;&#x6765;&#x5377;&#x79EF;&#x7684;</p><p>&#x7B2C;&#x4E8C;&#x4E2A;&#x8BED;&#x53E5;&#x662F;&#xFF1A;&#x2019;leakyRelu&#x2019;&#x51FD;&#x6570;&#xFF0C;&#x7528;&#x6765;&#x505A;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x7684;</p><p>&#x7B2C;&#x4E09;&#x4E2A;&#x8BED;&#x53E5;&#xFF1A;<code>Dropout</code>&#x51FD;&#x6570;&#x7528;&#x6765;&#x5C06;&#x90E8;&#x5206;&#x795E;&#x7ECF;&#x5143;&#x5931;&#x6D3B;&#xFF0C;&#x8FDB;&#x800C;&#x9632;&#x6B62;&#x8FC7;&#x62DF;&#x5408;</p><p>&#x7B2C;&#x56DB;&#x4E2A;&#x8BED;&#x53E5;&#xFF1A;&#x5176;&#x5B9E;&#x662F;&#x4E00;&#x4E2A;&#x5224;&#x65AD;&#x8BED;&#x53E5;&#xFF0C;&#x5982;&#x679C;<code>bn</code>&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;<code>True</code>&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x9700;&#x8981;&#x5728;<code>block</code>&#x5757;&#x91CC;&#x9762;&#x6DFB;&#x52A0;&#x4E0A;<code>BatchNorm</code>&#x7684;&#x5F52;&#x4E00;&#x5316;&#x51FD;&#x6570;&#x3002;</p><p>&#x7B2C;&#x4E8C;&#x4E2A;&#x8BED;&#x53E5;&#x6267;&#x884C;&#x7684;&#x662F;<code>view(out.shape[0],-1)</code>&#xFF0C;&#x8FD9;&#x4E2A;&#x8BED;&#x53E5;&#x662F;&#x5C06;&#x5904;&#x7406;&#x4E4B;&#x540E;&#x7684;&#x6570;&#x636E;&#x7EF4;&#x5EA6;&#x53D8;&#x6210;<code>batch * N</code>&#x7684;&#x7EF4;&#x5EA6;&#x5F62;&#x5F0F;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x653E;&#x5230;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x8BED;&#x53E5;&#x91CC;&#x9762;&#x6267;&#x884C;&#x3002;</p><p>&#x7B2C;&#x4E09;&#x4E2A;&#x8BED;&#x53E5;&#xFF1A;<code>self.adv_layer</code>&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x662F;&#x7531;&#xFF1A;<code>self.adv_layer = nn.Sequential( nn.Linear(128*ds_size**2, 1),nn.Sigmoid())</code>&#x5C31;&#x662F;&#x5148;&#x8FDB;&#x884C;&#x7EBF;&#x6027;&#x53D8;&#x6362;&#xFF0C;&#x518D;&#x8FDB;&#x884C;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x6FC0;&#x6D3B;&#x3002;&#x5176;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;<code>128*ds_size**2</code>&#x4E2D;128&#x662F;&#x6307;<code>model</code>&#x6A21;&#x5757;&#x4E2D;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5224;&#x522B;&#x6A21;&#x5757;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x51B3;&#x5B9A;&#x7684;&#xFF0C;<code>ds_size</code>&#x662F;&#x7531;<code>model</code>&#x6A21;&#x5757;&#x5BF9;&#x5355;&#x5F20;&#x56FE;&#x7247;&#x7684;&#x5377;&#x79EF;&#x6548;&#x679C;&#x51B3;&#x5B9A;&#x7684;&#xFF0C;&#x800C;2&#x6B21;&#x65B9;&#x7684;&#x539F;&#x56E0;&#x662F;&#xFF0C;&#x6574;&#x4E2A;&#x6A21;&#x578B;&#x662F;&#x9009;&#x53D6;&#x7684;&#x957F;&#x5BBD;&#x4E00;&#x81F4;&#x7684;&#x56FE;&#x7247;&#x3002;</p><h2><span id="x907fx5751x6307x5357">&#x907F;&#x5751;&#x6307;&#x5357;</span></h2><p>&#x6709;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x5728;&#x8111;&#x5B50;&#x91CC;&#x9762;&#x60F3;&#x7684;&#x5F88;&#x591A;&#x8BBE;&#x60F3;&#x5176;&#x5B9E;&#x548C;&#x5B9E;&#x9645;&#x7684;&#x60C5;&#x51B5;&#x4E0D;&#x592A;&#x4E00;&#x6837;&#xFF0C;&#x6BD4;&#x5982;&#x7B2C;&#x4E00;&#x4E2A;&#x5751;&#x3002;</p><ol><li>&#x5728;MATLAB&#x548C;python&#x91CC;&#x9762;&#x7ECF;&#x5E38;&#x9047;&#x5230;&#x8FD9;&#x6837;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x660E;&#x660E;&#x8BFB;&#x53D6;&#x8FDB;&#x53BB;&#x7684;&#x56FE;&#x7247;&#x662F;&#x6B63;&#x5E38;&#x7684;&#xFF0C;&#x51FA;&#x6765;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x767D;&#x677F;&#x3002;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5728;&#x8FD9;&#x4E2A;&#x535A;&#x5BA2;<a href="https://blog.csdn.net/lyl771857509/article/details/80143134" target="_blank" rel="noopener">&#x300A;python&#x4E2D;opencv imshow&#x51FD;&#x6570;&#x663E;&#x793A;&#x4E00;&#x7247;&#x767D;&#x8272;&#x539F;&#x56E0;&#x300B;</a>&#x4E2D;&#x89E3;&#x51B3;&#x7684;&#x5F88;&#x597D;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x539F;&#x56E0;&#x662F;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x51FA;&#x73B0;&#x4E86;&#x95EE;&#x9898;&#x3002;</li></ol><h2><span id="x53c2x8003x6587x732e">&#x53C2;&#x8003;&#x6587;&#x732E;</span></h2><p><a href="https://arxiv.org/abs/1511.06434" target="_blank" rel="noopener">Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks</a></p><p><a href="https://blog.csdn.net/wspba/article/details/54730871" target="_blank" rel="noopener">DCGAN&#x8BBA;&#x6587;&#x7B14;&#x8BB0;+&#x6E90;&#x7801;&#x89E3;&#x6790;</a></p><p><a href="https://blog.csdn.net/lyl771857509/article/details/80143134" target="_blank" rel="noopener">python&#x4E2D;opencv imshow&#x51FD;&#x6570;&#x663E;&#x793A;&#x4E00;&#x7247;&#x767D;&#x8272;&#x539F;&#x56E0;</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 代码讲解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DCGAN模型 </tag>
            
            <tag> 代码调试 </tag>
            
            <tag> 函数讲解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>【3】爬虫学习-使用Selenium爬取淘宝商品</title>
      <link href="/2018/11/22/%E3%80%903%E3%80%91%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0-%E4%BD%BF%E7%94%A8Selenium%E7%88%AC%E5%8F%96%E6%B7%98%E5%AE%9D%E5%95%86%E5%93%81/"/>
      <url>/2018/11/22/%E3%80%903%E3%80%91%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0-%E4%BD%BF%E7%94%A8Selenium%E7%88%AC%E5%8F%96%E6%B7%98%E5%AE%9D%E5%95%86%E5%93%81/</url>
      
        <content type="html"><![CDATA[<p>&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;&#x4E3B;&#x8981;&#x662F;&#x901A;&#x8FC7;Selenium&#x6765;&#x6A21;&#x62DF;&#x6D4F;&#x89C8;&#x5668;&#x64CD;&#x4F5C;&#xFF0C;&#x6293;&#x53D6;&#x6DD8;&#x5B9D;&#x5546;&#x54C1;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x5C06;&#x7ED3;&#x679C;&#x4FDD;&#x5B58;&#x5230;MongoDB&#x4E2D;&#x3002;</p><a id="more"></a><p>&#x6DD8;&#x5B9D;&#x4E3A;&#x4EC0;&#x4E48;&#x9700;&#x8981;&#x7528;&#x6240;&#x8C13;&#x7684;<code>Selenium</code>&#x6765;&#x8FDB;&#x884C;&#x6293;&#x53D6;&#x5462;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x6DD8;&#x5B9D;&#x8FD9;&#x79CD;&#x9875;&#x9762;&#xFF0C;&#x5176;Ajax&#x63A5;&#x53E3;&#x5305;&#x542B;&#x5F88;&#x591A;&#x52A0;&#x5BC6;&#x53C2;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x5F88;&#x96BE;&#x4ECE;&#x4E2D;&#x627E;&#x51FA;&#x89C4;&#x5F8B;&#x3002;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x5F15;&#x5165;<code>Selenium</code>&#x3002;</p><h2><span id="seleniumx7b80x4ecb">Selenium&#x7B80;&#x4ECB;</span></h2><p><code>Selenium</code>&#x662F;&#x81EA;&#x52A8;&#x5316;&#x6D4B;&#x8BD5;&#x5DE5;&#x5177;&#xFF0C;&#x5229;&#x7528;&#x5B83;&#x53EF;&#x4EE5;&#x9A71;&#x52A8;&#x6D4F;&#x89C8;&#x5668;&#x6267;&#x884C;&#x7279;&#x5B9A;&#x7684;&#x52A8;&#x4F5C;&#xFF0C;&#x6BD4;&#x5982;&#x70B9;&#x51FB;&#x3001;&#x4E0B;&#x62C9;&#x7B49;&#x64CD;&#x4F5C;&#xFF0C;&#x540C;&#x65F6;&#x8FD8;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x6D4F;&#x89C8;&#x5668;&#x5F53;&#x524D;&#x5448;&#x73B0;&#x7684;&#x9875;&#x9762;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x505A;&#x5230;&#x53EF;&#x89C1;&#x5373;&#x53EF;&#x722C;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E00;&#x4E9B;<code>JavaScript</code>&#x52A8;&#x6001;&#x6E32;&#x67D3;&#x7684;&#x9875;&#x9762;&#x6765;&#x8BF4;&#xFF0C;&#x8FD9;&#x79CD;&#x6293;&#x53D6;&#x5F88;&#x6709;&#x6548;&#x3002;&#x9664;&#x4E86;&#x9700;&#x8981;<code>Selenium</code>&#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x4E0E;&#x4E4B;&#x642D;&#x914D;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;<code>Chrome</code>&#x6D4F;&#x89C8;&#x5668;&#x548C;<code>ChromeDriver</code>&#x9A71;&#x52A8;&#x7684;&#x914D;&#x7F6E;</p><ul><li><code>Selenium</code>&#x5B89;&#x88C5;</li></ul><blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;pip install selenium</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><ul><li><code>ChromDriver</code>&#x5B89;&#x88C5;</li></ul><blockquote><p>&#x9996;&#x5148;&#x67E5;&#x770B;Chrome&#x7684;&#x7248;&#x672C;&#x53F7;&#xFF1A;&#x901A;&#x8FC7;&#x70B9;&#x51FB;Chrome&#x7684;&#x83DC;&#x5355;&#x5E2E;&#x52A9;-&gt;&#x5173;&#x4E8E;Google Chrome&#x91CC;&#x9762;&#x5C31;&#x6709;&#x5176;&#x7248;&#x672C;&#x53F7;</p><p>&#x7136;&#x540E;&#x6839;&#x636E;Chrome&#x7684;&#x7248;&#x672C;&#x53F7;&#xFF0C;&#x4E0B;&#x8F7D;ChromeDriver&#x7684;&#x578B;&#x53F7;&#x3002;</p><p>&#x7136;&#x540E;&#x914D;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#xFF0C;&#x5177;&#x4F53;&#x770B;&#x300A;python3 &#x7F51;&#x7EDC;&#x722C;&#x866B;&#x5F00;&#x53D1;&#x5B9E;&#x6218;&#x300B;&#x7684;&#x4ECB;&#x7ECD;&#x3002;</p></blockquote><ul><li><code>Selenium</code>&#x7684;&#x4F7F;&#x7528;</li></ul><blockquote><ul><li>&#x7533;&#x660E;&#x6D4F;&#x89C8;&#x5668;&#x5BF9;&#x8C61;&#x5E76;&#x8BBF;&#x95EE;&#x9875;&#x9762;</li></ul><blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;<span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line">&gt;&gt;</span><br><span class="line">&gt;&gt;browser = webdriver.Chrome()</span><br><span class="line">&gt;&gt;browser.get(<span class="string">&apos;http://www.taobao.com&apos;</span>)</span><br><span class="line">&gt;&gt;print(browser.page_source)</span><br><span class="line">&gt;&gt;browser.close()</span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote></blockquote><blockquote><ul><li><p>&#x67E5;&#x627E;&#x8282;&#x70B9;</p><ol><li><p>&#x5355;&#x4E2A;&#x8282;&#x70B9;</p><p>&#x67E5;&#x627E;&#x5355;&#x4E2A;&#x8282;&#x70B9;&#x6BD4;&#x5982;&#x641C;&#x7D22;&#x6846;&#xFF0C;&#x9996;&#x5148;&#x8981;&#x770B;&#x6E90;&#x7801;&#xFF0C;&#x901A;&#x8FC7;&#x9009;&#x5B9A;&#x9875;&#x9762;&#x5143;&#x7D20;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x7F51;&#x9875;&#x6E90;&#x7801;&#x4E2D;&#x67E5;&#x770B;&#x5230;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;<code>find_element_by_name()</code>&#x4EE5;&#x53CA;<code>find_element_by_id()&#x6216;&#x8005;find_element(BY,ID,id)</code>&#x6765;&#x83B7;&#x53D6;&#x76F8;&#x5173;&#x7684;&#x5C5E;&#x6027;&#x3002;</p></li><li><p>&#x591A;&#x4E2A;&#x8282;&#x70B9;</p><p>&#x83B7;&#x53D6;&#x591A;&#x4E2A;&#x8282;&#x70B9;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;<code>find_elements()</code>&#x6765;&#x5F97;&#x5230;&#x3002;</p></li><li><p>&#x8282;&#x70B9;&#x4EA4;&#x4E92;</p><p>&#x8282;&#x70B9;&#x4EA4;&#x4E92;&#x5C31;&#x662F;&#x6A21;&#x62DF;&#x6211;&#x4EEC;&#x5E73;&#x5E38;&#x5728;&#x7F51;&#x9875;&#x4E0A;&#x7684;&#x64CD;&#x4F5C;&#x3002;&#x6BD4;&#x5982;&#x4E0B;&#x9762;&#x8FD9;&#x4E2A;</p></li></ol><blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;  &gt;<span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line">&gt;  &gt;<span class="keyword">import</span> time</span><br><span class="line">&gt;  &gt;</span><br><span class="line">&gt;  &gt;browser = webdriver.Chrome()</span><br><span class="line">&gt;  &gt;browser.get(<span class="string">&apos;http://www.taobao.com&apos;</span>)</span><br><span class="line">&gt;  &gt;input=browser.find_element_by_id(<span class="string">&apos;q&apos;</span>)</span><br><span class="line">&gt;  &gt;input.send_keys(<span class="string">&apos;iphone&apos;</span>)</span><br><span class="line">&gt;  &gt;time.sleep(<span class="number">1</span>)</span><br><span class="line">&gt;  &gt;input.clear()</span><br><span class="line">&gt;  &gt;input.send_keys(<span class="string">&apos;ipad&apos;</span>)</span><br><span class="line">&gt;  &gt;button=browser.find_element_by_class_name(<span class="string">&apos;btn-search&apos;</span>)</span><br><span class="line">&gt;  &gt;button.click()</span><br><span class="line">&gt;  &gt;</span><br></pre></td></tr></tbody></table></figure></blockquote></li></ul></blockquote><blockquote><blockquote><p>&#x66F4;&#x591A;&#x7684;&#x5E38;&#x89C1;&#x8282;&#x70B9;&#x52A8;&#x4F5C;&#x64CD;&#x4F5C;&#xFF0C;&#x53EF;&#x4EE5;&#x67E5;&#x770B;<a href="https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement" target="_blank" rel="noopener">&#x5B98;&#x65B9;&#x6587;&#x6863;</a></p></blockquote><ol start="4"><li><p>&#x52A8;&#x4F5C;&#x94FE;</p><p>&#x6BD4;&#x5982;&#x6267;&#x884C;&#x9F20;&#x6807;&#x62D6;&#x52A8;&#x3001;&#x952E;&#x76D8;&#x6309;&#x952E;&#x706F;&#x6CA1;&#x6709;&#x7279;&#x5B9A;&#x6267;&#x884C;&#x5BF9;&#x8C61;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x52A8;&#x4F5C;&#x94FE;&#x6765;&#x6267;&#x884C;&#x3002;&#x6BD4;&#x5982;&#x4E0B;&#x9762;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#x5C06;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x62D6;&#x66F3;&#x81F3;&#x53E6;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x5904;&#x3002;</p><blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;  &gt;<span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line">&gt;  &gt;<span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line">&gt;  &gt;</span><br><span class="line">&gt;  &gt;browser = webdriver.Chrome()</span><br><span class="line">&gt;  &gt;url = <span class="string">&apos;http://www.runoob.com/&apos;</span></span><br><span class="line">&gt;  &gt;browser.get(url)</span><br><span class="line">&gt;  &gt;browser.switch_to_frame(<span class="string">&apos;iframeResult&apos;</span>)</span><br><span class="line">&gt;  &gt;source =browser.find_element_by_css_selector(<span class="string">&apos;#draggable&apos;</span>)</span><br><span class="line">&gt;  &gt;target =browser.find_element_by_css_selector(<span class="string">&apos;#droppable&apos;</span>)</span><br><span class="line">&gt;  &gt;actions=ActionChains(browser)</span><br><span class="line">&gt;  &gt;actios.drag_and_drop(source,target)</span><br><span class="line">&gt;  &gt;action.perform()</span><br><span class="line">&gt;  &gt;</span><br></pre></td></tr></tbody></table></figure></blockquote></li></ol></blockquote><blockquote><ol start="5"><li><p>&#x6267;&#x884C;JavaScript&#x4EE5;&#x53CA;&#x83B7;&#x53D6;&#x8282;&#x70B9;&#x4FE1;&#x606F;</p><p>selenium&#x8FD8;&#x53EF;&#x4EE5;&#x6267;&#x884C;API&#x6CA1;&#x6709;&#x7684;&#x529F;&#x80FD;&#x53EF;&#x4EE5;&#x7528;&#x6267;&#x884C;JavaScript&#xFF0C;&#x901A;&#x8FC7;page_source&#x5C5E;&#x6027;&#x83B7;&#x53D6;&#x7F51;&#x9875;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x63A5;&#x7740;&#x4F7F;&#x7528;&#x89E3;&#x6790;&#x5E93;&#xFF08;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;BeautifulSoup&#xFF0C;pyquery&#xFF09;&#x6765;&#x63D0;&#x53D6;&#x4FE1;&#x606F;&#x3002;</p></li><li><p>&#x5207;&#x6362;Frame&#x4EE5;&#x53CA;&#x5EF6;&#x65F6;&#x7B49;&#x5F85;</p><p>&#x6211;&#x4EEC;&#x7F51;&#x9875;&#x6709;&#x4E00;&#x79CD;&#x8282;&#x70B9;&#x53EB;iframe&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5B50;Frame&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x9875;&#x9762;&#x7684;&#x5B50;&#x9875;&#x9762;&#xFF0C;&#x4ED6;&#x7684;&#x7ED3;&#x6784;&#x548C;&#x5916;&#x90E8;&#x7F51;&#x9875;&#x7ED3;&#x6784;&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#x3002;</p></li></ol></blockquote><ul><li><code>Splash</code>&#x7684;&#x4F7F;&#x7528;</li></ul><blockquote><p>Splash&#x662F;&#x4E00;&#x4E2A;JavaScript&#x6E32;&#x67D3;&#x670D;&#x52A1;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x5E26;&#x6709;HTTP API&#x7684;&#x8F7B;&#x91CF;&#x7EA7;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x540C;&#x65F6;&#x4ED6;&#x5BF9;python&#x4E2D;&#x7684;Twisted&#x548C;QT&#x5E93;</p></blockquote><h2><span id="x4f7fx7528seleniumx722cx53d6x6dd8x5b9dx5546x54c1">&#x4F7F;&#x7528;<code>Selenium</code>&#x722C;&#x53D6;&#x6DD8;&#x5B9D;&#x5546;&#x54C1;</span></h2><h3><span id="x722cx53d6x601dx8def">&#x722C;&#x53D6;&#x601D;&#x8DEF;</span></h3><p>&#x722C;&#x53D6;&#x6DD8;&#x5B9D;&#x4E0A;&#x7684;&#x5546;&#x54C1;&#x7684;&#x722C;&#x866B;&#x7A0B;&#x5E8F;&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#x56DB;&#x4E2A;&#x5927;&#x7684;&#x90E8;&#x5206;&#xFF1A;</p><ul><li>&#x83B7;&#x53D6;&#x5546;&#x54C1;&#x5217;&#x8868;</li></ul><blockquote><p>&#x6293;&#x53D6;&#x7684;&#x5165;&#x53E3;&#x5C31;&#x662F;&#x6DD8;&#x5B9D;&#x7684;&#x641C;&#x7D22;&#x9875;&#x9762;&#xFF0C;&#x8FD9;&#x4E2A;&#x8FDE;&#x63A5;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x76F4;&#x63A5;&#x6784;&#x9020;&#x51FD;&#x6570;&#x6765;&#x8FDB;&#x884C;&#x8BBF;&#x95EE;&#xFF0C;&#x641C;&#x7D22;iPad&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x901A;&#x8FC7;&#x7F51;&#x5740;<code>http://s.taobao.com/search?q=ipad</code>&#x5C06;&#x5448;&#x73B0;&#x7B2C;&#x4E00;&#x9875;&#x7684;&#x641C;&#x7D22;&#x7ED3;&#x679C;&#x3002;</p></blockquote><ul><li>&#x89E3;&#x6790;&#x5546;&#x54C1;&#x5217;&#x8868;</li></ul><blockquote><p>&#x5F53;&#x6210;&#x529F;&#x52A0;&#x8F7D;&#x4E86;&#x4E00;&#x9875;&#x5546;&#x54C1;&#x4E4B;&#x540E;&#xFF0C;&#x5229;&#x7528;selenium&#x5C31;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x9875;&#x9762;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x7528;&#x76F8;&#x5E94;&#x7684;&#x89E3;&#x6790;&#x5E93;<code>Pyquery</code>&#x5E93;&#x89E3;&#x6790;&#x5C31;&#x884C;&#x4E86;&#x3002;</p></blockquote><ul><li>&#x4FDD;&#x5B58;&#x5230;MongoDB</li></ul><blockquote><p>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;MongoDB&#x7684;&#x8FDE;&#x63A5;&#x5BF9;&#x8C61;&#xFF0C;&#x6307;&#x5B9A;&#x6570;&#x636E;&#x5E93;&#x3002;</p></blockquote><ul><li>&#x904D;&#x5386;&#x6BCF;&#x9875;</li></ul><blockquote><p>&#x5546;&#x54C1;&#x7684;&#x641C;&#x7D22;&#x7ED3;&#x679C;&#x4E00;&#x822C;&#x6700;&#x5927;&#x90FD;&#x662F;100&#x9875;&#xFF0C;&#x8981;&#x83B7;&#x53D6;&#x6BCF;&#x9875;&#x7684;&#x5185;&#x5BB9;&#x5C31;&#x9700;&#x8981;&#x6709;&#x7FFB;&#x9875;&#x64CD;&#x4F5C;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5728;&#x6587;&#x672C;&#x6846;&#x4E2D;<code>&#x8F93;&#x5165;&#x9875;&#x7801;</code>&#xFF0C;&#x70B9;&#x51FB;<code>&#x786E;&#x5B9A;</code>&#x8FDB;&#x884C;&#x7FFB;&#x9875;&#xFF0C;&#x4E0D;&#x63A8;&#x8350;&#x4F7F;&#x7528;<code>&#x4E0B;&#x4E00;&#x9875;</code>&#xFF0C;&#x56E0;&#x4E3A;&#x76F4;&#x63A5;&#x70B9;&#x51FB;&#x4E0B;&#x4E00;&#x9875;&#x5BB9;&#x6613;&#x51FA;&#x73B0;&#x52A0;&#x8F7D;&#x5931;&#x8D25;&#x7684;&#x60C5;&#x51B5;&#x3002;</p></blockquote><h3><span id="x4ee3x7801">&#x4EE3;&#x7801;</span></h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span>  webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> TimeoutException</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> util <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">wait = WebDriverWait(browser,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_page</span><span class="params">(page)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x6293;&#x53D6;&#x7D22;&#x5F15;&#x9875;</span></span><br><span class="line"><span class="string">    &#xFF1A;param page: &#x9875;&#x7801;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = <span class="string">&apos;http://s.taobao.com/search?q=&apos;</span> + quote(KEYWORD)  <span class="comment"># quote&#x5BF9;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;URL&#x7F16;&#x7801;</span></span><br><span class="line">        browser.get(url)</span><br><span class="line">        <span class="keyword">if</span> page&gt;<span class="number">1</span>:</span><br><span class="line">            input = wait.until(</span><br><span class="line">                EC.presence_of_element_located((By.CSS_SELECTOR , <span class="string">&apos;#mainsrp-pager div.form&gt;input&apos;</span>)))</span><br><span class="line">            submit =wait.until(</span><br><span class="line">                EC.element_to_be_clickable((By.CSS_SELECTOR,<span class="string">&apos;#mainsrp-pager div.form&gt;span.btn.J_Submit&apos;</span>)))</span><br><span class="line">            input.clear()</span><br><span class="line">            input.send_keys(page)</span><br><span class="line">            submit.click()</span><br><span class="line">        wait.until(</span><br><span class="line">            EC.text_to_be_present_in_element((By.CSS_SELECTOR,<span class="string">&apos;#mainsrp-pager li,item.active &gt; span&apos;</span>),str(page)))</span><br><span class="line">        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR,<span class="string">&apos;.m-itemlist .item .item&apos;</span>)))</span><br><span class="line">        get_products()</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        index_page(page)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_products</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x63D0;&#x53D6;&#x5546;&#x54C1;&#x6570;&#x636E;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    html = browser.page_source</span><br><span class="line">    doc = pq(html)</span><br><span class="line">    items = doc(<span class="string">&apos;#mainsrp-itemlist .items .item&apos;</span>).items()</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        product ={</span><br><span class="line">            <span class="string">&apos;image&apos;</span>: item.find(<span class="string">&apos;.pic .img&apos;</span>).attr(<span class="string">&apos;data-src&apos;</span>),   <span class="comment"># &#x83B7;&#x53D6;data-src&#x7684;&#x5C5E;&#x6027;&#x4F5C;&#x4E3A;&#x5546;&#x54C1;&#x56FE;&#x7247;</span></span><br><span class="line">            <span class="string">&apos;price&apos;</span>: item.find(<span class="string">&apos;.price&apos;</span>).text(),</span><br><span class="line">            <span class="string">&apos;deal&apos;</span>: item.find(<span class="string">&apos;.deal-cnt&apos;</span>).text(),</span><br><span class="line">            <span class="string">&apos;title&apos;</span>: item.find(<span class="string">&apos;.title&apos;</span>).text(),</span><br><span class="line">            <span class="string">&apos;shop&apos;</span>: item.find(<span class="string">&apos;.shop&apos;</span>).text(),</span><br><span class="line">            <span class="string">&apos;location&apos;</span>: item.find(<span class="string">&apos;.location&apos;</span>).text()</span><br><span class="line">        }</span><br><span class="line">        print(product)</span><br><span class="line">        save_to_mongo(product)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Client = pymongo.MongoClient(MONGO_URL)</span><br><span class="line">db =Client[MONGO_DB]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_to_mongo</span><span class="params">(result)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x4FDD;&#x5B58;&#x5230;MongoDB</span></span><br><span class="line"><span class="string">    :param result:&#x7ED3;&#x679C;</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> db[MONGO_COLLECTION].insert(result):</span><br><span class="line">            print(<span class="string">&apos;&#x5B58;&#x50A8;&#x5230;MongoDB&#x6210;&#x529F;&apos;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        print(<span class="string">&apos;&#x5B58;&#x50A8;&#x5230;MongoDB&#x5931;&#x8D25;&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x904D;&#x5386;&#x6BCF;&#x4E00;&#x9875;</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,MAX_PAGE+<span class="number">1</span>):</span><br><span class="line">        index_page(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&apos;__main__&apos;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Selenium </tag>
            
            <tag> MongoDB </tag>
            
            <tag> 淘宝商品 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>【论文阅读】GAN模型的搭建以及运行</title>
      <link href="/2018/11/17/%E3%80%90%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E3%80%91GAN%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E8%BF%90%E8%A1%8C/"/>
      <url>/2018/11/17/%E3%80%90%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E3%80%91GAN%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E8%BF%90%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>&#x6211;&#x5B66;&#x4E60;GAN&#x662F;&#x56E0;&#x4E3A;&#x79D1;&#x7814;&#x9879;&#x76EE;&#x7684;&#x9700;&#x8981;&#xFF0C;&#x5F53;&#x65F6;&#x60F3;&#x5230;&#x5728;&#x9879;&#x76EE;&#x4E0A;&#x4F7F;&#x7528;GAN&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x56E0;&#x7F18;&#x5DE7;&#x5408;&#x5427;&#x3002;2018&#x89C6;&#x89C9;&#x4E0E;&#x5B66;&#x4E60;&#x9752;&#x5E74;&#x5B66;&#x8005;&#x7814;&#x8BA8;&#x4F1A;&#x5728;&#x5927;&#x8FDE;&#x8FDB;&#x884C;&#xFF0C;&#x7136;&#x540E;&#x8E6D;&#x4E86;&#x51E0;&#x573A;talk&#xFF0C;&#x548C;&#x4E00;&#x5E2E;&#x5927;&#x4F6C;&#x8C08;&#x7B11;&#x98CE;&#x751F;&#xFF0C;&#x611F;&#x89C9;&#x81EA;&#x5DF1;&#x540A;&#x540A;&#x7684;&#x3002;&#x5F53;&#x7136;&#x8FD9;&#x4E0D;&#x662F;&#x91CD;&#x70B9;&#xFF0C;&#x91CD;&#x70B9;&#x662F;&#x5F53;&#x65F6;&#x542C;&#x4E86;&#x4E00;&#x573A;&#x4F9D;&#x56FE;&#x79D1;&#x6280;&#x6709;&#x5173;&#x6838;&#x78C1;&#x5171;&#x632F;&#x56FE;&#x50CF;&#x7684;talk&#xFF0C;&#x5F53;&#x65F6;&#x4E0B;&#x9762;&#x6709;&#x4EBA;&#x63D0;&#x5230;&#x4E86;&#xFF0C;&#x6837;&#x672C;&#x4E0D;&#x5747;&#x8861;&#x7684;&#x95EE;&#x9898;&#x3002;&#x5F53;&#x65F6;&#x4F9D;&#x56FE;&#x79D1;&#x6280;&#x7684;&#x5434;&#x53CC;&#x535A;&#x58EB;&#x7ED9;&#x51FA;&#x4E86;GAN&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002;&#x56E0;&#x6B64;&#x8FC1;&#x79FB;&#x5230;&#x6211;&#x7684;&#x79D1;&#x7814;&#x9879;&#x76EE;&#x4E0A;&#xFF0C;&#x6211;&#x601D;&#x8003;&#x4E86;&#x662F;&#x4E0D;&#x662F;&#x6211;&#x7684;&#x9879;&#x76EE;&#x4E5F;&#x80FD;&#x8FD9;&#x4E48;&#x7528;&#x5462;&#x3002;&#x4ECE;&#x6B64;&#x5F00;&#x59CB;&#x4E86;GAN&#x7684;&#x6389;&#x5751;&#x722C;&#x5751;&#x4E4B;&#x65C5;&#x3002;</p><a id="more"></a><p>&#x6700;&#x8FD1;&#x5728;&#x5DE5;&#x4F5C;&#x7AD9;&#x4E0A;&#x5B89;&#x88C5;&#x4E86;pycharm&#xFF0C;anaconda&#x548C;pytorch&#x3002;&#x7B97;&#x662F;&#x628A;&#x57FA;&#x672C;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x7136;&#x540E;&#x9700;&#x8981;&#x5F00;&#x59CB;&#x505A;&#x7684;&#x662F;&#x5C06;github&#x4E0A;&#x4E00;&#x4E9B;BEGAN&#x6A21;&#x578B;&#x7684;&#x7A0B;&#x5E8F;&#x8DD1;&#x8D77;&#x6765;&#x3002;&#x7136;&#x540E;&#x6839;&#x636E;&#x624B;&#x5934;&#x7684;&#x56FE;&#x7247;&#x6539;&#x4E00;&#x4E9B;&#x4EE3;&#x7801;&#x53C2;&#x6570;&#x3002;&#x672C;&#x6587;&#x7684;&#x5F00;&#x5934;&#x5462;&#xFF0C;&#x8FD8;&#x662F;&#x4E00;&#x5982;&#x5F80;&#x5E38;&#xFF0C;&#x4E0D;&#x662F;&#x76F4;&#x63A5;&#x5F00;&#x59CB;&#x8BB2;&#x6A21;&#x578B;&#xFF0C;&#x800C;&#x662F;&#x5148;&#x8BB2;&#x4E00;&#x4E9B;&#x5C0F;&#x7684;&#x77E5;&#x8BC6;&#x70B9;&#x3002;&#x56E0;&#x4E3A;&#x6211;&#x4E5F;&#x662F;&#x767D;&#x624B;&#x8D77;&#x5BB6;&#x5F00;&#x59CB;&#x5B66;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x76F8;&#x5173;&#x7684;&#x77E5;&#x8BC6;&#xFF0C;&#x5E76;&#x4E14;&#x9700;&#x8981;&#x5229;&#x7528;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x89E3;&#x51B3;&#x9879;&#x76EE;&#x4E0A;&#x7684;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#x3002;&#x56E0;&#x6B64;&#x5728;&#x5F88;&#x591A;&#x65F6;&#x5019;&#x4F1A;&#x9047;&#x5230;&#x4E0D;&#x5C11;&#x5F00;&#x59CB;&#x4EE5;&#x4E3A;&#x5F88;&#x96BE;&#xFF0C;&#x4F46;&#x662F;&#x89E3;&#x51B3;&#x4E4B;&#x540E;&#x611F;&#x89C9;&#x5F88;&#x7B80;&#x5355;&#x7684;&#x95EE;&#x9898;&#x3002;&#x5176;&#x5B9E;&#x8BF4;&#x767D;&#x4E86;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x57FA;&#x7840;&#x4E0D;&#x591F;&#x624E;&#x5B9E;&#x3002;&#x597D;&#x4E86;&#xFF0C;&#x5E9F;&#x8BDD;&#x4E0D;&#x591A;&#x8BF4;&#xFF0C;&#x5F00;&#x59CB;&#x8BB2;&#x5E72;&#x8D27;&#x4E86;&#x3002;</p><h2><span id="x9047x5230x7684x4e00x4e9bx5947x602ax95eex9898">&#x9047;&#x5230;&#x7684;&#x4E00;&#x4E9B;&#x5947;&#x602A;&#x95EE;&#x9898;</span></h2><h3><span id="pytorchx4e2dpthx6587x4ef6x7684x4f5cx7528">pytorch&#x4E2D;.pth&#x6587;&#x4EF6;&#x7684;&#x4F5C;&#x7528;</span></h3><p>&#x200B;    &#x5728;github&#x4E0A;&#x4E0B;&#x8F7D;&#x4E0B;&#x6765;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x7ECF;&#x5E38;&#x4F1A;&#x770B;&#x5230;.pth&#x6587;&#x4EF6;&#xFF0C;&#x6211;&#x5F00;&#x59CB;&#x4E5F;&#x662F;&#x4E00;&#x8138;&#x8499;&#x853D;&#xFF0C;&#x540E;&#x6765;&#x67E5;&#x4E86;&#x4E00;&#x4E0B;&#x3002;pytorh&#x5B9E;&#x73B0;&#x5BF9;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x548C;&#x6A21;&#x578B;&#x53C2;&#x6570;&#x7684;&#x4FDD;&#x5B58;&#x3002;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A;&#x4E00;&#x662F;&#x4FDD;&#x5B58;&#x6574;&#x4E2A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x7ED3;&#x6784;&#x4FE1;&#x606F;&#x548C;&#x6A21;&#x578B;&#x53C2;&#x6570;&#x4FE1;&#x606F;&#xFF0C;<code>save</code>&#x7684;&#x5BF9;&#x8C61;&#x662F;&#x7F51;&#x7EDC;<code>net</code>&#xFF1B;&#x4E8C;&#x662F;&#x53EA;&#x4FDD;&#x5B58;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#x53C2;&#x6570;&#xFF0C;<code>save</code>&#x7684;&#x5BF9;&#x8C61;&#x662F;<code>net.state_dict()</code>&#x3002;</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## &#x4E24;&#x79CD;&#x4FDD;&#x5B58;&#x6A21;&#x578B;&#x7684;&#x65B9;&#x5F0F;</span></span><br><span class="line">torch.save(model_object,<span class="string">&apos;net.pth&apos;</span>)     <span class="comment"># &#x4FDD;&#x5B58;&#x6574;&#x4E2A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x7ED3;&#x6784;&#x548C;&#x6A21;&#x578B;&#x53C2;&#x6570;</span></span><br><span class="line">torch.save(net.state_dict(),<span class="string">&apos;net.pth&apos;</span>) <span class="comment"># &#x53EA;&#x4FDD;&#x5B58;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6A21;&#x578B;&#x53C2;&#x6570;</span></span><br><span class="line"><span class="comment">## &#x4E24;&#x79CD;&#x52A0;&#x8F7D;&#x6A21;&#x578B;&#x7684;&#x65B9;&#x5F0F;</span></span><br><span class="line">torch.load(<span class="string">&apos;.pth&apos;</span>)    <span class="comment"># &#x5BF9;&#x5E94;&#x7B2C;&#x4E00;&#x79CD;&#x4FDD;&#x5B58;&#x5B8C;&#x6574;&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x4FE1;&#x606F;&#xFF0C;&#x91CD;&#x8F7D;&#x7684;&#x65F6;&#x5019;&#x76F4;&#x63A5;&#x521D;&#x59CB;&#x5316;&#x65B0;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5BF9;&#x8C61;</span></span><br><span class="line">net.load_state_dict(torch.load(<span class="string">&apos;.pth&apos;</span>))   <span class="comment">#&#x5BF9;&#x4E8E;&#x7B2C;&#x4E8C;&#x79CD;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x5BFC;&#x5165;&#x5BF9;&#x5E94;&#x7684;&#x7F51;&#x7EDC;</span></span><br></pre></td></tr></tbody></table></figure><h3><span id="pythonx76f4x63a5x8f93x5165x5230x6587x4ef6">Python&#x76F4;&#x63A5;&#x8F93;&#x5165;&#x5230;&#x6587;&#x4EF6;</span></h3><p>print&#x8F93;&#x51FA;&#x76F4;&#x63A5;&#x5230;&#x6587;&#x4EF6;&#x91CC; &#xFF0C;&#x5728;pyton2&#x548C;3&#x4E2D;&#x4E0D;&#x4E00;&#x6837;&#x3002;</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python3 </span></span><br><span class="line">k=<span class="number">10</span></span><br><span class="line">f=open(<span class="string">&quot;./output/recard&quot;</span>,<span class="string">&quot;w+&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">    print(<span class="string">&quot;&#x7B2C;{0}&#x6761;&#x6570;&#x636E;&quot;</span>.format(i),file=f)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># python2</span></span><br><span class="line">k=<span class="number">10</span></span><br><span class="line">f=open(<span class="string">&quot;./output/recard&quot;</span>,<span class="string">&quot;w+&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">    <span class="keyword">print</span>&gt;&gt;f,<span class="string">&quot;&#x7B2C;{0}&#x6761;&#x6570;&#x636E;&quot;</span>.format(i)</span><br></pre></td></tr></tbody></table></figure><h3><span id="pycharmx8fdbx884cpythonx8c03x8bd5">pycharm&#x8FDB;&#x884C;python&#x8C03;&#x8BD5;</span></h3><p>&#x60F3;&#x8C08;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x662F;&#x56E0;&#x4E3A;&#xFF0C;&#x6700;&#x8FD1;&#x9047;&#x5230;&#x7A0B;&#x5E8F;&#x603B;&#x662F;&#x62A5;&#x9519;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x4E00;&#x4E2A;&#x79D1;&#x5B66;&#x7684;python&#x8C03;&#x8BD5;&#x65B9;&#x6848;&#xFF0C;&#x6574;&#x4E2A;&#x9879;&#x76EE;&#x8FDB;&#x5EA6;&#x4F1A;&#x975E;&#x5E38;&#x7F13;&#x6162;&#x3002;&#x5728;&#x8BB2;python&#x7684;debug&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5148;&#x56DE;&#x987E;&#x4E00;&#x4E0B;<code>visual studio</code>&#x4E0A;<code>C++</code> &#x7684;&#x8C03;&#x8BD5;&#x3002;</p><ul><li>&#x6211;&#x4EEC;&#x5148;&#x8BBE;&#x7F6E;&#x65AD;&#x70B9;&#xFF0C;&#x8FD9;&#x6837;&#x7A0B;&#x5E8F;&#x5C31;&#x5C06;&#x8FD0;&#x884C;&#x5230;&#x8FD9;&#x4E2A;&#x4F4D;&#x7F6E;&#x505C;&#x4E0B;&#x6765;</li><li>&#x7136;&#x540E;&#x6309;<code>F5</code>&#xFF0C;&#x7A0B;&#x5E8F;&#x5C06;&#x5904;&#x4E8E;&#x8C03;&#x8BD5;&#x72B6;&#x6001;&#x8FDB;&#x884C;&#x8FD0;&#x884C;</li><li>&#x7136;&#x540E;&#x6309;<code>F11</code>&#x7A0B;&#x5E8F;&#x5C06;&#x9010;&#x8BED;&#x53E5;&#x8FDB;&#x884C;&#x8FD0;&#x884C;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x4F60;&#x5C06;&#x770B;&#x5230;&#x6BCF;&#x4E2A;&#x8BED;&#x53E5;&#x8FD0;&#x884C;&#x4E4B;&#x540E;&#xFF0C;&#x5404;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x503C;</li><li>&#x5F53;&#x4F60;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x60F3;&#x770B;&#x7A0B;&#x5E8F;&#x5728;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5404;&#x4E2A;&#x53D8;&#x91CF;&#x90FD;&#x662F;&#x600E;&#x4E48;&#x53D8;&#x5316;&#x7684;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x6309;<code>F10</code>&#xFF0C;&#x7A0B;&#x5E8F;&#x5C06;&#x8FDB;&#x5165;&#x51FD;&#x6570;&#x8FDB;&#x884C;&#x8FD0;&#x884C;&#xFF0C;&#x7136;&#x540E;&#x4F60;&#x518D;&#x6309;<code>F11</code>&#x7A0B;&#x5E8F;&#x5C06;&#x5728;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x9010;&#x8BED;&#x53E5;&#x8FDB;&#x884C;&#x8FD0;&#x884C;&#x3002;</li></ul><p>&#x7C7B;&#x4F3C;&#x5730;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x5728;pycharm&#x4E0A;python&#x5982;&#x4F55;&#x8FDB;&#x884C;&#x8C03;&#x8BD5;&#x3002;</p><ul><li>&#x8BBE;&#x7F6E;&#x65AD;&#x70B9;&#xFF0C;&#x8FD9;&#x548C;<code>vs</code>&#x4E0A;&#x4E00;&#x6837;&#x3002;</li><li>&#x7136;&#x540E;&#x6309;&#x7EFF;&#x8272;&#x7532;&#x58F3;&#x866B;&#x7684;&#x7B26;&#x53F7;&#xFF08;&#x6216;&#x8005;&#x4F7F;&#x7528;shift+ F9&#xFF09;&#x8FDB;&#x884C;&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x3002;</li><li>&#x7136;&#x540E;&#x70B9;&#x51FB;<code>Step  Over</code>(&#x6216;&#x8005;<code>F8</code>)&#xFF0C;&#x7EE7;&#x7EED;&#x5F80;&#x4E0B;&#x8FD0;&#x884C;&#xFF0C;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;&#x65AD;&#x70B9;</li></ul><h3><span id="tensorflowx7684data_formatxff1anhwcx3001nchwx7684x533ax522bx4e0ex8f6cx6362">TensorFlow&#x7684;data_format&#xFF1A;NHWC&#x3001;NCHW&#x7684;&#x533A;&#x522B;&#x4E0E;&#x8F6C;&#x6362;</span></h3><p>&#x533A;&#x522B;&#xFF1A;</p><ul><li><code>NHWC: [batch,in_height,in_width,in_channels]</code></li><li><code>NCHW: [batch,in_channels,in_height,in_width]</code></li></ul><p>&#x8F6C;&#x6362;&#xFF1A;</p><ul><li><p>NHWC-&gt;NCHW</p><blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">&gt;x=tf.reshape(tf.range(<span class="number">24</span>),[<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>])</span><br><span class="line">&gt;out= tf.transpose(x,[<span class="number">0</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>])</span><br><span class="line">&gt;</span><br><span class="line">&gt;<span class="keyword">print</span> x.shape</span><br><span class="line">&gt;<span class="keyword">print</span> out.shape</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>&#x8F93;&#x51FA;&#xFF1A;</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;(<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>)</span><br><span class="line">&gt;(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote></li><li><p>NCHW-&gt;NHWC</p><blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">&gt;x=tf.reshape(tf.range(<span class="number">24</span>),[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">&gt;out = tf.transpose(x,[<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>])</span><br><span class="line">&gt;</span><br><span class="line">&gt;<span class="keyword">print</span> x.shape</span><br><span class="line">&gt;<span class="keyword">print</span> out.shape</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>&#x8F93;&#x51FA;&#xFF1A;</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">&gt;(<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>)</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote></li></ul><h3><span id="utilsx6587x4ef6x7684x4f5cx7528">Utils&#x6587;&#x4EF6;&#x7684;&#x4F5C;&#x7528;</span></h3><p>&#x7ECF;&#x5E38;&#x5728;&#x7A0B;&#x5E8F;&#x4E2D;&#x9047;&#x5230;Utils&#x6587;&#x4EF6;&#xFF0C;&#x5F00;&#x59CB;&#x5BF9;&#x8FD9;&#x4E2A;&#x6BD4;&#x8F83;&#x7591;&#x60D1;&#xFF0C;&#x540E;&#x6765;&#x67E5;&#x4E86;&#x4E00;&#x4E0B;&#x5B83;&#x7684;&#x4F5C;&#x7528;&#xFF0C;Utils&#x5305;&#x4E2D;&#x653E;&#x4E00;&#x4E9B;&#x5E38;&#x7528;&#x7684;&#x516C;&#x5171;&#x65B9;&#x6CD5;&#xFF0C;&#x63D0;&#x4F9B;&#x4E00;&#x4E9B;&#x5B9E;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6BD4;&#x5982;&#xFF1A;</p><ul><li>&#x65E5;&#x671F;&#x7C7B;&#x6765;&#x4EA7;&#x751F;&#x548C;&#x83B7;&#x53D6;&#x65E5;&#x671F;&#x548C;&#x65F6;&#x95F4;</li><li>&#x63D0;&#x4F9B;&#x968F;&#x673A;&#x6570;&#x7C7B;&#x6765;&#x4EA7;&#x751F;&#x5404;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x968F;&#x673A;&#x6570;</li><li>&#x63D0;&#x4F9B;&#x5806;&#x6808;&#x7C7B;&#x8868;&#x793A;&#x5806;&#x6808;&#x7ED3;&#x6784;</li><li>&#x63D0;&#x4F9B;&#x54C8;&#x5E0C;&#x8868;&#x6765;&#x8868;&#x793A;&#x54C8;&#x5E0C;&#x7ED3;&#x6784;</li></ul><p>&#x9644;&#x5E26;&#x7740;&#x5728;&#x5ED6;&#x96EA;&#x5CF0;&#x7684;&#x6559;&#x5B66;&#x7F51;&#x7AD9;&#x4E0A;&#x5B66;&#x5230;&#x4E86;&#xFF0C;<a href="https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/0013868200171577d6385bb5b4f4875bee9cbf0f0fa29c5000" target="_blank" rel="noopener">&#x6709;&#x5173;&#x6A21;&#x5757;&#x6784;&#x5EFA;&#x7684;&#x76F8;&#x5173;&#x77E5;&#x8BC6;</a>&#xFF0C;&#x4E5F;&#x975E;&#x5E38;&#x5B9E;&#x7528;&#x3002;</p><h3><span id="pytorchx5b89x88c5x7684x6ce8x610fx70b9">pytorch&#x5B89;&#x88C5;&#x7684;&#x6CE8;&#x610F;&#x70B9;</span></h3><p>&#x54CE;&#xFF0C;&#x4ECA;&#x5929;&#x50BB;&#x903C;&#x4E86;&#xFF0C;&#x4E4B;&#x524D;&#x7684;BEGAN&#x4E00;&#x76F4;&#x6CA1;&#x8C03;&#x901A;&#xFF0C;&#x540E;&#x6765;&#x60F3;&#x60F3;&#x7B97;&#x4E86;&#xFF0C;&#x5148;&#x7528;&#x4E4B;&#x524D;&#x8DD1;&#x901A;&#x7684;WGAN&#x5427;&#xFF0C;&#x7136;&#x540E;&#x62FF;&#x8FC7;&#x6765;&#x653E;&#x5728;&#x5DE5;&#x4F5C;&#x7AD9;&#x4E0A;&#x8DD1;&#xFF0C;md&#xFF0C;&#x7ED3;&#x679C;&#x600E;&#x4E48;&#x90FD;&#x8DD1;&#x4E0D;&#x901A;&#xFF0C;&#x603B;&#x63D0;&#x793A;<code>torch.FloatTensor object has no attribute shape</code>&#x5C31;&#x662F;&#x8BF4;&#x6CA1;&#x6709;shape&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x3002;&#x6211;&#x5C31;&#x7EB3;&#x4E86;&#x95F7;&#x4E86;&#xFF0C;&#x5728;pycharm&#x4E0A;&#x4E5F;&#x4E0D;&#x62A5;&#x9519;&#xFF0C;&#x8DD1;&#x5230;&#x8FD9;&#x6BB5;&#x7A0B;&#x5E8F;&#x5C31;&#x62A5;&#x9519;&#xFF0C;&#x4E00;&#x8138;&#x8499;&#x853D;&#x3002;&#x600E;&#x4E48;&#x90FD;&#x60F3;&#x4E0D;&#x901A;&#x3002;&#x665A;&#x4E0A;&#x8FC7;&#x6765;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x91CC;&#x9762;&#x6572;&#x8FDB;<code>import pytorch</code>&#x7ED3;&#x679C;&#x63D0;&#x793A;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x6A21;&#x5757;&#xFF0C;&#x6211;&#x6EF4;&#x4E2A;&#x4E56;&#x4E56;&#xFF0C;&#x539F;&#x6765;&#x6211;&#x538B;&#x6839;&#x6CA1;&#x5B89;&#x88C5;pytorch&#x8FD9;&#x4E2A;&#x6846;&#x67B6;&#x3002;&#x5F97;&#xFF0C;&#x88C5;&#x5427;&#x3002;</p><p>&#x5B89;&#x88C5;pytorch&#xFF0C;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x65B9;&#x4FBF;&#x7684;&#x3002;&#x5C31;&#x662F;&#x5148;&#x5230;<a href="https://pytorch.org/" target="_blank" rel="noopener">pytorch&#x7684;&#x5B98;&#x7F51;</a>&#x4E0A;&#xFF0C;&#x6309;&#x7167;&#x81EA;&#x5DF1;&#x7535;&#x8111;&#x7684;&#x73AF;&#x5883;&#x9009;&#x62E9;&#x5408;&#x9002;&#x7684;&#x5B89;&#x88C5;&#x547D;&#x4EE4;&#x3002;</p><img src="/2018/11/17/&#x3010;&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x3011;GAN&#x6A21;&#x578B;&#x7684;&#x642D;&#x5EFA;&#x4EE5;&#x53CA;&#x8FD0;&#x884C;/1.png" title="&#x5B89;&#x88C5;&#x547D;&#x4EE4;"><h3><span id="python-argparsex547dx4ee4x884cx89e3x6790x5305x7528x6cd5x603bx7ed3">python argparse&#x547D;&#x4EE4;&#x884C;&#x89E3;&#x6790;&#x5305;&#x7528;&#x6CD5;&#x603B;&#x7ED3;</span></h3><p>&#x9996;&#x5148;&#x89E3;&#x91CA;&#x4E00;&#x4E0B;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5148;&#x8BB2;&#x8FD9;&#x4E2A;&#xFF0C;&#x56E0;&#x4E3A;&#x5F88;&#x591A;&#x5728;github&#x4E0A;&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x9879;&#x76EE;&#x7684;&#x8FD0;&#x884C;&#x90FD;&#x662F;&#x91C7;&#x7528;&#x547D;&#x4EE4;&#x884C;&#x7684;&#x5F62;&#x5F0F;&#x8FDB;&#x884C;&#x7684;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x6211;&#x5F88;&#x61F5;&#x903C;&#xFF0C;&#x6211;&#x4E60;&#x60EF;&#x4E86;&#x7528;&#x4E00;&#x4E2A;run&#x7684;&#x6309;&#x94AE;&#x542F;&#x52A8;&#x7A0B;&#x5E8F;&#x3002;&#x5728;&#x7F51;&#x4E0A;&#x770B;&#x5230;python&#x91C7;&#x7528;&#x547D;&#x4EE4;&#x884C;&#x5F62;&#x5F0F;&#x542F;&#x52A8;&#x7A0B;&#x5E8F;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5728;main&#x51FD;&#x6570;&#x91CC;&#x9762;&#x9700;&#x8981;&#x52A0;&#x5165;&#x4E00;&#x4E9B;argparse&#x547D;&#x4EE4;&#x884C;&#x76F8;&#x5173;&#x53C2;&#x6570;&#xFF0C;&#x56E0;&#x6B64;&#x5B66;&#x4E60;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x547D;&#x4EE4;&#x884C;&#x89E3;&#x6790;&#x5305;&#x975E;&#x5E38;&#x5FC5;&#x8981;&#x3002;</p><p><strong>&#x4F7F;&#x7528;&#x8BF4;&#x660E;&#xFF1A;</strong></p><ul><li><p>&#x5BFC;&#x5165;&#x547D;&#x4EE4;&#x884C;&#x89E3;&#x6790;&#x5668;&#x7684;&#x5305;</p></li><li><p>&#x8BBE;&#x7F6E;&#x5206;&#x6790;&#x5668;</p><blockquote><p>&#x4E3A;&#x811A;&#x672C;&#x6DFB;&#x52A0;&#x8BF4;&#x660E;&#x63CF;&#x8FF0;:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; parse = argparse.ArgumentParser(description=<span class="string">&apos;&#x63CF;&#x8FF0;&#x4FE1;&#x606F;&apos;</span>)</span><br><span class="line">&gt; &#x6216;&#x8005;&#x91C7;&#x7528;</span><br><span class="line">&gt; parse =argparse.ArgumentParser()</span><br><span class="line">&gt; parse.description=<span class="string">&apos;&#x63CF;&#x8FF0;&#x4FE1;&#x606F;&apos;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote></li><li><p>&#x8BBE;&#x7F6E;&#x7A0B;&#x5E8F;&#x7248;&#x672C;&#x53F7;</p><blockquote><p>&#x7A0B;&#x5E8F;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x7248;&#x672C;&#x5347;&#x7EA7;</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; parse.add_argument(<span class="string">&quot;-v&quot;</span>,<span class="string">&quot;-version&quot;</span>,action=<span class="string">&apos;version&apos;</span>,version=<span class="string">&apos;%(prog)s 1.0&apos;</span>)</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>&#x8BBE;&#x7F6E;&#x53C2;&#x6570;<code>action</code> &#x7684;&#x503C;&#x4E3A;<code>version</code>  &#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x540E;&#x9762;&#x7684; <code>%(prog)s</code>&#x4EE3;&#x8868;&#x811A;&#x672C;&#x7684;&#x540D;&#x79F0;&#x3002;&#x662F;&#x53EF;&#x53D8;&#x7684;&#x3002;</p></blockquote></li><li><p>&#x5FC5;&#x8981;&#x7684;&#x53C2;&#x6570;</p><blockquote><p>&#x5FC5;&#x987B;&#x8981;&#x6DFB;&#x52A0;&#x7684;&#x53C2;&#x6570;&#xFF1A;<code>SourceDir</code>&#x662F;&#x4E00;&#x4E2A;&#x5FC5;&#x586B;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x540E;&#x9762;<code>help</code>&#x662F;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;&#xFF0C;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#x683C;&#x5F0F;&#x662F;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x53C2;&#x6570;&#x662F;&#x5176;&#x4ED6;&#x5185;&#x5BB9;&#xFF0C;&#x9700;&#x8981;&#x6307;&#x5B9A;<code>type</code> &#xFF0C;&#x6BD4;&#x5982;&#x4F60;&#x9700;&#x8981;&#x7684;&#x53C2;&#x6570;&#x6570;&#x5B57;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x7528;<code>type= int</code>&#x6765;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#xFF1B;</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; parser.add_argument(<span class="string">&apos;sourceDir&apos;</span>, help=<span class="string">&apos;Select source directory&apos;</span>)</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x4E0D;&#x5E26;<code>-</code>&#x7684;&#x524D;&#x7F00;&#x7684;&#x9009;&#x586B;&#x53C2;&#x6570; :&#x5728;&#x6700;&#x540E;&#x9762;&#x6DFB;&#x52A0;&#x4E0A;<code>nargs=&apos;?&apos;</code> &#x8868;&#x793A;&#x8FD9;&#x4E00;&#x9879;&#x9009;&#x586B;,&#x5176;&#x4E2D;&#x95EE;&#x53F7;&#x8868;&#x793A;&#x8FD9;&#x9879;&#x53EF;&#x4EE5;&#x662F;&#x96F6;&#x6216;&#x8005;1&#xFF1B;</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; parser.add_argument(<span class="string">&apos;targetDir&apos;</span>, help=<span class="string">&apos;Select target directory&apos;</span>, nargs=<span class="string">&apos;?&apos;</span>)</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x5E26;<code>-</code>&#x524D;&#x7F00;&#x7684;&#x9009;&#x586B;&#x53C2;&#x6570;&#xFF1A;&#x5728;&#x53C2;&#x6570;&#x5904;&#x52A0;&#x4E0A;<code>-</code> &#x524D;&#x7F00;&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x9009;&#x586B;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#x540C;&#x65F6;&#x8868;&#x793A;&#x53EF;&#x4EE5;&#x7B80;&#x5199;&#x6216;&#x8005;&#x53CC;&#x6A2A;&#x7EBF;&#x7684;&#x5168;&#x62FC;&#xFF1B;</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; parser.add_argument(<span class="string">&quot;-a&quot;</span>, <span class="string">&quot;--add&quot;</span>, help=<span class="string">&quot;add something&quot;</span>)</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x4E92;&#x65A5;&#x7684;&#x4E8C;&#x9009;&#x4E00;&#x9009;&#x9879;&#x53C2;&#x6570;&#xFF1A;&#x9700;&#x8981;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x7EC4;<code>group</code>&#x7136;&#x540E;&#x5F80;&#x8FD9;&#x4E2A;&#x7EC4;&#x91CC;&#x9762;&#x6DFB;&#x52A0;&#x4E0D;&#x540C;&#x529F;&#x80FD;&#x7684;&#x53C2;&#x6570;&#x5C31;&#x884C;&#xFF0C;<code>action=&quot;store_true&quot;</code>&#x8FD9;&#x4E2A;&#x914D;&#x7F6E;&#x9879;&#x4EE3;&#x8868;&#x8FD9;&#x4E2A;&#x4E0D;&#x9700;&#x8981;&#x586B;&#x5199;&#x503C;&#xFF0C;&#x76F4;&#x63A5;&#x5199;&#x53C2;&#x6570;&#x5C31;&#x884C;&#xFF0C;&#x8F93;&#x51FA;&#x7684;&#x65F6;&#x5019;&#x4E3A;&#x5E03;&#x5C14;&#x503C;&#x3002;</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; group = parser.add_mutually_exclusive_group()</span><br><span class="line">&gt; group.add_argument(<span class="string">&quot;-m&quot;</span>, <span class="string">&quot;--move&quot;</span>, help=<span class="string">&quot;The way to operate the file is to move&quot;</span>, action=<span class="string">&quot;store_true&quot;</span>)</span><br><span class="line">&gt; group.add_argument(<span class="string">&quot;-c&quot;</span>, <span class="string">&quot;--copy&quot;</span>, help=<span class="string">&quot;The way to operate the file is to copy&quot;</span>, action=<span class="string">&quot;store_true&quot;</span>)</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote></li><li><p>&#x83B7;&#x53D6;&#x6240;&#x6709;&#x53C2;&#x6570;</p><blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; args = parser.parse_args()</span><br><span class="line">&gt; print(args)</span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment"># &#x6253;&#x5370; usage</span></span><br><span class="line">&gt; parser.print_usage()</span><br><span class="line">&gt; <span class="comment"># &#x6253;&#x5370;&#x5B8C;&#x6574;&#x7684; help &#x4FE1;&#x606F;</span></span><br><span class="line">&gt; parser.print_help()</span><br><span class="line">&gt; <span class="comment"># &#x8F93;&#x51FA; usage</span></span><br><span class="line">&gt; parser.format_usage()</span><br><span class="line">&gt; <span class="comment"># &#x8F93;&#x51FA; help</span></span><br><span class="line">&gt; parser.format_help()</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote></li></ul><h3><span id="linuxx8defx5f84x603bx7ed3">Linux&#x8DEF;&#x5F84;&#x603B;&#x7ED3;</span></h3><ol><li><p>Linux&#x4E2D;&#xFF1A;</p><ul><li><code>.</code> &#x8868;&#x793A;&#x5F53;&#x524D;&#x76EE;&#x5F55;</li><li><code>..</code> &#x8868;&#x793A;&#x4E0A;&#x4E00;&#x7EA7;&#x76EE;&#x5F55;</li><li><code>-</code> &#x8868;&#x793A;&#x4E0A;&#x6B21;&#x6240;&#x5728;&#x76EE;&#x5F55;</li><li><code>~</code> &#x8868;&#x793A;&#x5F53;&#x524D;&#x7528;&#x6237;&#x7684;<code>home</code>&#x76EE;&#x5F55;</li><li><p>&#x4F7F;&#x7528;<code>pwd</code>&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x6240;&#x5728;&#x8DEF;&#x5F84;&#xFF08;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#xFF09;</p></li><li><p>&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x5C31;&#x662F;&#x4EE5;&#x6839;<code>/</code>&#x76EE;&#x5F55;&#x4E3A;&#x8D77;&#x70B9;&#xFF0C;&#x4EE5;&#x4F60;&#x6240;&#x5230;&#x8FBE;&#x7684;&#x76EE;&#x5F55;&#x4E3A;&#x7EC8;&#x70B9;&#xFF0C;&#x8868;&#x73B0;&#x5F62;&#x5F0F;&#x4E3A;<code>/usr/local/bin</code></p></li><li>&#x8FDB;&#x5165;&#x54EA;&#x4E2A;&#x76EE;&#x5F55;&#x53D6;&#x51B3;&#x4E8E;&#x54EA;&#x4E2A;&#x66F4;&#x65B9;&#x4FBF;&#xFF0C;&#x6BD4;&#x5982;&#x5F53;&#x524D;&#x5728;<code>/usr/local/bin</code>&#x4E0B;&#xFF0C;&#x8981;&#x8FDB;&#x5165;&#x4E0A;&#x4E00;&#x7EA7;&#x76EE;&#x5F55;&#x5F53;&#x7136;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<code>cd ..</code>&#xFF0C;&#x8FD9;&#x5C31;&#x6BD4;&#x4F7F;&#x7528;<code>cd /usr/local</code>&#x65B9;&#x4FBF;&#x3002;</li></ul></li></ol><h2><span id="ganx7684x4ee3x7801x8bb2x89e3x53cax4feex6539">GAN&#x7684;&#x4EE3;&#x7801;&#x8BB2;&#x89E3;&#x53CA;&#x4FEE;&#x6539;</span></h2><p>&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x5C06;&#x901A;&#x8FC7;&#x51E0;&#x4E2A;GAN&#x7684;&#x4EE3;&#x7801;&#x6765;&#x8BB2;&#x89E3;GAN&#x7684;&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#x3002;&#x987A;&#x5E26;&#x8BB2;&#x8BB2;&#x5176;&#x4E2D;&#x5B58;&#x5728;&#x7684;&#x5751;&#x3002;</p><h2><span id="x53c2x8003x6587x732e">&#x53C2;&#x8003;&#x6587;&#x732E;</span></h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 论文阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码调试 </tag>
            
            <tag> GAN模型 </tag>
            
            <tag> Linux常识 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LeetCode刷题总结之一</title>
      <link href="/2018/11/13/LeetCode%E5%88%B7%E9%A2%98%E6%80%BB%E7%BB%93%E4%B9%8B%E4%B8%80/"/>
      <url>/2018/11/13/LeetCode%E5%88%B7%E9%A2%98%E6%80%BB%E7%BB%93%E4%B9%8B%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<p>&#x8FD9;&#x662F;&#x5728;LeetCode&#x4E2D;&#x6587;&#x7F51;&#x4E0A;&#x7B2C;&#x4E00;&#x6B21;&#x5237;&#x9898;&#xFF0C;&#x6162;&#x6162;&#x6765;&#x5427;&#xFF0C;&#x5E0C;&#x671B;&#x575A;&#x6301;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x4E4B;&#x540E;&#x80FD;&#x6709;&#x6240;&#x6536;&#x83B7;&#x3002;&#x91C7;&#x7528;&#x7684;&#x662F;&#x968F;&#x673A;&#x505A;&#x9898;&#x6A21;&#x5F0F;&#xFF0C;&#x53EF;&#x80FD;&#x5E8F;&#x53F7;&#x4F1A;&#x6709;&#x4E9B;&#x4E71;&#x3002;</p><a id="more"></a><h2><span id="845-x6570x7ec4x4e2dx6700x957fx7684x5c71x8109-x4e2dx7b49x96bex5ea6">845. &#x6570;&#x7EC4;&#x4E2D;&#x6700;&#x957F;&#x7684;&#x5C71;&#x8109;- &#x4E2D;&#x7B49;&#x96BE;&#x5EA6;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x6211;&#x4EEC;&#x628A;&#x6570;&#x7EC4; A &#x4E2D;&#x7B26;&#x5408;&#x4E0B;&#x5217;&#x5C5E;&#x6027;&#x7684;&#x4EFB;&#x610F;&#x8FDE;&#x7EED;&#x5B50;&#x6570;&#x7EC4; B &#x79F0;&#x4E3A; &#x201C;<em>&#x5C71;&#x8109;&#x201D;</em>&#xFF1A;</p><ul><li><code>B.length &gt;= 3</code></li><li>&#x5B58;&#x5728; <code>0 &lt; i &lt; B.length - 1</code> &#x4F7F;&#x5F97; <code>B[0] &lt; B[1] &lt; ... B[i-1] &lt; B[i] &gt; B[i+1] &gt; ... &gt; B[B.length - 1]</code></li></ul><p>&#xFF08;&#x6CE8;&#x610F;&#xFF1A;B &#x53EF;&#x4EE5;&#x662F; A &#x7684;&#x4EFB;&#x610F;&#x5B50;&#x6570;&#x7EC4;&#xFF0C;&#x5305;&#x62EC;&#x6574;&#x4E2A;&#x6570;&#x7EC4; A&#x3002;&#xFF09;</p><p>&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#x6570;&#x7EC4; <code>A</code>&#xFF0C;&#x8FD4;&#x56DE;&#x6700;&#x957F; <em>&#x201C;&#x5C71;&#x8109;&#x201D;</em> &#x7684;&#x957F;&#x5EA6;&#x3002;</p><p>&#x5982;&#x679C;&#x4E0D;&#x542B;&#x6709; &#x201C;<em>&#x5C71;&#x8109;&#x201D;</em> &#x5219;&#x8FD4;&#x56DE; <code>0</code>&#x3002;</p><p>&#x4E8B;&#x4F8B;&#xFF1A;</p><p>&#x8F93;&#x5165;&#xFF1A;[2,1,4,7,3,2,5]<br>&#x8F93;&#x51FA;&#xFF1A;5<br>&#x89E3;&#x91CA;&#xFF1A;&#x6700;&#x957F;&#x7684;&#x5C71;&#x8109;&#x662F; [1,4,7,3,2]&#xFF0C;&#x957F;&#x5EA6;&#x65F6;5<br>&#x8F93;&#x5165;&#xFF1A;[2,2,2]<br>&#x8F93;&#x51FA;&#xFF1A;0<br>&#x89E3;&#x91CA;&#xFF1A;&#x4E0D;&#x542B;&#x5C71;&#x8109;</p></blockquote><ul><li>&#x89E3;&#x9898;&#x601D;&#x8DEF;</li></ul><blockquote><p>&#x5BF9;&#x6570;&#x7EC4;&#x4ECE;&#x524D;&#x5F80;&#x540E;&#x904D;&#x5386;&#x548C;&#x5BF9;&#x6570;&#x7EC4;&#x4ECE;&#x540E;&#x5F80;&#x524D;&#x904D;&#x5386;&#xFF0C;&#x5982;&#x679C;&#x7B26;&#x5408;&#x5C71;&#x8109;&#x8981;&#x6C42;&#xFF0C;&#x5C31;&#x52A0;1&#xFF0C;&#x5426;&#x5219;&#x76F4;&#x63A5;&#x7F6E;&#x4E3A;0&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5BF9;&#x4E24;&#x4E2A;&#x6570;&#x7EC4;&#x904D;&#x5386;&#xFF0C;&#x7B26;&#x5408;&#x4E24;&#x4E2A;&#x6570;&#x7EC4;&#x5747;&#x4E0D;&#x4E3A;0&#x7684;&#x4F4D;&#x7F6E;&#x5C31;&#x662F;&#x5C71;&#x5CF0;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x7136;&#x540E;&#x76F8;&#x52A0;&#x4E4B;&#x540E;&#x518D;&#x52A0;1&#xFF0C;&#x5C31;&#x662F;&#x6700;&#x7EC8;&#x7B54;&#x6848;&#x3002;</p></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">longestMoutain</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(A.size()&lt;<span class="number">3</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left[<span class="number">100010</span>];</span><br><span class="line">        <span class="keyword">int</span> right[<span class="number">100010</span>];</span><br><span class="line">        left[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;A.size();i++){</span><br><span class="line">            <span class="keyword">if</span>(A[i]&gt;A[i<span class="number">-1</span>])</span><br><span class="line">                left[i]=left[i<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                left[i]=<span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        right[A.size()<span class="number">-1</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=A.size()<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--){</span><br><span class="line">            <span class="keyword">if</span>(A[i]&gt;A[i+<span class="number">1</span>])</span><br><span class="line">                right[i]=right[i+<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                right[i]=<span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;A.size();i++){</span><br><span class="line">            <span class="keyword">if</span>(left[i]&gt;<span class="number">0</span> &amp;&amp; right[i]&gt;<span class="number">0</span> &amp;&amp; right[i]+left[i]+<span class="number">1</span>&gt;ans)</span><br><span class="line">                ans=left[i]+right[i]+<span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2><span id="357-x8ba1x7b97x5404x4e2ax4f4dx6570x4e0dx540cx7684x6570x5b57x4e2ax6570-x4e2dx7b49x96bex5ea6">357. &#x8BA1;&#x7B97;&#x5404;&#x4E2A;&#x4F4D;&#x6570;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x5B57;&#x4E2A;&#x6570;- &#x4E2D;&#x7B49;&#x96BE;&#x5EA6;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;<strong>&#x975E;&#x8D1F;</strong>&#x6574;&#x6570; n&#xFF0C;&#x8BA1;&#x7B97;&#x5404;&#x4F4D;&#x6570;&#x5B57;&#x90FD;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x5B57; x &#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x5176;&#x4E2D; $0 &#x2264; x &lt; 10^n$ &#x3002;</p><p>&#x8F93;&#x5165;&#x5B9E;&#x4F8B;&#xFF1A;</p><p>&#x8F93;&#x5165;: 2<br>&#x8F93;&#x51FA;: 91<br>&#x89E3;&#x91CA;: &#x7B54;&#x6848;&#x5E94;&#x4E3A;&#x9664;&#x53BB; 11,22,33,44,55,66,77,88,99 &#x5916;&#xFF0C;&#x5728; [0,100) &#x533A;&#x95F4;&#x5185;&#x7684;&#x6240;&#x6709;&#x6570;&#x5B57;&#x3002;</p></blockquote><ul><li>&#x89E3;&#x9898;&#x601D;&#x8DEF;</li></ul><blockquote><p>&#x6309;&#x7167;&#x6392;&#x5217;&#x7EC4;&#x5408;&#x7684;&#x601D;&#x8DEF;&#x8FDB;&#x884C;&#xFF0C;&#x4ECE;&#x6700;&#x5F00;&#x59CB;&#x7684;&#x4E00;&#x4F4D;&#xFF0C;&#x5230;n&#x4F4D;&#xFF0C;&#x5176;&#x5B9E;&#x8BF4;&#x767D;&#x4E86;&#xFF0C;&#x5C31;&#x662F;&#x627E;&#x89C4;&#x5F8B;&#xFF1A;1,10,10+9  <em>  9,10+9 </em>  9  *8</p></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function"><span class="keyword">int</span> <span class="title">countNumberswitchUniqueDigits</span><span class="params">(<span class="keyword">int</span> n)</span></span>{</span><br><span class="line">&gt;        <span class="keyword">int</span> res;</span><br><span class="line">&gt;        <span class="keyword">if</span>(n&lt;=<span class="number">1</span>){</span><br><span class="line">&gt;            <span class="keyword">return</span> <span class="built_in">pow</span>(<span class="number">10</span>,n);</span><br><span class="line">&gt;        }<span class="keyword">else</span>{</span><br><span class="line">&gt;            res=<span class="number">10</span>;</span><br><span class="line">&gt;            <span class="keyword">int</span> temp=<span class="number">9</span>;</span><br><span class="line">&gt;            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">&gt;            {</span><br><span class="line">&gt;                temp*=(<span class="number">10</span>-i);</span><br><span class="line">&gt;                res +=temp;</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;            <span class="keyword">return</span> res;</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><h2><span id="390-x6d88x9664x6e38x620f-x4e2dx7b49x96bex5ea6">390. &#x6D88;&#x9664;&#x6E38;&#x620F;- &#x4E2D;&#x7B49;&#x96BE;&#x5EA6;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x4ECE;1 &#x5230; n &#x6392;&#x5E8F;&#x7684;&#x6574;&#x6570;&#x5217;&#x8868;&#x3002;<br>&#x9996;&#x5148;&#xFF0C;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#xFF0C;&#x4ECE;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x5F00;&#x59CB;&#xFF0C;&#x6BCF;&#x9694;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x5220;&#x9664;&#xFF0C;&#x76F4;&#x5230;&#x5217;&#x8868;&#x7684;&#x672B;&#x5C3E;&#x3002;<br>&#x7B2C;&#x4E8C;&#x6B65;&#xFF0C;&#x5728;&#x5269;&#x4E0B;&#x7684;&#x6570;&#x5B57;&#x4E2D;&#xFF0C;&#x4ECE;&#x53F3;&#x5230;&#x5DE6;&#xFF0C;&#x4ECE;&#x5012;&#x6570;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x5F00;&#x59CB;&#xFF0C;&#x6BCF;&#x9694;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x5220;&#x9664;&#xFF0C;&#x76F4;&#x5230;&#x5217;&#x8868;&#x5F00;&#x5934;&#x3002;<br>&#x6211;&#x4EEC;&#x4E0D;&#x65AD;&#x91CD;&#x590D;&#x8FD9;&#x4E24;&#x6B65;&#xFF0C;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#x548C;&#x4ECE;&#x53F3;&#x5230;&#x5DE6;&#x4EA4;&#x66FF;&#x8FDB;&#x884C;&#xFF0C;&#x76F4;&#x5230;&#x53EA;&#x5269;&#x4E0B;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x3002;<br>&#x8FD4;&#x56DE;&#x957F;&#x5EA6;&#x4E3A; n &#x7684;&#x5217;&#x8868;&#x4E2D;&#xFF0C;&#x6700;&#x540E;&#x5269;&#x4E0B;&#x7684;&#x6570;&#x5B57;&#x3002;</p><p>&#x4E8B;&#x4F8B;&#xFF1A;</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&#x8F93;&#x5165;</span><br><span class="line">&gt;n=<span class="number">9</span></span><br><span class="line">&gt;<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span></span><br><span class="line">&gt;<span class="number">2</span> <span class="number">4</span> <span class="number">6</span> <span class="number">8</span></span><br><span class="line">&gt;<span class="number">2</span> <span class="number">6</span></span><br><span class="line">&gt;<span class="number">6</span></span><br><span class="line">&gt;&#x8F93;&#x51FA;</span><br><span class="line">&gt;<span class="number">6</span></span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><ul><li>&#x89E3;&#x9898;&#x601D;&#x8DEF;</li></ul><blockquote><p>&#x5176;&#x5B9E;&#x8FD9;&#x4E2A;&#x9898;&#x76EE;&#x9700;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x8BDD;&#xFF0C;&#x601D;&#x8DEF;&#x53EF;&#x4EE5;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x7528;for&#x5FAA;&#x73AF;&#x6765;&#x6765;&#x56DE;&#x56DE;&#x5220;&#x9664;&#xFF0C;&#x91C7;&#x7528;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x53EF;&#x4EE5;&#x662F;&#x94FE;&#x8868;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x5220;&#x9664;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x4F46;&#x662F;&#x5F53;&#x6570;&#x636E;&#x91CF;&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x4E0D;&#x5B9E;&#x7528;&#x4E86;&#x3002;</p><p>&#x5F53;&#x7136;&#x8FD9;&#x4E2A;&#x9898;&#x76EE;&#x8FD8;&#x662F;&#x5F88;&#x89C4;&#x6574;&#xFF0C;&#x5F88;&#x6709;&#x89C4;&#x5F8B;&#x7684;&#xFF0C;&#x6211;&#x770B;&#x4E86;&#x4E00;&#x773C;&#xFF0C;&#x77E5;&#x9053;&#x4E0D;&#x662F;&#x7528;&#x8FD9;&#x79CD;&#x66B4;&#x529B;&#x7684;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#xFF0C;&#x80AF;&#x5B9A;&#x4F7F;&#x7528;&#x6BD4;&#x8F83;&#x6709;&#x6280;&#x5DE7;&#x7684;&#x6570;&#x5B66;&#x516C;&#x5F0F;&#x6765;&#x89E3;&#x51B3;&#xFF0C;&#x4F46;&#x662F;&#x60F3;&#x4E86;&#x633A;&#x4E45;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x5408;&#x9002;&#x7684;&#x6570;&#x636E;&#x516C;&#x5F0F;&#x6765;&#x89E3;&#x51B3;&#x3002;</p><p>&#x6700;&#x7EC8;&#x8FD8;&#x662F;&#x770B;&#x4E86;&#x7B54;&#x6848;&#xFF0C;&#x5E76;&#x4E14;<a href="https://blog.csdn.net/afei__/article/details/83689502#commentBox" target="_blank" rel="noopener">&#x770B;&#x4E86;&#x6700;&#x540E;&#x725B;&#x903C;&#x7684;&#x8BC1;&#x660E;</a>&#xFF0C;&#x611F;&#x89C9;&#x4E5F;&#x4E0D;&#x662F;&#x5F88;&#x96BE;&#xFF0C;&#x9AD8;&#x4E2D;&#x6570;&#x5217;&#x9898;&#x7684;&#x6C34;&#x5E73;&#x3002;&#x4F46;&#x662F;&#x60F3;&#x5728;&#x77ED;&#x65F6;&#x95F4;&#x4E4B;&#x5185;&#x505A;&#x51FA;&#x6765;&#x4E5F;&#x4E0D;&#x5BB9;&#x6613;&#x3002;</p></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt;Class Solution{</span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function"><span class="keyword">int</span> <span class="title">lastRemaining</span><span class="params">(<span class="keyword">int</span> n)</span></span>{</span><br><span class="line">&gt;        <span class="keyword">if</span>(n==<span class="number">1</span>){</span><br><span class="line">&gt;            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&gt;        }<span class="keyword">else</span>{</span><br><span class="line">&gt;            <span class="comment">/*</span></span><br><span class="line"><span class="comment">&gt;            &#x5355;&#x7EAF;&#x4ECE;&#x5DE6;&#x5411;&#x53F3;&#x5254;&#x9664;&#x6570;&#x5B57;&#x7684;&#x7ED3;&#x679C;&#xFF1A;f(n)  &#x5355;&#x7EAF;&#x4ECE;&#x53F3;&#x5411;&#x5DE6;&#x5254;&#x9664;&#x6570;&#x5B57; b(n)</span></span><br><span class="line"><span class="comment">&gt;            f(n)+b(n)=n+1    f(n)=2*b(n/2)</span></span><br><span class="line"><span class="comment">&gt;            f(n)=2*b(n/2)=2*(n/2+1-f(n/2))</span></span><br><span class="line"><span class="comment">&gt;            */</span></span><br><span class="line">&gt;            <span class="keyword">return</span> <span class="number">2</span>*(n/<span class="number">2</span>+<span class="number">1</span>-lastRemaining(n/<span class="number">2</span>));</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><h2><span id="623-x5728x4e8cx53c9x6811x4e2dx589ex52a0x4e00x884c-x4e2dx7b49x96bex5ea6">623. &#x5728;&#x4E8C;&#x53C9;&#x6811;&#x4E2D;&#x589E;&#x52A0;&#x4E00;&#x884C;- &#x4E2D;&#x7B49;&#x96BE;&#x5EA6;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x6839;&#x8282;&#x70B9;&#x4E3A;&#x7B2C;1&#x5C42;&#xFF0C;&#x6DF1;&#x5EA6;&#x4E3A; 1&#x3002;&#x5728;&#x5176;&#x7B2C; <code>d</code> &#x5C42;&#x8FFD;&#x52A0;&#x4E00;&#x884C;&#x503C;&#x4E3A; <code>v</code> &#x7684;&#x8282;&#x70B9;&#x3002;</p><p>&#x6DFB;&#x52A0;&#x89C4;&#x5219;&#xFF1A;&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6DF1;&#x5EA6;&#x503C; <code>d</code> &#xFF08;&#x6B63;&#x6574;&#x6570;&#xFF09;&#xFF0C;&#x9488;&#x5BF9;&#x6DF1;&#x5EA6;&#x4E3A; <code>d-1</code> &#x5C42;&#x7684;&#x6BCF;&#x4E00;<strong>&#x975E;&#x7A7A;</strong>&#x8282;&#x70B9; <code>N</code>&#xFF0C;&#x4E3A; <code>N</code> &#x521B;&#x5EFA;&#x4E24;&#x4E2A;&#x503C;&#x4E3A; <code>v</code> &#x7684;&#x5DE6;&#x5B50;&#x6811;&#x548C;&#x53F3;&#x5B50;&#x6811;&#x3002;</p><p>&#x5C06; <code>N</code> &#x539F;&#x5148;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#xFF0C;&#x8FDE;&#x63A5;&#x4E3A;&#x65B0;&#x8282;&#x70B9; <code>v</code> &#x7684;&#x5DE6;&#x5B50;&#x6811;&#xFF1B;&#x5C06; <code>N</code> &#x539F;&#x5148;&#x7684;&#x53F3;&#x5B50;&#x6811;&#xFF0C;&#x8FDE;&#x63A5;&#x4E3A;&#x65B0;&#x8282;&#x70B9; <code>v</code> &#x7684;&#x53F3;&#x5B50;&#x6811;&#x3002;</p><p>&#x5982;&#x679C; <code>d</code> &#x7684;&#x503C;&#x4E3A; 1&#xFF0C;&#x6DF1;&#x5EA6; d - 1 &#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x6839;&#x8282;&#x70B9; <code>v</code>&#xFF0C;&#x539F;&#x5148;&#x7684;&#x6574;&#x68F5;&#x6811;&#x5C06;&#x4F5C;&#x4E3A; <code>v</code> &#x7684;&#x5DE6;&#x5B50;&#x6811;&#x3002;</p></blockquote><ul><li>&#x89E3;&#x9898;&#x601D;&#x8DEF;</li></ul><blockquote><p>&#x9996;&#x5148;&#x7533;&#x660E;&#x4E00;&#x70B9;&#x5C31;&#x662F;&#x5728;OJ&#x4E4B;&#x7C7B;&#x7684;&#x9898;&#x76EE;&#x4E2D;&#xFF0C;&#x9012;&#x5F52;&#x5F88;&#x597D;&#x7528;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x4E00;&#x822C;&#x9879;&#x76EE;&#x4E4B;&#x4E2D;&#x5C3D;&#x91CF;&#x907F;&#x514D;&#x4F7F;&#x7528;&#x9012;&#x5F52;&#xFF0C;&#x591A;&#x7528;&#x6808;&#x6216;&#x8005;&#x5FAA;&#x73AF;&#x3002;</p><p>&#x8FD9;&#x4E00;&#x9898;&#x4E24;&#x79CD;&#x89E3;&#x6CD5;&#xFF0C;&#x4E00;&#x79CD;&#x662F;&#x6BD4;&#x8F83;&#x5934;&#x94C1;&#x7684;&#x904D;&#x5386;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x79CD;&#x662F;&#x9012;&#x5F52;&#x3002;&#x4F46;&#x662F;&#x9012;&#x5F52;&#x53C8;&#x975E;&#x5E38;&#x5DE7;&#x5999;&#xFF0C;&#x5C06;&#x5C42;&#x6570;&#x53D8;&#x6210;flag&#x65B9;&#x4FBF;&#x63D2;&#x5165;&#x3002;</p></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span>{</span></span><br><span class="line">&gt;    <span class="keyword">int</span> val;</span><br><span class="line">&gt;    TreeNode *left;</span><br><span class="line">&gt;    TreeNode *right;</span><br><span class="line">&gt;    TreeNode(<span class="keyword">int</span> x):val(x),left(<span class="literal">NULL</span>),right(<span class="literal">NULL</span>){}</span><br><span class="line">&gt;};</span><br><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function">TreeNode* <span class="title">addOneRow</span><span class="params">(TreeNode* root,<span class="keyword">int</span> v ,<span class="keyword">int</span> d)</span></span>{</span><br><span class="line">&gt;        <span class="keyword">if</span>(!root) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&gt;        <span class="keyword">if</span>(d==<span class="number">1</span>){</span><br><span class="line">&gt;            <span class="comment">//&#x8FD9;&#x662F;&#x65B0;&#x4EA7;&#x751F;&#x7684;&#x8282;&#x70B9;&#x4F5C;&#x4E3A;&#x6839;&#x8282;&#x70B9;&#xFF0C;&#x7136;&#x540E;&#x539F;&#x5148;&#x7684;&#x4E8C;&#x53C9;&#x6811;&#x4F5C;&#x4E3A;&#x5DE6;&#x5B50;&#x6811;</span></span><br><span class="line">&gt;            <span class="comment">//&#x65B0;&#x8282;&#x70B9;&#x7684;&#x5EFA;&#x7ACB;&#x548C;&#x8282;&#x70B9;&#x7684;&#x63D2;&#x5165;&#x662F;&#x9700;&#x8981;&#x8BB0;&#x4F4F;&#x7684;&#xFF0C;&#x5176;&#x4ED6;&#x90FD;&#x662F;&#x4E00;&#x4E9B;&#x601D;&#x8DEF;&#x4E0A;&#x7684;&#x4E1C;&#x897F;</span></span><br><span class="line">&gt;            TreeNode* newRoot = <span class="keyword">new</span> TreeNode(v);</span><br><span class="line">&gt;            newRoot-&gt;left=root;</span><br><span class="line">&gt;            <span class="keyword">return</span> newRoot;</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="comment">//queue&#x961F;&#x5217;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;&#x7B2C;&#x4E00;&#x6B21;&#x770B;&#x5230;&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x4E00;&#x4E0B;</span></span><br><span class="line">&gt;        <span class="comment">//&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x904D;&#x5386;&#x65B9;&#x5F0F;&#x662F;&#x5C42;&#x5E8F;&#x904D;&#x5386;&#xFF0C;&#x56E0;&#x6B64;&#x91C7;&#x7528;&#x7684;&#x662F;&#x961F;&#x5217;&#x7684;&#x65B9;&#x5F0F;</span></span><br><span class="line">&gt;        <span class="comment">/*</span></span><br><span class="line"><span class="comment">&gt;        &#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x7684;&#x4E3B;&#x4F53;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#xFF0C;&#x7136;&#x540E;&#x4E0D;&#x65AD;&#x671D;&#x91CC;&#x9762;&#x52A0;&#x5165;&#x65B0;&#x7684;&#x5143;&#x7D20;</span></span><br><span class="line"><span class="comment">&gt;        &#x7136;&#x540E;&#x6709;&#x4E24;&#x4E2A;&#x5224;&#x65AD;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;d=0&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x662F;d=1&#xFF0C;&#x53EA;&#x8981;d&gt;1&#x5C31;&#x4E0D;&#x65AD;&#x5F80;&#x961F;&#x5217;&#x91CC;&#x9762;&#x653E;&#x4E1C;&#x897F;</span></span><br><span class="line"><span class="comment">&gt;        &#x5982;&#x679C;d=1&#x5C31;&#x5C06;&#x65B0;&#x7684;&#x4E00;&#x5C42;&#x63D2;&#x5165;</span></span><br><span class="line"><span class="comment">&gt;        &#x5982;&#x679C;d=0&#x5C31;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x6700;&#x7EC8;&#x7684;&#x5934;&#x7ED3;&#x70B9;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7ED3;&#x679C;</span></span><br><span class="line"><span class="comment">&gt;        */</span></span><br><span class="line">&gt;        <span class="built_in">queue</span>&lt;TreeNode*&gt;q{{root}};</span><br><span class="line">&gt;        <span class="keyword">while</span>(!q.empty()){</span><br><span class="line">&gt;            <span class="keyword">if</span>(--d==<span class="number">0</span>)<span class="keyword">return</span> root;</span><br><span class="line">&gt;            <span class="keyword">int</span> n=q.size();</span><br><span class="line">&gt;            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i){</span><br><span class="line">&gt;                <span class="keyword">auto</span> t= q.front();</span><br><span class="line">&gt;                q.pop();</span><br><span class="line">&gt;                <span class="keyword">if</span>(d==<span class="number">1</span>){</span><br><span class="line">&gt;                    TreeNode *left=t-&gt;left;</span><br><span class="line">&gt;                    TreeNode *right=t-&gt;right;</span><br><span class="line">&gt;                    t-&gt;left=<span class="keyword">new</span> TreeNode(v);</span><br><span class="line">&gt;                    t-&gt;right=<span class="keyword">new</span> TreeNode(v);</span><br><span class="line">&gt;                    t-&gt;left-&gt;left=left;</span><br><span class="line">&gt;                    t-&gt;right-&gt;right=right;</span><br><span class="line">&gt;                }<span class="keyword">else</span>{</span><br><span class="line">&gt;                    <span class="keyword">if</span>(t-&gt;left) q.push(t-&gt;left);</span><br><span class="line">&gt;                    <span class="keyword">if</span>(t-&gt;right) q.push(t-&gt;right);</span><br><span class="line">&gt;                }</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">return</span> root;</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>&#x4E0A;&#x9762;&#x8FD9;&#x79CD;&#x662F;&#x9010;&#x5C42;&#x904D;&#x5386;&#x7684;&#x65B9;&#x6848;&#xFF0C;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x6765;&#x4E0D;&#x662F;&#x5F88;&#x96BE;&#x61C2;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x591F;&#x725B;&#x903C;&#xFF0C;&#x4E0B;&#x9762;&#x4ECB;&#x7ECD;&#x4E00;&#x79CD;&#x725B;&#x903C;&#x7684;&#xFF0C;&#x9012;&#x5F52;&#x65B9;&#x6848;</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function">TreeNode* <span class="title">addOneRow</span><span class="params">(TreeNode* root,<span class="keyword">int</span> v,<span class="keyword">int</span> d)</span></span>{</span><br><span class="line">&gt;        <span class="comment">/*</span></span><br><span class="line"><span class="comment">&gt;        d&#x53D8;&#x6210;&#x4E86;&#x4E00;&#x4E2A;flag&#x7528;&#x6765;&#x6307;&#x793A;&#x63D2;&#x5165;&#x5DE6;&#x8282;&#x70B9;&#x8FD8;&#x662F;&#x53F3;&#x8282;&#x70B9;</span></span><br><span class="line"><span class="comment">&gt;        */</span></span><br><span class="line">&gt;        <span class="keyword">if</span>(d==<span class="number">1</span> || d==<span class="number">0</span>){</span><br><span class="line">&gt;            TreeNode* newRoot =<span class="keyword">new</span> TreeNode(v);</span><br><span class="line">&gt;            (d ? newRoot-&gt;left : newRoot-&gt;right)=root;</span><br><span class="line">&gt;            <span class="keyword">return</span> newRoot;</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">if</span>(root &amp;&amp; d&gt;<span class="number">1</span>){</span><br><span class="line">&gt;            root-&gt;left =addOneRow(root-&gt;left,v,d&gt;<span class="number">2</span> ?d<span class="number">-1</span> :<span class="number">1</span>);</span><br><span class="line">&gt;            root-&gt;right =addOneRow(root-&gt;right,v,d&gt;<span class="number">2</span> ?d<span class="number">-1</span> :<span class="number">0</span>);</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">return</span> root;</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><h2><span id="81-x641cx7d22x65cbx8f6cx6392x5e8fx6570x7ec4ii-x4e2dx7b49x96bex5ea6">81. &#x641C;&#x7D22;&#x65CB;&#x8F6C;&#x6392;&#x5E8F;&#x6570;&#x7EC4;II -&#x4E2D;&#x7B49;&#x96BE;&#x5EA6;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x5047;&#x8BBE;&#x6309;&#x7167;&#x5347;&#x5E8F;&#x6392;&#x5E8F;&#x7684;&#x6570;&#x7EC4;&#x5728;&#x9884;&#x5148;&#x672A;&#x77E5;&#x7684;&#x67D0;&#x4E2A;&#x70B9;&#x4E0A;&#x8FDB;&#x884C;&#x4E86;&#x65CB;&#x8F6C;&#x3002;</p><p>( &#x4F8B;&#x5982;&#xFF0C;&#x6570;&#x7EC4; <code>[0,0,1,2,2,5,6]</code> &#x53EF;&#x80FD;&#x53D8;&#x4E3A; <code>[2,5,6,0,0,1,2]</code> )&#x3002;</p><p>&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x6765;&#x5224;&#x65AD;&#x7ED9;&#x5B9A;&#x7684;&#x76EE;&#x6807;&#x503C;&#x662F;&#x5426;&#x5B58;&#x5728;&#x4E8E;&#x6570;&#x7EC4;&#x4E2D;&#x3002;&#x82E5;&#x5B58;&#x5728;&#x8FD4;&#x56DE; <code>true</code>&#xFF0C;&#x5426;&#x5219;&#x8FD4;&#x56DE; <code>false</code>&#x3002;</p><p>&#x4E8B;&#x4F8B;&#xFF1A;</p><p>&#x8F93;&#x5165;: nums = [2,5,6,0,0,1,2], target = 0<br>&#x8F93;&#x51FA;: true</p></blockquote><ul><li>&#x601D;&#x8DEF;&#x89E3;&#x6790;</li></ul><blockquote><p>&#x8FD9;&#x4E00;&#x9898;&#x672C;&#x6765;&#x662F;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x7684;&#xFF0C;&#x5C31;&#x662F;&#x6C42;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x91CC;&#x662F;&#x5426;&#x6709;&#x76F8;&#x5E94;&#x7684;&#x503C;&#xFF0C;&#x4F46;&#x662F;&#x6709;&#x4E00;&#x4E2A;&#x8981;&#x6C42;&#x5C31;&#x662F;&#xFF0C;&#x9700;&#x8981;&#x5728;&#x7B26;&#x5408;&#x8981;&#x6C42;&#x7684;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x5185;&#x627E;&#x5230;&#xFF0C;&#x76F4;&#x63A5;&#x904D;&#x5386;&#x4E0D;&#x5408;&#x9002;&#x3002;&#x56E0;&#x6B64;&#x91C7;&#x7528;&#x4E8C;&#x5206;&#x6CD5;&#xFF0C;&#x5145;&#x5206;&#x5229;&#x7528;&#x6570;&#x7EC4;&#x7684;&#x7279;&#x70B9;&#x3002;</p></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">&gt;<span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function"><span class="keyword">bool</span> <span class="title">search</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">&gt;       <span class="comment">// write your code here</span></span><br><span class="line">&gt;        <span class="keyword">int</span> low = <span class="number">0</span>, high = A.size()<span class="number">-1</span>, size = A.size(), mid = <span class="number">0</span>;</span><br><span class="line">&gt;</span><br><span class="line">&gt;        <span class="keyword">if</span>(size &lt;= <span class="number">0</span> ) {</span><br><span class="line">&gt;            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">while</span>(low &lt;= high) {</span><br><span class="line">&gt;            mid = low + (high - low) / <span class="number">2</span>; </span><br><span class="line">&gt;            <span class="keyword">if</span>(A[mid] == target) {</span><br><span class="line">&gt;                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;            <span class="keyword">if</span>(A[mid] &gt; A[low]) {</span><br><span class="line">&gt;                <span class="keyword">if</span>(A[low] &lt;= target &amp;&amp; target &lt; A[mid]) {</span><br><span class="line">&gt;                    high = mid - <span class="number">1</span>;</span><br><span class="line">&gt;                }</span><br><span class="line">&gt;                <span class="keyword">else</span>  {</span><br><span class="line">&gt;                    low = mid + <span class="number">1</span>;</span><br><span class="line">&gt;                }</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;            <span class="keyword">else</span> <span class="keyword">if</span>(A[mid] &lt; A[low]){</span><br><span class="line">&gt;                <span class="keyword">if</span>(A[mid] &lt; target &amp;&amp; target &lt;= A[high])  {</span><br><span class="line">&gt;                    low = mid + <span class="number">1</span>;</span><br><span class="line">&gt;                }</span><br><span class="line">&gt;                <span class="keyword">else</span>  {</span><br><span class="line">&gt;                    high = mid - <span class="number">1</span>;</span><br><span class="line">&gt;                }</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;            <span class="keyword">else</span> {</span><br><span class="line">&gt;                low++;</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><h2><span id="104-x4e8cx53c9x6811x7684x6700x5927x6df1x5ea6-x7b80x5355x96bex5ea6">104. &#x4E8C;&#x53C9;&#x6811;&#x7684;&#x6700;&#x5927;&#x6DF1;&#x5EA6; -&#x7B80;&#x5355;&#x96BE;&#x5EA6;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x627E;&#x51FA;&#x5176;&#x6700;&#x5927;&#x6DF1;&#x5EA6;&#x3002;</p><p>&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x6DF1;&#x5EA6;&#x4E3A;&#x6839;&#x8282;&#x70B9;&#x5230;&#x6700;&#x8FDC;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x6700;&#x957F;&#x8DEF;&#x5F84;&#x4E0A;&#x7684;&#x8282;&#x70B9;&#x6570;&#x3002;</p><p><strong>&#x8BF4;&#x660E;:</strong> &#x53F6;&#x5B50;&#x8282;&#x70B9;&#x662F;&#x6307;&#x6CA1;&#x6709;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x8282;&#x70B9;&#x3002;</p><p><strong>&#x793A;&#x4F8B;&#xFF1A;</strong><br>&#x7ED9;&#x5B9A;&#x4E8C;&#x53C9;&#x6811; <code>[3,9,20,null,null,15,7]</code>&#xFF0C;</p><p>&#x8FD4;&#x56DE;&#x6700;&#x5927;&#x6DF1;&#x5EA6;&#xFF1A;3</p></blockquote><ul><li>&#x601D;&#x8DEF;</li></ul><blockquote><p>&#x8FD9;&#x4E00;&#x9898;&#x9700;&#x8981;&#x5E94;&#x7528;&#x9012;&#x5F52;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x6C42;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x5047;&#x88C5;&#x4F60;&#x5DF2;&#x7ECF;&#x6C42;&#x5230;&#x4E86;&#x6700;&#x7EC8;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x7136;&#x540E;&#x9700;&#x8981;&#x5C06;&#x5176;&#x76F8;&#x52A0;&#x5F97;&#x5230;&#x6700;&#x7EC8;&#x7684;&#x7ED3;&#x679C;&#x3002;</p></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="comment">/*</span></span><br><span class="line"><span class="comment">&gt;struct TreeNode{</span></span><br><span class="line"><span class="comment">&gt;int val;</span></span><br><span class="line"><span class="comment">&gt;    TreeNode* right;</span></span><br><span class="line"><span class="comment">&gt;    TreeNode* left;</span></span><br><span class="line"><span class="comment">&gt;    TreeNode(int x):val(x),left(NULL),right(NULL){}</span></span><br><span class="line"><span class="comment">&gt;};</span></span><br><span class="line"><span class="comment">&gt;*/</span></span><br><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function"><span class="keyword">int</span> <span class="title">maxDepth</span><span class="params">(TreeNode* root)</span></span>{</span><br><span class="line">&gt;        <span class="keyword">int</span> depth=<span class="number">0</span>;</span><br><span class="line">&gt;        <span class="keyword">if</span>(root==<span class="literal">nullptr</span>)</span><br><span class="line">&gt;        {</span><br><span class="line">&gt;            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&gt;        }<span class="keyword">else</span>{</span><br><span class="line">&gt;          depth++;</span><br><span class="line">&gt;          <span class="keyword">int</span> sub_tree_max_depth = max(maxDepth(root-&gt;right),maxDepth(root-&gt;left));</span><br><span class="line">&gt;          depth + = sub_tree_max_depth; </span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">return</span> depth;</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote></blockquote><h2><span id="75-x989cx8272x5206x7c7b-x2013-x4e2dx7b49x96bex5ea6">75. &#x989C;&#x8272;&#x5206;&#x7C7B; &#x2013; &#x4E2D;&#x7B49;&#x96BE;&#x5EA6;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x5305;&#x542B;&#x7EA2;&#x8272;&#x3001;&#x767D;&#x8272;&#x548C;&#x84DD;&#x8272;&#xFF0C;&#x4E00;&#x5171; <em>n</em> &#x4E2A;&#x5143;&#x7D20;&#x7684;&#x6570;&#x7EC4;&#xFF0C;<strong>&#x539F;&#x5730;</strong>&#x5BF9;&#x5B83;&#x4EEC;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x4F7F;&#x5F97;&#x76F8;&#x540C;&#x989C;&#x8272;&#x7684;&#x5143;&#x7D20;&#x76F8;&#x90BB;&#xFF0C;&#x5E76;&#x6309;&#x7167;&#x7EA2;&#x8272;&#x3001;&#x767D;&#x8272;&#x3001;&#x84DD;&#x8272;&#x987A;&#x5E8F;&#x6392;&#x5217;&#x3002;</p><p>&#x6B64;&#x9898;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x6574;&#x6570; 0&#x3001; 1 &#x548C; 2 &#x5206;&#x522B;&#x8868;&#x793A;&#x7EA2;&#x8272;&#x3001;&#x767D;&#x8272;&#x548C;&#x84DD;&#x8272;&#x3002;</p><p><strong>&#x6CE8;&#x610F;:</strong><br>&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x4EE3;&#x7801;&#x5E93;&#x4E2D;&#x7684;&#x6392;&#x5E8F;&#x51FD;&#x6570;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x9053;&#x9898;&#x3002;</p><p><strong>&#x793A;&#x4F8B;:</strong></p><p>&#x8F93;&#x5165;&#xFF1A;[2,0,2,1,1,0]</p><p>&#x8F93;&#x51FA;&#xFF1A;[0,0,1,1,2,2]</p><p>&#x8FDB;&#x9636;&#xFF1A;</p><ul><li>&#x4E00;&#x4E2A;&#x76F4;&#x89C2;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x662F;&#x4F7F;&#x7528;&#x8BA1;&#x6570;&#x6392;&#x5E8F;&#x7684;&#x4E24;&#x8D9F;&#x626B;&#x63CF;&#x7B97;&#x6CD5;&#x3002;<br>&#x9996;&#x5148;&#xFF0C;&#x8FED;&#x4EE3;&#x8BA1;&#x7B97;&#x51FA;0&#x3001;1 &#x548C; 2 &#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x6309;&#x7167;0&#x3001;1&#x3001;2&#x7684;&#x6392;&#x5E8F;&#xFF0C;&#x91CD;&#x5199;&#x5F53;&#x524D;&#x6570;&#x7EC4;&#x3002;</li><li>&#x4F60;&#x80FD;&#x60F3;&#x51FA;&#x4E00;&#x4E2A;&#x4EC5;&#x4F7F;&#x7528;&#x5E38;&#x6570;&#x7A7A;&#x95F4;&#x7684;&#x4E00;&#x8D9F;&#x626B;&#x63CF;&#x7B97;&#x6CD5;&#x5417;&#xFF1F;</li></ul></blockquote><ul><li>&#x601D;&#x8DEF;&#x5206;&#x6790;</li></ul><blockquote><p>&#x8FD9;&#x4E00;&#x9898;&#x7B2C;&#x4E00;&#x773C;&#x770B;&#x4E0A;&#x53BB;&#x597D;&#x50CF;&#x8FD8;&#x633A;&#x7B80;&#x5355;&#xFF0C;&#x4F46;&#x662F;&#x6309;&#x7167;&#x9898;&#x76EE;&#x8981;&#x6C42;&#x52A0;&#x4E0A;&#x4E00;&#x4E9B;&#x9650;&#x5236;&#x6761;&#x4EF6;&#x4E4B;&#x540E;&#x5C31;&#x6CA1;&#x90A3;&#x4E48;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x95EE;&#x9898;&#x662F;&#x4E24;&#x4E2A;&#x4E00;&#x4E2A;&#x662F;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x662F;&#x4E00;&#x4E2A;&#x5E38;&#x6570;&#xFF0C;&#x8FD9;&#x5C31;&#x8BF4;&#x660E;&#x4E0D;&#x80FD;&#x591A;&#x6269;&#x5C55;&#x65B0;&#x7684;&#x7684;&#x7A7A;&#x95F4;&#x6765;&#x63D0;&#x5347;&#x6392;&#x5E8F;&#x7684;&#x6548;&#x7387;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x5C31;&#x662F;&#x4E00;&#x8D9F;&#x5C31;&#x80FD;&#x5F97;&#x51FA;&#x7ED3;&#x679C;&#x7684;&#x65B9;&#x6CD5;&#x5E76;&#x5176;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x4E0D;&#x80FD;&#x662F;&#x4EE3;&#x7801;&#x5E93;&#x91CC;&#x9762;&#x7684;&#x3002;</p><p>&#x6211;&#x770B;&#x5230;&#x8FD9;&#x4E9B;&#x9650;&#x5236;&#x6761;&#x4EF6;&#x4E4B;&#x540E;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x60F3;&#x6CD5;&#x5C31;&#x662F;&#x7528;&#x8BA1;&#x6570;&#x6CD5;&#x6765;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF08;&#x4FDD;&#x8BC1;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x662F;&#x5E38;&#x6570;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x8BA1;&#x6570;&#x7684;&#x7ED3;&#x679C;&#x90FD;&#x8D4B;&#x7ED9;&#x65B0;&#x7684;&#x6570;&#x7EC4;&#x4E00;&#x822C;&#x53EA;&#x8981;&#x4E00;&#x8D9F;&#xFF08;&#x6700;&#x540E;&#x505A;&#x4E0B;&#x6765;&#x597D;&#x50CF;&#x9700;&#x8981;&#x4E24;&#x8D9F;&#xFF0C;&#x8FD8;&#x662F;&#x4E0D;&#x591F;&#x4F18;&#x5316;&#xFF09;&#x3002;</p><p>&#x540E;&#x6765;&#x770B;&#x7F51;&#x4E0A;&#x5927;&#x4F6C;&#x7684;&#x89E3;&#x7B54;&#xFF0C;&#x60CA;&#x4E3A;&#x5929;&#x4EBA;&#xFF0C;&#x592A;&#x6709;&#x521B;&#x610F;&#x4E86;&#xFF0C;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x5927;&#x4F6C;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x5C06;&#x4E09;&#x4E2A;&#x6570;&#x7684;&#x6392;&#x5E8F;&#x770B;&#x6210;&#x662F;&#x4E09;&#x4E2A;&#x6307;&#x9488;&#xFF0C;&#x7136;&#x540E;&#x4F9D;&#x6B21;&#x5411;&#x540E;&#x8FDB;&#x884C;&#x904D;&#x5386;&#xFF0C;&#x5982;&#x679C;&#x9047;&#x5230;&#x7B26;&#x5408;&#x6761;&#x4EF6;&#x7684;&#x5C31;&#x5411;&#x540E;++ &#xFF0C;0&#xFF0C;1&#xFF0C;2&#x5206;&#x522B;&#x7ED9;&#x5B9A;&#x4E09;&#x4E2A;&#x4F18;&#x5148;&#x7EA7;&#x3002;</p></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="function"><span class="keyword">void</span> <span class="title">sortColors</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span></span>{</span><br><span class="line">&gt;        <span class="keyword">int</span> i,j,k=<span class="number">-1</span>;</span><br><span class="line">&gt;        <span class="keyword">for</span>(<span class="keyword">int</span> m=<span class="number">0</span>;m&lt;nums.size();m++){</span><br><span class="line">&gt;            <span class="keyword">if</span>(nums[m]==<span class="number">0</span>){</span><br><span class="line">&gt;                nums[++k]=<span class="number">2</span>;</span><br><span class="line">&gt;                nums[++j]=<span class="number">1</span>;</span><br><span class="line">&gt;                nums[++i]=<span class="number">0</span>;</span><br><span class="line">&gt;            }<span class="keyword">else</span> <span class="keyword">if</span>(nums[m]==<span class="number">1</span>){</span><br><span class="line">&gt;                nums[++k]=<span class="number">2</span>;</span><br><span class="line">&gt;                nums[++j]=<span class="number">1</span>;</span><br><span class="line">&gt;            }<span class="keyword">else</span>{</span><br><span class="line">&gt;                nums[++k]=<span class="number">2</span>;</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote></blockquote><h2><span id="522-x6700x957fx7279x6b8ax5e8fx5217-ii-x4e2dx7b49x96bex5ea6">522. &#x6700;&#x957F;&#x7279;&#x6B8A;&#x5E8F;&#x5217; II -&#x4E2D;&#x7B49;&#x96BE;&#x5EA6;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x7ED9;&#x5B9A;&#x5B57;&#x7B26;&#x4E32;&#x5217;&#x8868;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x4ECE;&#x5B83;&#x4EEC;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x957F;&#x7684;&#x7279;&#x6B8A;&#x5E8F;&#x5217;&#x3002;&#x6700;&#x957F;&#x7279;&#x6B8A;&#x5E8F;&#x5217;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;&#x8BE5;&#x5E8F;&#x5217;&#x4E3A;&#x67D0;&#x5B57;&#x7B26;&#x4E32;&#x72EC;&#x6709;&#x7684;&#x6700;&#x957F;&#x5B50;&#x5E8F;&#x5217;&#xFF08;&#x5373;&#x4E0D;&#x80FD;&#x662F;&#x5176;&#x4ED6;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5B50;&#x5E8F;&#x5217;&#xFF09;&#x3002;</p><p><strong>&#x5B50;&#x5E8F;&#x5217;</strong>&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5220;&#x53BB;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x67D0;&#x4E9B;&#x5B57;&#x7B26;&#x5B9E;&#x73B0;&#xFF0C;&#x4F46;&#x4E0D;&#x80FD;&#x6539;&#x53D8;&#x5269;&#x4F59;&#x5B57;&#x7B26;&#x7684;&#x76F8;&#x5BF9;&#x987A;&#x5E8F;&#x3002;&#x7A7A;&#x5E8F;&#x5217;&#x4E3A;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5B50;&#x5E8F;&#x5217;&#xFF0C;&#x4EFB;&#x4F55;&#x5B57;&#x7B26;&#x4E32;&#x4E3A;&#x5176;&#x81EA;&#x8EAB;&#x7684;&#x5B50;&#x5E8F;&#x5217;&#x3002;</p><p>&#x8F93;&#x5165;&#x5C06;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x5217;&#x8868;&#xFF0C;&#x8F93;&#x51FA;&#x662F;&#x6700;&#x957F;&#x7279;&#x6B8A;&#x5E8F;&#x5217;&#x7684;&#x957F;&#x5EA6;&#x3002;&#x5982;&#x679C;&#x6700;&#x957F;&#x7279;&#x6B8A;&#x5E8F;&#x5217;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x8FD4;&#x56DE; -1 &#x4E8B;&#x4F8B;&#xFF1A;</p><p>&#x8F93;&#x5165;&#xFF1A;&#x201D;aba&#x201D;,&#x201D;cbc&#x201D;,&#x201D;eae&#x201D;</p><p>&#x8F93;&#x51FA;&#xFF1A;3</p><p>&#x63D0;&#x793A;&#xFF1A;</p><ol><li>&#x6240;&#x6709;&#x7ED9;&#x5B9A;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;&#x4E0D;&#x4F1A;&#x8D85;&#x8FC7;10</li><li>&#x7ED9;&#x5B9A;&#x5B57;&#x7B26;&#x4E32;&#x5217;&#x8868;&#x957F;&#x5EA6;&#x5C06;&#x5728;[2,50]&#x4E4B;&#x95F4;</li></ol></blockquote><ul><li>&#x89E3;&#x9898;&#x601D;&#x8DEF;</li></ul><blockquote><p>&#x8FD9;&#x9053;&#x9898;&#x9898;&#x76EE;&#x9996;&#x5148;&#x6CA1;&#x770B;&#x61C2;&#xFF0C;&#x540E;&#x6765;&#x770B;&#x7F51;&#x4E0A;&#x89E3;&#x7B54;&#x53D1;&#x73B0;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x6BD4;&#x8F83;&#x4E00;&#x5806;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x662F;&#x4E0D;&#x662F;&#x6709;&#x5176;&#x4E2D;&#x7684;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6709;&#x7684;&#x8BDD;&#x628A;&#x6700;&#x957F;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x8F93;&#x51FA;.</p><p>&#x6240;&#x4EE5;&#x9996;&#x5148;&#x6709;&#x4E00;&#x79CD;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x5C06;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;&#x5BF9;&#x6BD4;&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x73B0;&#x5B58;&#x5728;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x5C31;&#x4FDD;&#x5B58;&#x4E00;&#x4E2A;&#x7ED3;&#x679C;&#xFF0C;&#x6700;&#x7EC8;&#x83B7;&#x53D6;&#x6700;&#x957F;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x3002;</p><p>&#x8FD8;&#x6709;&#x4E00;&#x79CD;&#x601D;&#x8DEF;&#x5C31;&#x662F;&#x9700;&#x8981;&#x5C06;&#x8FD9;&#x4E00;&#x5806;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x7136;&#x540E;&#x8FDB;&#x884C;&#x6BD4;&#x5BF9;&#xFF0C;&#x6700;&#x7EC8;&#x9996;&#x5148;&#x6BD4;&#x5BF9;&#x51FA;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x5C31;&#x662F;&#x6700;&#x7EC8;&#x7684;&#x7ED3;&#x679C;&#x3002;<code>&#x5177;&#x4F53;&#x7684;&#xFF1A;</code>&#x9996;&#x5148;&#x7ED9;&#x5B57;&#x7B26;&#x4E32;&#x6309;&#x957F;&#x5EA6;&#x6392;&#x5E8F;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x957F;&#x5EA6;&#x5927;&#x7684;&#x653E;&#x5728;&#x524D;&#x9762;&#xFF0C;&#x8FD9;&#x6837;&#x627E;&#x5230;&#x975E;&#x5171;&#x540C;&#x5B50;&#x5E8F;&#x5217;&#xFF0C;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x5176;&#x957F;&#x5EA6;&#x5C31;&#x884C;&#x3002;&#x56E0;&#x4E3A;&#x5F53;&#x524D;&#x627E;&#x5230;&#x7684;&#x80AF;&#x5B9A;&#x662F;&#x6700;&#x957F;&#x7684;&#xFF0C;&#x7136;&#x540E;&#x7528;&#x96C6;&#x5408;&#x6765;&#x8BB0;&#x5F55;&#x5DF2;&#x7ECF;&#x904D;&#x5386;&#x8FC7;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5BF9;&#x4E8E;&#x5F53;&#x524D;&#x904D;&#x5386;&#x5230;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6211;&#x4EEC;&#x548C;&#x96C6;&#x5408;&#x4E2D;&#x6240;&#x6709;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;&#x5BF9;&#x6BD4;&#xFF0C;&#x770B;&#x662F;&#x5426;&#x662F;&#x67D0;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x8BF4;&#x660E;&#x5F53;&#x524D;&#x5C31;&#x662F;&#x6700;&#x957F;&#x7684;&#x975E;&#x516C;&#x5171;&#x5B57;&#x7B26;&#xFF0C;&#x5982;&#x679C;&#x5F53;&#x524D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x96C6;&#x5408;&#x4E2D;&#x67D0;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5B50;&#x5E8F;&#x5217;&#x5C31;&#x76F4;&#x63A5;break&#x51FA;&#x6765;&#x3002;</p></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function"><span class="keyword">int</span> <span class="title">findLUSlength</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; strs )</span></span>{</span><br><span class="line">&gt;        <span class="keyword">int</span> res=<span class="number">-1</span>,j=<span class="number">0</span>,n=strs.size();</span><br><span class="line">&gt;        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i){</span><br><span class="line">&gt;            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;++j){</span><br><span class="line">&gt;                <span class="keyword">if</span>(i==j) <span class="keyword">continue</span>;</span><br><span class="line">&gt;                <span class="keyword">if</span>(checkSub(strs[i],strs[j])) <span class="keyword">break</span>;</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;            <span class="keyword">if</span>(j==n) res=max(res,(<span class="keyword">int</span>)strs[i].size());</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">return</span> res;</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;    <span class="comment">//&#x5224;&#x65AD;sub&#x662F;&#x5426;&#x662F;str&#x7684;&#x5B50;&#x5E8F;&#x5217;</span></span><br><span class="line">&gt;    <span class="function"><span class="keyword">int</span> <span class="title">checkSub</span><span class="params">(<span class="built_in">string</span> sub,<span class="built_in">string</span> str)</span></span>{</span><br><span class="line">&gt;        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">&gt;        <span class="keyword">for</span>(<span class="keyword">char</span> c:str){</span><br><span class="line">&gt;            <span class="keyword">if</span>(c==subs[i]) ++i;</span><br><span class="line">&gt;            <span class="keyword">if</span>(i==subs.size()) <span class="keyword">break</span>;</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">return</span> i==subs.size();</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>&#x65B9;&#x6CD5;&#x4E8C;&#xFF1A;</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="function"><span class="keyword">int</span> <span class="title">findLUSlength</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; strs)</span></span>{</span><br><span class="line">&gt;        <span class="keyword">int</span> n=strs.size();</span><br><span class="line">&gt;        <span class="built_in">unordered_set</span>&lt;<span class="built_in">string</span>&gt; s;</span><br><span class="line">&gt;        sort(strs.begin(),strs.end(),[](<span class="built_in">string</span> a,<span class="built_in">string</span> b){</span><br><span class="line">&gt;           <span class="keyword">if</span>(a.size()==b.size()) <span class="keyword">return</span> a&gt;b;</span><br><span class="line">&gt;            <span class="keyword">return</span> a.size() &gt; b.size();</span><br><span class="line">&gt;        });</span><br><span class="line">&gt;        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++){</span><br><span class="line">&gt;            <span class="keyword">if</span>(i==n<span class="number">-1</span> || strs[i]!=strs[i+<span class="number">1</span>]){</span><br><span class="line">&gt;                <span class="keyword">bool</span> found =<span class="literal">true</span>;</span><br><span class="line">&gt;                <span class="keyword">for</span>(<span class="keyword">auto</span> a:s){</span><br><span class="line">&gt;                    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">&gt;                    <span class="keyword">for</span>(<span class="keyword">char</span> c:a){</span><br><span class="line">&gt;                        <span class="keyword">if</span>(c==strs[i][j]) ++j;</span><br><span class="line">&gt;                        <span class="keyword">if</span>(j==strs[i].size()) <span class="keyword">break</span>;</span><br><span class="line">&gt;                    }</span><br><span class="line">&gt;                    <span class="keyword">if</span>(j==strs[i].size()){</span><br><span class="line">&gt;                        found =<span class="literal">false</span>;</span><br><span class="line">&gt;                        <span class="keyword">break</span>;</span><br><span class="line">&gt;                    }</span><br><span class="line">&gt;                }</span><br><span class="line">&gt;                <span class="keyword">if</span>(found) <span class="keyword">return</span> strs[i].size();</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;            s.insert(strs[i]);</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;    </span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote></blockquote><h2><span id="95-x4e0dx540cx7684x4e8cx53c9x641cx7d22x6811-ii-x4e2dx7b49x96bex5ea6">95. &#x4E0D;&#x540C;&#x7684;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811; II- &#x4E2D;&#x7B49;&#x96BE;&#x5EA6;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6574;&#x6570; <em>n</em>&#xFF0C;&#x751F;&#x6210;&#x6240;&#x6709;&#x7531; 1 &#x2026; <em>n</em> &#x4E3A;&#x8282;&#x70B9;&#x6240;&#x7EC4;&#x6210;&#x7684;<strong>&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;</strong>&#x3002;</p><p>&#x8F93;&#x5165;&#xFF1A;3</p><p>&#x8F93;&#x51FA;&#xFF1A;</p><p>[<br> [1,null,3,2],<br> [3,2,null,1],<br> [3,1,null,null,2],<br> [2,1,3],<br> [1,null,2,null,3]<br>]</p></blockquote><ul><li>&#x89E3;&#x9898;&#x601D;&#x8DEF;&#xFF1A;</li></ul><blockquote><p>&#x8FD9;&#x4E00;&#x9898;&#x53C2;&#x8003;&#x7684;&#x4E5F;&#x662F;&#x7F51;&#x4E0A;&#x7684;&#xFF0C;&#x5927;&#x5BB6;&#x4E5F;&#x90FD;&#x662F;&#x5343;&#x7BC7;&#x4E00;&#x5F8B;&#xFF0C;&#x5C31;&#x662F;&#x7528;&#x7684;&#x9012;&#x5F52;&#xFF0C;&#x6216;&#x8005;&#x6709;&#x7684;&#x53C2;&#x8003;code ganker&#x4E0A;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x4E3B;&#x9898;&#x601D;&#x8DEF;&#x5C31;&#x662F;&#x5C06;<code>1-n</code>&#x7684;&#x6570;&#x5B57;&#x5212;&#x5206;&#x6210;&#x4E24;&#x4E2A;&#x90E8;&#x5206;&#xFF0C;,<code>i</code>&#x4F5C;&#x4E3A;&#x6839;&#x8282;&#x70B9;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x5C0F;&#x4E8E;<code>i</code>&#x7684;&#x6570;&#x503C;&#x5168;&#x90E8;&#x4F5C;&#x4E3A;&#x5DE6;&#x5B50;&#x6811;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x5927;&#x4E8E;<code>i</code>&#x7684;&#x90E8;&#x5206;&#x5168;&#x90E8;&#x4F5C;&#x4E3A;&#x53F3;&#x5B50;&#x6811;&#x3002;&#x5DE6;&#x5B50;&#x6811;&#x7684;&#x751F;&#x6210;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x751F;&#x6210;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x751F;&#x6210;&#x51FD;&#x6570;&#xFF0C;&#x4F46;&#x662F;&#x6709;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x56F0;&#x60D1;&#x7684;&#x5730;&#x65B9;&#x5C31;&#x662F;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x5DE6;&#x53F3;&#x4E24;&#x4E2A;&#x5B50;&#x6811;&#x8FDB;&#x884C;&#x5FAA;&#x73AF;&#x904D;&#x5386;&#xFF0C;&#x5C06;&#x5176;&#x63A5;&#x5230;&#x6839;&#x7ED3;&#x70B9;&#x4E0A;&#x3002; </p></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span>{</span></span><br><span class="line">&gt;    <span class="keyword">int</span> val;</span><br><span class="line">&gt;    TreeNode * left;</span><br><span class="line">&gt;    TreeNode * right;</span><br><span class="line">&gt;    TreeNode(<span class="keyword">int</span> x):val(x),left(<span class="literal">NULL</span>),right(<span class="literal">NULL</span>){}</span><br><span class="line">&gt;};</span><br><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="built_in">vector</span>&lt;TreeNode *&gt;createTrees(<span class="keyword">int</span> start,<span class="keyword">int</span> end){</span><br><span class="line">&gt;        <span class="built_in">vector</span>&lt;TreeNode* &gt;res;</span><br><span class="line">&gt;        <span class="keyword">if</span>(start&gt;end)</span><br><span class="line">&gt;        {</span><br><span class="line">&gt;            res.push_back(<span class="literal">NULL</span>);</span><br><span class="line">&gt;            <span class="keyword">return</span> res;</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">if</span>(start== end){</span><br><span class="line">&gt;            TreeNode * root = <span class="keyword">new</span> TreeNode(start);</span><br><span class="line">&gt;            res.push_back(root);</span><br><span class="line">&gt;            <span class="keyword">return</span> res;</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">for</span>(<span class="keyword">int</span> i=start;i&lt;=end;i++){</span><br><span class="line">&gt;            <span class="built_in">vector</span>&lt;TreeNode* &gt;left= createTrees(start,i<span class="number">-1</span>);</span><br><span class="line">&gt;            <span class="built_in">vector</span>&lt;TreeNode* &gt;right= createTrees(i+<span class="number">1</span>,end);</span><br><span class="line">&gt;            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;left.size();++j){</span><br><span class="line">&gt;                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;right.size();++k){</span><br><span class="line">&gt;                    TreeNode *root = <span class="keyword">new</span> TreeNode(i);</span><br><span class="line">&gt;                    root-&gt;left= left[j];</span><br><span class="line">&gt;                    root-&gt;right= right[k];</span><br><span class="line">&gt;                    res.push_back(root);</span><br><span class="line">&gt;                }</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;            </span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">return</span> res;</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;    <span class="built_in">vector</span>&lt;TreeNode *&gt; generateTrees(<span class="keyword">int</span> n){</span><br><span class="line">&gt;        <span class="keyword">if</span>(n&lt;<span class="number">1</span>)</span><br><span class="line">&gt;            <span class="keyword">return</span> (<span class="built_in">vector</span>&lt;TreeNode *&gt;)<span class="literal">NULL</span>;</span><br><span class="line">&gt;        <span class="keyword">return</span> createTrees(<span class="number">1</span>,n);</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote></blockquote><h2><span id="330-x6309x8981x6c42x8865x9f50x6570x7ec4-x56f0x96be">330 . &#x6309;&#x8981;&#x6C42;&#x8865;&#x9F50;&#x6570;&#x7EC4; -&#x56F0;&#x96BE;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x5DF2;&#x6392;&#x5E8F;&#x7684;&#x6B63;&#x6574;&#x6570;&#x6570;&#x7EC4; <em>nums&#xFF0C;</em>&#x548C;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570; <em>n &#x3002;</em>&#x4ECE; <code>[1, n]</code> &#x533A;&#x95F4;&#x5185;&#x9009;&#x53D6;&#x4EFB;&#x610F;&#x4E2A;&#x6570;&#x5B57;&#x8865;&#x5145;&#x5230; <em>nums</em> &#x4E2D;&#xFF0C;&#x4F7F;&#x5F97; <code>[1, n]</code> &#x533A;&#x95F4;&#x5185;&#x7684;&#x4EFB;&#x4F55;&#x6570;&#x5B57;&#x90FD;&#x53EF;&#x4EE5;&#x7528; <em>nums</em> &#x4E2D;&#x67D0;&#x51E0;&#x4E2A;&#x6570;&#x5B57;&#x7684;&#x548C;&#x6765;&#x8868;&#x793A;&#x3002;&#x8BF7;&#x8F93;&#x51FA;&#x6EE1;&#x8DB3;&#x4E0A;&#x8FF0;&#x8981;&#x6C42;&#x7684;&#x6700;&#x5C11;&#x9700;&#x8981;&#x8865;&#x5145;&#x7684;&#x6570;&#x5B57;&#x4E2A;&#x6570;&#x3002;</p><p>&#x4E8B;&#x4F8B;&#xFF1A;</p><p>&#x8F93;&#x5165;: nums = [1,3], n = 6<br>&#x8F93;&#x51FA;: 1<br>&#x89E3;&#x91CA;:<br>&#x6839;&#x636E; nums &#x91CC;&#x73B0;&#x6709;&#x7684;&#x7EC4;&#x5408; [1], [3], [1,3]&#xFF0C;&#x53EF;&#x4EE5;&#x5F97;&#x51FA; 1, 3, 4&#x3002;<br>&#x73B0;&#x5728;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5C06; 2 &#x6DFB;&#x52A0;&#x5230; nums &#x4E2D;&#xFF0C; &#x7EC4;&#x5408;&#x53D8;&#x4E3A;: [1], [2], [3], [1,3], [2,3], [1,2,3]&#x3002;<br>&#x5176;&#x548C;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x6570;&#x5B57; 1, 2, 3, 4, 5, 6&#xFF0C;&#x80FD;&#x591F;&#x8986;&#x76D6; [1, 6] &#x533A;&#x95F4;&#x91CC;&#x6240;&#x6709;&#x7684;&#x6570;&#x3002;<br>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x6700;&#x5C11;&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x3002;</p></blockquote><ul><li>&#x89E3;&#x9898;&#x601D;&#x8DEF;</li></ul><blockquote><p>&#x8FD9;&#x9053;&#x9898;&#xFF0C;&#x6709;&#x4E9B;&#x61F5;&#x903C;&#xFF0C;&#x4E3B;&#x8981;&#x7684;&#x60F3;&#x6CD5;&#x5C31;&#x662F;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#xFF0C;&#x4ECE;&#x4E24;&#x4E2A;&#x65B9;&#x9762;&#x53BB;&#x52A0;&#x548C;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;<code>nums[i]</code>,&#x4E00;&#x4E2A;&#x662F;<code>1-n</code>&#x7684;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x52A0;&#x548C;&#xFF0C;&#x7136;&#x540E;&#x53EA;&#x8981;&#x63D0;&#x4F9B;&#x4E00;&#x6B21;<code>1-n</code>&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x5C31;&#x7EDF;&#x8BA1;&#x4E00;&#x6B21;&#x9700;&#x8981;&#x8865;&#x5145;&#x7684;&#x6570;&#x5B57;&#x3002;</p></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function"><span class="keyword">int</span> <span class="title">minPatchess</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> n)</span></span>{</span><br><span class="line">&gt;        <span class="keyword">int</span> i=<span class="number">0</span>,count=<span class="number">0</span>;</span><br><span class="line">&gt;        <span class="keyword">long</span> <span class="keyword">long</span> maxsum=<span class="number">0</span>;</span><br><span class="line">&gt;        <span class="keyword">while</span>(maxsum&lt;n){</span><br><span class="line">&gt;            <span class="keyword">if</span>(i&lt;nums.size()  &amp;&amp;  nums[i]&lt;maxsum+<span class="number">1</span>){</span><br><span class="line">&gt;                maxsum=maxsum+nums[i];</span><br><span class="line">&gt;                i++;</span><br><span class="line">&gt;            }<span class="keyword">else</span>{</span><br><span class="line">&gt;                maxsum+=(maxsum+<span class="number">1</span>);</span><br><span class="line">&gt;                count++;</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">return</span> count;</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote></blockquote><h2><span id="331-x9a8cx8bc1x4e8cx53c9x6811x7684x524dx5e8fx5e8fx5217x5316-x4e2dx7b49">331. &#x9A8C;&#x8BC1;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x524D;&#x5E8F;&#x5E8F;&#x5217;&#x5316; - &#x4E2D;&#x7B49;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x5E8F;&#x5217;&#x5316;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x662F;&#x4F7F;&#x7528;&#x524D;&#x5E8F;&#x904D;&#x5386;&#x3002;&#x5F53;&#x6211;&#x4EEC;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x975E;&#x7A7A;&#x8282;&#x70B9;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BB0;&#x5F55;&#x4E0B;&#x8FD9;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x503C;&#x3002;&#x5982;&#x679C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x7A7A;&#x8282;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x6807;&#x8BB0;&#x503C;&#x8BB0;&#x5F55;&#xFF0C;&#x4F8B;&#x5982; <code>#</code>&#x3002;</p><p>&#x4F8B;&#x5982;&#xFF0C;&#x4E0A;&#x9762;&#x7684;&#x4E8C;&#x53C9;&#x6811;&#x53EF;&#x4EE5;&#x88AB;&#x5E8F;&#x5217;&#x5316;&#x4E3A;&#x5B57;&#x7B26;&#x4E32; <code>&quot;9,3,4,#,#,1,#,#,2,#,6,#,#&quot;</code>&#xFF0C;&#x5176;&#x4E2D; <code>#</code> &#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x7A7A;&#x8282;&#x70B9;&#x3002;</p><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E32;&#x4EE5;&#x9017;&#x53F7;&#x5206;&#x9694;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x9A8C;&#x8BC1;&#x5B83;&#x662F;&#x5426;&#x662F;&#x6B63;&#x786E;&#x7684;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x524D;&#x5E8F;&#x5E8F;&#x5217;&#x5316;&#x3002;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x5728;&#x4E0D;&#x91CD;&#x6784;&#x6811;&#x7684;&#x6761;&#x4EF6;&#x4E0B;&#x7684;&#x53EF;&#x884C;&#x7B97;&#x6CD5;&#x3002;</p><p>&#x6BCF;&#x4E2A;&#x4EE5;&#x9017;&#x53F7;&#x5206;&#x9694;&#x7684;&#x5B57;&#x7B26;&#x6216;&#x4E3A;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#x6216;&#x4E3A;&#x4E00;&#x4E2A;&#x8868;&#x793A; <code>null</code> &#x6307;&#x9488;&#x7684; <code>&apos;#&apos;</code> &#x3002;</p><p>&#x4F60;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x8F93;&#x5165;&#x683C;&#x5F0F;&#x603B;&#x662F;&#x6709;&#x6548;&#x7684;&#xFF0C;&#x4F8B;&#x5982;&#x5B83;&#x6C38;&#x8FDC;&#x4E0D;&#x4F1A;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x8FDE;&#x7EED;&#x7684;&#x9017;&#x53F7;&#xFF0C;&#x6BD4;&#x5982; <code>&quot;1,,3&quot;</code> &#x3002;</p><p>&#x4E8B;&#x4F8B;&#xFF1A;</p><p>&#x8F93;&#x5165;: &#x201C;9,3,4,#,#,1,#,#,2,#,6,#,#&#x201D;<br>&#x8F93;&#x51FA;: true</p></blockquote><ul><li>&#x89E3;&#x9898;&#x601D;&#x8DEF;</li></ul><blockquote><ol><li><p>&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x6808;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x56E0;&#x4E3A;&#x641C;&#x7D22;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x662F;&#x53F3;&#x5B50;&#x6811;&#x5927;&#x4E8E;&#x6839;&#x5927;&#x4E8E;&#x5DE6;&#x5B50;&#x6811;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#x56E0;&#x6B64;&#x628A;&#x6570;&#x7EC4;&#x8FDB;&#x884C;&#x538B;&#x6808;&#xFF0C;&#x5C06;&#x6839;&#x8282;&#x70B9;&#x538B;&#x5165;&#x6808;&#xFF0C;&#x5F80;&#x540E;&#x904D;&#x5386;&#xFF0C;&#x53EA;&#x8981;&#x9047;&#x5230;&#x7684;&#x6570;&#x5B57;&#x6BD4;&#x6808;&#x9876;&#x5143;&#x7D20;&#x5C0F;&#xFF0C;&#x5C31;&#x8BF4;&#x660E;&#x662F;&#x5DE6;&#x5B50;&#x6811;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x7EE7;&#x7EED;&#x538B;&#x6808;&#xFF0C;&#x5982;&#x679C;&#x9047;&#x5230;&#x7684;&#x6570;&#x5B57;&#x6BD4;&#x6808;&#x9876;&#x5143;&#x7D20;&#x5927;&#xFF0C;&#x5C31;&#x662F;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x5143;&#x7D20;&#x4E86;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x66F4;&#x65B0;&#x6700;&#x5C0F;&#x503C;&#xFF0C;&#x5E76;&#x4E14;&#x5220;&#x9664;&#x6808;&#x9876;&#x5143;&#x7D20;&#xFF0C;&#x7EE7;&#x7EED;&#x5F80;&#x540E;&#x904D;&#x5386;&#xFF0C;&#x5982;&#x679C;&#x8FD8;&#x662F;&#x5927;&#x4E8E; &#xFF0C;&#x5C31;&#x7EE7;&#x7EED;&#x5220;&#x9664;&#x6808;&#x9876;&#x5143;&#x7D20;&#xFF0C;&#x5982;&#x679C;&#x6808;&#x7A7A;&#x4E86;&#x6216;&#x8005;&#x5F53;&#x524D;&#x6808;&#x9876;&#x5143;&#x7D20;&#x5927;&#x4E8E;&#x5F53;&#x524D;&#x503C;&#x5C31;&#x505C;&#x6B62;&#xFF0C;&#x5E76;&#x4E14;&#x538B;&#x5165;&#x5F53;&#x524D;&#x503C;&#xFF0C;&#x5982;&#x679C;&#x5F53;&#x524D;&#x503C;&#x5C0F;&#x4E8E;&#x6700;&#x5C0F;&#x503C;&#x5C31;&#x62A5;&#x9519;&#x3002;&#xFF08;&#x8D44;&#x6599;&#x6765;&#x6E90;&#xFF1A;<a href="https://www.cnblogs.com/grandyang/p/5327635.html" target="_blank" rel="noopener">[LeetCode] Verify Preorder Sequence in Binary Search Tree &#x9A8C;&#x8BC1;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x5148;&#x5E8F;&#x5E8F;&#x5217;</a>&#xFF09;</p></li><li><p>&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x601D;&#x8DEF;&#x662F;&#xFF0C;&#x770B;&#x89C4;&#x5F8B;&#xFF0C;&#x56E0;&#x4E3A;&#x5F00;&#x5934;&#x4E0D;&#x53EF;&#x80FD;&#x662F; <code>#</code> &#xFF0C;&#x901A;&#x8FC7;&#x89C2;&#x5BDF;&#x89C4;&#x5F8B;&#x662F;&#xFF0C;&#x6570;&#x7EC4;&#x7684;&#x6570;&#x76EE;&#x548C; &#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6570;&#x5B57;&#x4E2A;&#x6570;&#x7684;&#x5173;&#x7CFB;&#x662F; :<code>n=num_n*2 +1</code></p></li></ol></blockquote><ul><li>&#x4EE3;&#x7801;&#xFF1A;</li></ul><blockquote><p>1.</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function"><span class="keyword">bool</span> <span class="title">verifyPreorder</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp; preorder)</span></span>{</span><br><span class="line">&gt;        <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;s;</span><br><span class="line">&gt;        <span class="keyword">int</span> min_num = INT_MIN;</span><br><span class="line">&gt;        <span class="keyword">for</span>(<span class="keyword">auto</span> node : preorder){</span><br><span class="line">&gt;            <span class="keyword">if</span>(node&lt;min_num) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&gt;            <span class="keyword">while</span>(!s.empty() &amp;&amp; node &gt; s.top()){</span><br><span class="line">&gt;                min_num = s.top();</span><br><span class="line">&gt;                s.pop();</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;            s.push(node);</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>2.</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function"><span class="keyword">bool</span> <span class="title">verifyPreorder</span><span class="params">(<span class="built_in">string</span> preorder)</span></span>{</span><br><span class="line">&gt;        preorder = preorder+<span class="string">&quot;,&quot;</span>;</span><br><span class="line">&gt;        <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">&gt;        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;preorder.size();i++){</span><br><span class="line">&gt;            <span class="keyword">if</span>(preorder[i] ==<span class="string">&apos;,&apos;</span>) <span class="keyword">continue</span>;</span><br><span class="line">&gt;            <span class="keyword">if</span>((--count)&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&gt;            <span class="keyword">if</span>(preorder[i<span class="number">-1</span>]!=<span class="string">&apos;#&apos;</span>) count+=<span class="number">2</span>;</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">return</span> count==<span class="number">0</span>;</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote></blockquote><h2><span id="101x5bf9x79f0x4e8cx53c9x6811-x7b80x5355">101.&#x5BF9;&#x79F0;&#x4E8C;&#x53C9;&#x6811;- &#x7B80;&#x5355;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x955C;&#x50CF;&#x5BF9;&#x79F0;</p><p>&#x6BD4;&#x5982;&#x4E8C;&#x53C9;&#x6811;[1,2,2,3,4,4,3]&#x5C31;&#x662F;&#x5BF9;&#x79F0;&#x7684;</p><p>&#x591A;&#x5229;&#x7528;&#x8FED;&#x4EE3;&#x548C;&#x9012;&#x5F52;</p></blockquote><ul><li>&#x89E3;&#x9898;&#x601D;&#x8DEF;</li></ul><blockquote><p>&#x8FD9;&#x4E00;&#x9898;&#x601D;&#x8DEF;&#x4E0A;&#x4E0D;&#x96BE;&#xFF0C;&#x770B;&#x7684;&#x5F88;&#x6E05;&#x695A;&#xFF0C;&#x5C31;&#x662F;&#x5BF9;&#x6BD4;&#x5BF9;&#x79F0;&#x4F4D;&#x7F6E;&#x7684;&#x6570;&#x503C;&#x662F;&#x5426;&#x76F8;&#x7B49;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x9012;&#x5F52;&#x6765;&#x505A;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x6808;&#x6765;&#x505A;&#xFF0C;&#x601D;&#x8DEF;&#x4E5F;&#x6BD4;&#x8F83;&#x597D;&#x60F3;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x5B9E;&#x9645;&#x5199;&#x7684;&#x65F6;&#x5019;&#x3002;&#x51FA;&#x73B0;&#x4E86;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#xFF0C;&#x4E3B;&#x8981;&#x8FD8;&#x662F;&#x601D;&#x8DEF;&#x4E0D;&#x591F;&#x6E05;&#x6670;&#x5427;&#x3002;</p></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function"><span class="keyword">bool</span> <span class="title">isSymmetric</span><span class="params">(TreeNode * root)</span></span>{</span><br><span class="line">&gt;        <span class="keyword">if</span>(!root) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&gt;        </span><br><span class="line">&gt;    }</span><br><span class="line">&gt;    <span class="keyword">private</span>:</span><br><span class="line">&gt;    <span class="function"><span class="keyword">bool</span> <span class="title">Dis_symmetric</span><span class="params">(TreeNode* left, TreeNode * right)</span></span>{</span><br><span class="line">&gt;        <span class="keyword">if</span>(!left &amp;&amp; !right) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&gt;        <span class="keyword">if</span>(!left || !right) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&gt;        <span class="keyword">return</span> (left-&gt;val == right-&gt;val) &amp;&amp; Dis_symmetric(left-&gt;left,right-&gt;right) &amp;&amp; Dis_symmetric(left-&gt;right,right-&gt;left);<span class="number">1</span></span><br><span class="line">&gt;    }</span><br><span class="line">&gt;}; </span><br><span class="line">&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><p>&#x6808;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;</p><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function"><span class="keyword">bool</span> <span class="title">isSymmetric</span><span class="params">(TreeNode* root)</span></span>{</span><br><span class="line">&gt;        <span class="keyword">if</span>(!root) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&gt;        <span class="built_in">stack</span>&lt;TreeNode *&gt;s;</span><br><span class="line">&gt;        TreeNode *p= root-&gt;left,*q = root-&gt;right;</span><br><span class="line">&gt;        s.push(p);</span><br><span class="line">&gt;        s.push(q);</span><br><span class="line">&gt;        <span class="keyword">while</span>(!s.empty()){</span><br><span class="line">&gt;            p=s.top();s.pop();</span><br><span class="line">&gt;            q=s.top();s.pop();</span><br><span class="line">&gt;            </span><br><span class="line">&gt;            <span class="keyword">if</span>(!p &amp;&amp; !q) <span class="keyword">continue</span>;</span><br><span class="line">&gt;            <span class="keyword">if</span>(!p || !q) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&gt;            <span class="keyword">if</span>(p-&gt;val != q-&gt;val) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&gt;            </span><br><span class="line">&gt;            s.push(p-&gt;left);s.push()</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><h2><span id="728-x81eax9664x6570-x7b80x5355">728. &#x81EA;&#x9664;&#x6570; - &#x7B80;&#x5355;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p><em>&#x81EA;&#x9664;&#x6570;</em> &#x662F;&#x6307;&#x53EF;&#x4EE5;&#x88AB;&#x5B83;&#x5305;&#x542B;&#x7684;&#x6BCF;&#x4E00;&#x4F4D;&#x6570;&#x9664;&#x5C3D;&#x7684;&#x6570;&#x3002;</p><p>&#x4F8B;&#x5982;&#xFF0C;128 &#x662F;&#x4E00;&#x4E2A;&#x81EA;&#x9664;&#x6570;&#xFF0C;&#x56E0;&#x4E3A; <code>128 % 1 == 0</code>&#xFF0C;<code>128 % 2 == 0</code>&#xFF0C;<code>128 % 8 == 0</code>&#x3002;</p><p>&#x8FD8;&#x6709;&#xFF0C;&#x81EA;&#x9664;&#x6570;&#x4E0D;&#x5141;&#x8BB8;&#x5305;&#x542B; 0 &#x3002;</p><p>&#x7ED9;&#x5B9A;&#x4E0A;&#x8FB9;&#x754C;&#x548C;&#x4E0B;&#x8FB9;&#x754C;&#x6570;&#x5B57;&#xFF0C;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;&#x5217;&#x8868;&#xFF0C;&#x5217;&#x8868;&#x7684;&#x5143;&#x7D20;&#x662F;&#x8FB9;&#x754C;&#xFF08;&#x542B;&#x8FB9;&#x754C;&#xFF09;&#x5185;&#x6240;&#x6709;&#x7684;&#x81EA;&#x9664;&#x6570;&#x3002;</p></blockquote><ul><li>&#x89E3;&#x9898;&#x601D;&#x8DEF;</li></ul><blockquote><p>&#x8FD9;&#x9898;&#x6CA1;&#x5565;&#x7279;&#x522B;&#x7684;&#xFF0C;&#x5C31;&#x662F;&#x76F4;&#x63A5;&#x5C06;&#x6570;&#x5B57;&#x62C6;&#x5F00;&#xFF0C;&#x7136;&#x540E;&#x9664;&#x6389;&#x5C31;&#x884C;&#x4E86;&#x3002;</p></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">&gt;<span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; selfDividingNumbers(<span class="keyword">int</span> left, <span class="keyword">int</span> right) {</span><br><span class="line">&gt;         <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; res;</span><br><span class="line">&gt; <span class="keyword">for</span> (<span class="keyword">int</span> i=left;i&lt;=right;i++)</span><br><span class="line">&gt; {</span><br><span class="line">&gt; <span class="keyword">if</span> (self_div(i))</span><br><span class="line">&gt; {</span><br><span class="line">&gt; res.push_back(i);</span><br><span class="line">&gt; }</span><br><span class="line">&gt; }</span><br><span class="line">&gt;<span class="keyword">return</span> res;</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;    <span class="function"><span class="keyword">bool</span> <span class="title">self_div</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">&gt; <span class="keyword">int</span> boss = n;</span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="keyword">while</span> (n!=<span class="number">0</span>)</span><br><span class="line">&gt;{</span><br><span class="line">&gt; <span class="keyword">if</span> (n % <span class="number">10</span> !=<span class="number">0</span> &amp;&amp; boss%( n % <span class="number">10</span>) == <span class="number">0</span>)</span><br><span class="line">&gt; {</span><br><span class="line">&gt; n = n / <span class="number">10</span>;</span><br><span class="line">&gt; }<span class="keyword">else</span></span><br><span class="line">&gt; {</span><br><span class="line">&gt; <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&gt; }</span><br><span class="line">&gt;}</span><br><span class="line">&gt; <span class="keyword">if</span> (n==<span class="number">0</span>)</span><br><span class="line">&gt; {</span><br><span class="line">&gt; <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&gt; }</span><br><span class="line">&gt; }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote></blockquote><h2><span id="856-x62ecx53f7x7684x5206x6570-x4e2dx7b49">856. &#x62EC;&#x53F7;&#x7684;&#x5206;&#x6570;- &#x4E2D;&#x7B49;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x5E73;&#x8861;&#x62EC;&#x53F7;&#x5B57;&#x7B26;&#x4E32; <code>S</code>&#xFF0C;&#x6309;&#x4E0B;&#x8FF0;&#x89C4;&#x5219;&#x8BA1;&#x7B97;&#x8BE5;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5206;&#x6570;&#xFF1A;</p><ul><li><code>()</code> &#x5F97; 1 &#x5206;&#x3002;</li><li><code>AB</code> &#x5F97; <code>A + B</code> &#x5206;&#xFF0C;&#x5176;&#x4E2D; A &#x548C; B &#x662F;&#x5E73;&#x8861;&#x62EC;&#x53F7;&#x5B57;&#x7B26;&#x4E32;&#x3002;</li><li><code>(A)</code> &#x5F97; <code>2 * A</code> &#x5206;&#xFF0C;&#x5176;&#x4E2D; A &#x662F;&#x5E73;&#x8861;&#x62EC;&#x53F7;&#x5B57;&#x7B26;&#x4E32;&#x3002;</li></ul><p>&#x6BD4;&#x5982;&#xFF1A;</p><p>&#x8F93;&#x5165;&#xFF1A; &#x201C;(()(()))&#x201D;</p><p>&#x8F93;&#x51FA;&#xFF1A;6</p></blockquote><ul><li>&#x89E3;&#x9898;&#x601D;&#x8DEF;</li></ul><blockquote><p>&#x8FD9;&#x4E00;&#x9898;&#x7684;&#x601D;&#x8DEF;&#x548C;&#x62EC;&#x53F7;&#x5339;&#x914D;&#x633A;&#x50CF;&#xFF0C;&#x7B2C;&#x4E00;&#x60F3;&#x6CD5;&#x5C31;&#x662F;&#x7528;&#x6808;&#x6765;&#x4F5C;&#x4E3A;&#x5339;&#x914D;&#x7684;&#x5BB9;&#x5668;&#xFF0C;&#x7136;&#x540E;&#x7B2C;&#x4E8C;&#x4E2A;&#x60F3;&#x6CD5;&#x5C31;&#x662F;&#x5982;&#x4F55;&#x5C06;&#x4E0D;&#x540C;&#x7684;&#x6307;&#x4EE3;&#x7279;&#x5F81;&#x8868;&#x793A;&#x51FA;&#x6765;&#x3002;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x7ED9;&#x51FA;&#x4E24;&#x4E2A;&#x6808;&#xFF0C;&#x4E00;&#x4E2A;&#x7528;&#x6765;&#x5B58;&#x50A8;&#x62EC;&#x53F7;&#x7684;&#x4E0B;&#x6807;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x8868;&#x793A;&#x73B0;&#x5728;&#x7684;&#x8BA1;&#x7B97;&#x6570;&#x503C;&#x3002;</p><p>&#x601D;&#x8DEF;&#xFF1A;</p><ol><li>&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x6808;&#x548C;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x6808;&#x7528;&#x6765;&#x5B58;&#x653E;&#x2019;(&#x2018;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x6570;&#x7EC4;&#x4E2D;&#x7528;&#x6765;&#x5B58;&#x653E;&#x5176;&#x5BF9;&#x5E94;&#x7684;&#x4F4D;&#x7F6E;&#x7684;&#x503C;</li><li>&#x628A;&#x6BCF;&#x4E00;&#x4E2A;&#x2019;(&#x2018;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5176;&#x4E2D;<code>s</code>&#x4E2D;&#x7684;&#x4E0B;&#x6807;&#xFF0C;&#x5B58;&#x653E;&#x5728;&#x6808;&#x4E2D;&#xFF0C;&#x5F53;&#x6765;&#x4E86;&#x4E00;&#x4E2A;&#x2019;)&#x2019;&#x65F6;&#xFF0C;&#x53D6;&#x51FA;&#x6808;&#x9876;&#x7684;&#x2019;(&#x2018;&#x7684;&#x4E0B;&#x6807;&#xFF0C;&#x5C06;&#x4ECE;&#x6808;&#x2019;(&#x2018;&#x7684;&#x4E0B;&#x6807;&#x5F00;&#x59CB;&#x5230;&#x2019;)&#x2019;&#x7684;&#x4F4D;&#x7F6E;&#x4E4B;&#x95F4;&#x7684;&#x6240;&#x6709;value&#x7684;&#x503C;&#x76F8;&#x52A0;&#xFF0C;&#x5B58;&#x653E;&#x5728;value&#x7684;&#x2019;)&#x2019;&#x7684;&#x4F4D;&#x7F6E;</li><li>&#x76F8;&#x52A0;&#x8FC7;&#x7684;&#x4F4D;&#x7F6E;&#x5168;&#x90E8;&#x7F6E;&#x4E3A;0</li><li>&#x6700;&#x540E;&#x76F8;&#x52A0;&#x6574;&#x4E2A;value&#x6570;&#x7EC4;&#x7684;&#x503C;&#x5373;&#x53EF;</li></ol></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="function"><span class="keyword">int</span> <span class="title">scoreOfParentheses</span><span class="params">(<span class="built_in">string</span> s)</span></span>{</span><br><span class="line">&gt;        <span class="keyword">int</span> len = s.size(),res=<span class="number">0</span>;</span><br><span class="line">&gt;        <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; Hash;</span><br><span class="line">&gt;        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;value(len,<span class="number">0</span>);</span><br><span class="line">&gt;        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++){</span><br><span class="line">&gt;            <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">&gt;            <span class="keyword">if</span>(s[i]=<span class="string">&apos;(&apos;</span>)</span><br><span class="line">&gt;                Hash.push(i);</span><br><span class="line">&gt;            <span class="keyword">else</span>{</span><br><span class="line">&gt;                <span class="keyword">if</span>(<span class="keyword">int</span> n.Hash.top();n&lt;i;n++){</span><br><span class="line">&gt;                    sum += value[n];</span><br><span class="line">&gt;                    value[n]=<span class="number">0</span>;</span><br><span class="line">&gt;                }</span><br><span class="line">&gt;                Hash.pop();</span><br><span class="line">&gt;                sum*=<span class="number">2</span>;</span><br><span class="line">&gt;                value[i]= sum==<span class="number">0</span> ?<span class="number">1</span>:sum;</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">for</span>(<span class="keyword">int</span> n:value){</span><br><span class="line">&gt;            res+=n;</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">return</span> res;</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote></blockquote><h2><span id="120-x4e09x89d2x5f62x6700x5c0fx8defx5f84x548c-x7b80x5355">120. &#x4E09;&#x89D2;&#x5F62;&#x6700;&#x5C0F;&#x8DEF;&#x5F84;&#x548C; - &#x7B80;&#x5355;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;&#xFF1A;</li></ul><blockquote><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x4E09;&#x89D2;&#x5F62;&#xFF0C;&#x627E;&#x51FA;&#x81EA;&#x9876;&#x5411;&#x4E0B;&#x7684;&#x6700;&#x5C0F;&#x8DEF;&#x5F84;&#x548C;&#x3002;&#x6BCF;&#x4E00;&#x6B65;&#x53EA;&#x80FD;&#x79FB;&#x52A8;&#x5230;&#x4E0B;&#x4E00;&#x884C;&#x4E2D;&#x76F8;&#x90BB;&#x7684;&#x7ED3;&#x70B9;&#x4E0A;&#x3002;</p><figure class="highlight lsl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;[</span><br><span class="line">&gt;     [<span class="number">2</span>],</span><br><span class="line">&gt;    [<span class="number">3</span>,<span class="number">4</span>],</span><br><span class="line">&gt;   [<span class="number">6</span>,<span class="number">5</span>,<span class="number">7</span>],</span><br><span class="line">&gt;  [<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">3</span>]</span><br><span class="line">&gt;]</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>&#x81EA;&#x9876;&#x5411;&#x4E0B;&#x7684;&#x6700;&#x5C0F;&#x8DEF;&#x5F84;&#x548C;&#x4E3A; <code>11</code>&#xFF08;&#x5373;&#xFF0C;<strong>2</strong> + <strong>3</strong> + <strong>5</strong> + <strong>1</strong> = 11&#xFF09;&#x3002;</p><p><strong>&#x8BF4;&#x660E;&#xFF1A;</strong></p><p>&#x5982;&#x679C;&#x4F60;&#x53EF;&#x4EE5;&#x53EA;&#x4F7F;&#x7528; <em>O</em>(<em>n</em>) &#x7684;&#x989D;&#x5916;&#x7A7A;&#x95F4;&#xFF08;<em>n</em> &#x4E3A;&#x4E09;&#x89D2;&#x5F62;&#x7684;&#x603B;&#x884C;&#x6570;&#xFF09;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x7684;&#x7B97;&#x6CD5;&#x4F1A;&#x5F88;&#x52A0;&#x5206;&#x3002;</p></blockquote><ul><li>&#x89E3;&#x9898;&#x601D;&#x8DEF;</li></ul><blockquote><p>&#x8FD9;&#x4E00;&#x9898;&#x4E3B;&#x8981;&#x662F;&#x52A8;&#x6001;&#x89C4;&#x5212;&#xFF1A;&#x5C31;&#x662F;&#x4ECE;&#x4E0B;&#x5F80;&#x4E0A;&#x8FDB;&#x884C;&#x53E0;&#x52A0;&#xFF0C;&#x5F53;&#x9047;&#x5230;&#x6BD4;&#x8F83;&#x5C0F;&#x7684;&#x6570;&#x5C31;&#x53D6;&#x8F83;&#x5C0F;&#x7684;&#x6570;&#xFF0C;&#x5148;&#x8BA1;&#x7B97;&#x5012;&#x6570;&#x7B2C;&#x4E8C;&#x5C42;&#x7684;&#x53E0;&#x52A0;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5411;&#x4E0A;&#x8FDB;&#x884C;&#x53E0;&#x52A0;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x4E3B;&#x8981;&#x7684;&#x8BA1;&#x7B97;&#x7684;&#x516C;&#x5F0F;&#xFF1A;</p><p>triangle[i][j] = min(triangle[i+1][j],triangle[i+1][j+1])+triangle[i][j]</p></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function"><span class="keyword">int</span> <span class="title">minimumTotal</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; &amp; triangle)</span></span>{</span><br><span class="line">&gt;        <span class="keyword">if</span>(triangle.size()==<span class="number">0</span>)</span><br><span class="line">&gt;            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&gt;        <span class="keyword">for</span>(<span class="keyword">int</span> i=triangle.size()<span class="number">-2</span>;i&gt;<span class="number">-1</span>;i--){</span><br><span class="line">&gt;            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++){</span><br><span class="line">&gt;                triangle[i][j] = min(triangle[i+<span class="number">1</span>][j],triangle[i+<span class="number">1</span>][j+<span class="number">1</span>]) + triangle[i][j];</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">return</span> triangle[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote></blockquote><h2><span id="791-x81eax5b9ax4e49x5b57x7b26x4e32x6392x5e8f-x4e2dx7b49">791. &#x81EA;&#x5B9A;&#x4E49;&#x5B57;&#x7B26;&#x4E32;&#x6392;&#x5E8F; - &#x4E2D;&#x7B49;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x5B57;&#x7B26;&#x4E32;<code>S</code>&#x548C; <code>T</code> &#x53EA;&#x5305;&#x542B;&#x5C0F;&#x5199;&#x5B57;&#x7B26;&#x3002;&#x5728;<code>S</code>&#x4E2D;&#xFF0C;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x53EA;&#x4F1A;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x3002;</p><p><code>S</code> &#x5DF2;&#x7ECF;&#x6839;&#x636E;&#x67D0;&#x79CD;&#x89C4;&#x5219;&#x8FDB;&#x884C;&#x4E86;&#x6392;&#x5E8F;&#x3002;&#x6211;&#x4EEC;&#x8981;&#x6839;&#x636E;<code>S</code>&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#x987A;&#x5E8F;&#x5BF9;<code>T</code>&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002;&#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BF4;&#xFF0C;&#x5982;&#x679C;<code>S</code>&#x4E2D;<code>x</code>&#x5728;<code>y</code>&#x4E4B;&#x524D;&#x51FA;&#x73B0;&#xFF0C;&#x90A3;&#x4E48;&#x8FD4;&#x56DE;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;<code>x</code>&#x4E5F;&#x5E94;&#x51FA;&#x73B0;&#x5728;<code>y</code>&#x4E4B;&#x524D;&#x3002;</p><p>&#x8FD4;&#x56DE;&#x4EFB;&#x610F;&#x4E00;&#x79CD;&#x7B26;&#x5408;&#x6761;&#x4EF6;&#x7684;&#x5B57;&#x7B26;&#x4E32;<code>T</code>&#x3002;</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">&#x793A;&#x4F8B;:</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&#x8F93;&#x5165;:</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">S = <span class="string">&quot;cba&quot;</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">T = <span class="string">&quot;abcd&quot;</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&#x8F93;&#x51FA;: <span class="string">&quot;cbad&quot;</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&#x89E3;&#x91CA;: </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">S&#x4E2D;&#x51FA;&#x73B0;&#x4E86;&#x5B57;&#x7B26; <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, &#x6240;&#x4EE5; <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span> &#x7684;&#x987A;&#x5E8F;&#x5E94;&#x8BE5;&#x662F; <span class="string">&quot;c&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;a&quot;</span>. </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&#x7531;&#x4E8E; <span class="string">&quot;d&quot;</span> &#x6CA1;&#x6709;&#x5728;S&#x4E2D;&#x51FA;&#x73B0;, &#x5B83;&#x53EF;&#x4EE5;&#x653E;&#x5728;T&#x7684;&#x4EFB;&#x610F;&#x4F4D;&#x7F6E;. <span class="string">&quot;dcba&quot;</span>, <span class="string">&quot;cdba&quot;</span>, <span class="string">&quot;cbda&quot;</span> &#x90FD;&#x662F;&#x5408;&#x6CD5;&#x7684;&#x8F93;&#x51FA;&#x3002;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote><ul><li>&#x89E3;&#x9898;&#x601D;&#x8DEF;</li></ul><blockquote><p>&#x8FD9;&#x4E00;&#x9898;&#x53EF;&#x4EE5;&#x7528;&#x6C34;&#x6876;&#x6CD5;&#xFF0C;&#x5148;&#x5C06;&#x5F85;&#x6392;&#x5E8F;&#x7684;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x653E;&#x8FDB;&#x6C34;&#x6876;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x6392;&#x597D;&#x987A;&#x5E8F;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;&#x5220;&#x9664;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x53EA;&#x8981;&#x6700;&#x540E;&#x591A;&#x51FA;&#x6765;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x518D;&#x6392;&#x5728;&#x540E;&#x9762;&#x5C31;&#x884C;&#x4E86;&#x3002;</p><p>&#x8FD8;&#x4E00;&#x79CD;&#x6BD4;&#x8F83;&#x7B80;&#x6D01;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD0;&#x7528;C++11&#x7684;&#x65B0;&#x7279;&#x6027;&#xFF0C;&#x5229;&#x7528;&#x6392;&#x597D;&#x5E8F;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x987A;&#x5E8F;&#x5BF9;&#x5F85;&#x6392;&#x5E8F;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x5C31;&#x884C;&#x3002;</p><p><code>&#x8FD9;&#x9053;&#x9898;&#x8BA9;&#x6211;&#x5B66;&#x5230;&#x4E86;&#x633A;&#x591A;&#x7684;</code>&#xFF1A;</p><ol><li>&#x4E00;&#x4E2A;&#x5C31;&#x662F;string&#x7C7B;&#x578B;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;push_back&#x8FDB;&#x884C;&#x5B57;&#x7B26;&#x5143;&#x7D20;&#x7684;&#x6DFB;&#x52A0;&#x548C;vector&#x5F88;&#x50CF;</li><li>&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x5C31;&#x662F;C++11&#x7684;&#x65B0;&#x7279;&#x6027;&#xFF1A;&#x4E00;&#x4E2A;&#x662F;for&#x5FAA;&#x73AF;&#xFF0C;&#x5BF9;&#x4E8E;&#x5B57;&#x7B26;&#x4E32;&#x7C7B;&#x578B;&#x7684;&#x904D;&#x5386;&#x5F88;&#x65B9;&#x4FBF;&#xFF1B;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x5C31;&#x662F;&#x5BF9;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x6392;&#x5E8F;&#x4F7F;&#x7528;&#x56FA;&#x5B9A;&#x683C;&#x5F0F;&#x7684;&#x6392;&#x5E8F;&#x8BED;&#x6CD5;&#x5F88;&#x65B9;&#x4FBF;&#x3002;<code>sort(string1.begin(),string1.end(),[&amp;](char a,char b){return string2.find(a) &lt;string2.find(b);});</code></li></ol></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><p>&#x65B9;&#x6CD5;&#x4E00;&#xFF1A;</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function"><span class="keyword">int</span> <span class="title">customSortString</span><span class="params">(<span class="built_in">string</span> S,<span class="built_in">string</span> T)</span></span>{</span><br><span class="line">&gt;        <span class="built_in">string</span> res=<span class="string">&quot;&quot;</span>;</span><br><span class="line">&gt;        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;cnt(<span class="number">26</span>,<span class="number">0</span>);</span><br><span class="line">&gt;        <span class="keyword">for</span>(<span class="keyword">char</span> c:T) ++cnt[c-<span class="string">&apos;a&apos;</span>];</span><br><span class="line">&gt;        <span class="keyword">for</span>(<span class="keyword">char</span> c:S) </span><br><span class="line">&gt;        {</span><br><span class="line">&gt;            <span class="keyword">while</span>(cnt[c-<span class="string">&apos;a&apos;</span>]--&gt;<span class="number">0</span>)</span><br><span class="line">&gt;            res.push_back(c);</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">for</span>(<span class="keyword">char</span> c:T){</span><br><span class="line">&gt;            <span class="keyword">while</span>(cnt[c-<span class="string">&apos;a&apos;</span>]--&gt;<span class="number">0</span>)</span><br><span class="line">&gt;            res.push_back(c);</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;        <span class="keyword">return</span> res;</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;    </span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>&#x65B9;&#x6CD5;&#x4E8C;&#xFF1A;</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function"><span class="built_in">string</span> <span class="title">customSortString</span><span class="params">(<span class="built_in">string</span> S, <span class="built_in">string</span> T)</span></span>{</span><br><span class="line">&gt;        sort(T.begin(),T.end(),[&amp;](<span class="keyword">char</span> a, <span class="keyword">char</span> b){<span class="keyword">return</span> S.find(a) &lt;S.find(b);})</span><br><span class="line">&gt;        <span class="keyword">return</span> T;</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><h2><span id="283-x79fbx52a8x96f6-x7b80x5355">283. &#x79FB;&#x52A8;&#x96F6;- &#x7B80;&#x5355;</span></h2><ul><li>&#x9898;&#x76EE;&#x63CF;&#x8FF0;</li></ul><blockquote><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4; <code>nums</code>&#xFF0C;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5C06;&#x6240;&#x6709; <code>0</code> &#x79FB;&#x52A8;&#x5230;&#x6570;&#x7EC4;&#x7684;&#x672B;&#x5C3E;&#xFF0C;&#x540C;&#x65F6;&#x4FDD;&#x6301;&#x975E;&#x96F6;&#x5143;&#x7D20;&#x7684;&#x76F8;&#x5BF9;&#x987A;&#x5E8F;&#x3002;</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">&#x8F93;&#x5165;: [0,1,0,3,12]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&#x8F93;&#x51FA;: [1,3,12,0,0]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote><ul><li>&#x89E3;&#x9898;&#x601D;&#x8DEF;</li></ul><blockquote><p>&#x8FD9;&#x4E00;&#x9898;&#x7684;&#x601D;&#x8DEF;&#x5C31;&#x662F;&#x7ED9;&#x4E24;&#x4E2A;&#x6307;&#x9488;&#x4E00;&#x4E2A;&#x5411;&#x540E;&#x904D;&#x5386;&#xFF0C;&#x4E00;&#x4E2A;&#x67E5;&#x770B;&#x5F53;&#x524D;&#x5143;&#x7D20;&#x662F;&#x5426;&#x662F;0 &#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x662F;0&#x5C31;&#x7EE7;&#x7EED;&#x5411;&#x540E;&#x904D;&#x5386;&#xFF0C;&#x5728;&#x540E;&#x9762;&#x9047;&#x5230;&#x975E;0&#x7684;&#x6570;&#x503C;&#x518D;&#x548C;&#x524D;&#x9762;&#x7684;0&#x8FDB;&#x884C;&#x4EA4;&#x6362;</p></blockquote><ul><li>&#x4EE3;&#x7801;</li></ul><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line">&gt;    <span class="keyword">public</span>:</span><br><span class="line">&gt;    <span class="function"><span class="keyword">void</span> <span class="title">moveZeros</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span></span>{</span><br><span class="line">&gt;        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;i&lt;nums.size();i++){</span><br><span class="line">&gt;            <span class="keyword">if</span>(nums[i]){</span><br><span class="line">&gt;                swap(nums[i],nums[j++]);</span><br><span class="line">&gt;            }</span><br><span class="line">&gt;        }</span><br><span class="line">&gt;    }</span><br><span class="line">&gt;};</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 工作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>【2】爬虫学习-分析Ajax请求抓取今日头条街拍美图</title>
      <link href="/2018/11/07/%E3%80%902%E3%80%91%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/11/07/%E3%80%902%E3%80%91%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;&#x4E3B;&#x8981;&#x662F;&#x4ECE;&#x5177;&#x4F53;&#x7684;&#x5206;&#x6790;Ajax&#x8BF7;&#x6C42;&#x6293;&#x53D6;&#x4ECA;&#x65E5;&#x5934;&#x6761;&#x8857;&#x62CD;&#x7F8E;&#x56FE;&#x5165;&#x624B;&#xFF0C;&#x901A;&#x8FC7;&#x9879;&#x76EE;&#x6765;&#x5B66;&#x4E60;&#x76F8;&#x5173;&#x7684;&#x722C;&#x866B;&#x6280;&#x672F;&#xFF0C;&#x4EE5;&#x505A;&#x4EE3;&#x5B66;&#x3002;</p><a id="more"></a><h2><span id="x5206x6790ajaxx8bf7x6c42x6293x53d6x4ecax65e5x5934x6761x8857x62cdx7f8ex56fe">&#x5206;&#x6790;Ajax&#x8BF7;&#x6C42;&#x6293;&#x53D6;&#x4ECA;&#x65E5;&#x5934;&#x6761;&#x8857;&#x62CD;&#x7F8E;&#x56FE;</span></h2><h3><span id="x524dx63d0x6982x5ff5x8865x5145">&#x524D;&#x63D0;&#x6982;&#x5FF5;&#x8865;&#x5145;</span></h3><p>&#x200B;    &#x6709;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x5728;&#x7528;<code>request</code>&#x6293;&#x53D6;&#x9875;&#x9762;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x548C;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x770B;&#x5230;&#x7684;&#x53EF;&#x80FD;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x770B;&#x5230;&#x7684;&#x662F;&#x6B63;&#x5E38;&#x663E;&#x793A;&#x7684;&#x9875;&#x9762;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x662F;&#x5728;<code>request</code>&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x5E76;&#x6CA1;&#x6709;&#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x83B7;&#x53D6;&#x5F97;&#x5230;&#x7684;&#x90FD;&#x662F;&#x539F;&#x59CB;&#x7684;<code>HTML</code>&#x6587;&#x6863;&#xFF0C;&#x4F46;&#x662F;&#x6D4F;&#x89C8;&#x5668;&#x9875;&#x9762;&#x662F;&#x7ECF;&#x8FC7; <code>JavaScript</code>&#x5904;&#x7406;&#x6570;&#x636E;&#x540E;&#x751F;&#x6210;&#x7684;&#x7ED3;&#x679C;&#x3002;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x53EF;&#x80FD;&#x662F;&#x901A;&#x8FC7;<code>Ajax</code>&#x52A0;&#x8F7D;&#x5F97;&#x5230;&#x7684;&#x3002;</p><p>&#x200B;    &#x5BF9;&#x4E8E;<code>Ajax</code>&#x52A0;&#x8F7D;&#x6570;&#x636E;&#x7684;&#x60C5;&#x51B5;&#x6765;&#x8BF4;&#xFF0C;&#x6570;&#x636E;&#x52A0;&#x8F7D;&#x662F;&#x4E00;&#x79CD;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x539F;&#x59CB;&#x7684;&#x9875;&#x9762;&#x6700;&#x521D;&#x4E0D;&#x4F1A;&#x5305;&#x542B;&#x67D0;&#x4E9B;&#x6570;&#x636E;&#xFF0C;&#x539F;&#x59CB;&#x9875;&#x9762;&#x52A0;&#x8F7D;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#xFF0C;&#x4F1A;&#x518D;&#x5411;&#x670D;&#x52A1;&#x5668;&#x8BF7;&#x6C42;&#x67D0;&#x4E2A;&#x63A5;&#x53E3;&#x83B7;&#x53D6;&#x6570;&#x636E;&#x3002;&#x7136;&#x540E;&#x6570;&#x636E;&#x624D;&#x4F1A;&#x88AB;&#x5904;&#x7406;&#x4ECE;&#x800C;&#x5448;&#x73B0;&#x5728;&#x7F51;&#x9875;&#x4E0A;&#x3002;&#x8FD9;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x53D1;&#x9001;&#x4E86;&#x4E00;&#x4E2A;<code>Ajax</code>&#x8BF7;&#x6C42;&#x3002;&#x73B0;&#x5728;&#x7F51;&#x9875;&#x53D1;&#x5C55;&#x5C31;&#x662F;&#x8FD9;&#x6837;&#xFF1A;&#x7F51;&#x9875;&#x539F;&#x59CB;&#x7684;<code>HTML</code>&#x6587;&#x6863;&#x4E0D;&#x5305;&#x542B;&#x4EFB;&#x4F55;&#x6570;&#x636E;&#xFF0C;&#x6570;&#x636E;&#x90FD;&#x662F;&#x901A;&#x8FC7;<code>Ajax</code>&#x7EDF;&#x4E00;&#x52A0;&#x8F7D;&#x4E4B;&#x540E;&#x5448;&#x73B0;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x5728;<code>Web</code>&#x5F00;&#x53D1;&#x5546;&#x53EF;&#x4EE5;&#x505A;&#x524D;&#x540E;&#x7AEF;&#x5206;&#x79BB;&#xFF0C;&#x800C;&#x4E14;&#x964D;&#x4F4E;&#x670D;&#x52A1;&#x5668;&#x76F4;&#x63A5;&#x6E32;&#x67D3;&#x9875;&#x9762;&#x5E26;&#x6765;&#x7684;&#x538B;&#x529B;&#x3002;</p><p>&#x200B;    &#x5982;&#x679C;&#x9047;&#x5230;&#x8FD9;&#x6837;&#x7684;&#x9875;&#x9762;&#x662F;&#x65E0;&#x6CD5;&#x83B7;&#x53D6;&#x6709;&#x6548;&#x6570;&#x636E;&#x7684;&#xFF0C;&#x8FD9;&#x65F6;&#x5C31;&#x9700;&#x8981;&#x5206;&#x6790;&#x7F51;&#x9875;&#x540E;&#x53F0;&#x5411;&#x63A5;&#x53E3;&#x53D1;&#x9001;&#x7684;<code>Ajax</code>&#x8BF7;&#x6C42;&#xFF0C;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x7528;<code>requests</code>&#x6765;&#x6A21;&#x62DF;<code>Ajax</code>&#x8BF7;&#x6C42;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x53EF;&#x4EE5;&#x6210;&#x529F;&#x6293;&#x53D6;&#x4E86;&#x3002;</p><ul><li>Ajax</li></ul><blockquote><p>&#x5728;&#x8BF4;&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x4E4B;&#x524D;&#xFF0C;&#x4E00;&#x822C;&#x7684;&#x722C;&#x866B;&#x5C0F;&#x767D;&#x90FD;&#x4F1A;&#x5BF9;&#x8FD9;&#x4E2A;&#x6807;&#x9898;&#x4E2D;&#x7684;<code>Ajax</code>&#x4EA7;&#x751F;&#x7591;&#x95EE;&#x9700;&#x8981;&#x5148;&#x89E3;&#x91CA;&#x4E00;&#x4E0B;<code>Ajax</code> &#x3002;<code>Ajax</code>&#x5C31;&#x662F;<code>Asynchronous JavaScript and XML</code>&#xFF08;&#x5F02;&#x6B65;&#x7684;<code>JavaScript</code>&#x4E0E;<code>XML</code>&#x6280;&#x672F;&#xFF09;&#x8BF4;&#x767D;&#x4E86;&#x5C31;&#x662F;&#x5728;&#x4E0D;&#x5173;&#x95ED;&#x4E0D;&#x8DF3;&#x8F6C;&#x4E0D;&#x5237;&#x65B0;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5728;&#x7F51;&#x9875;&#x540E;&#x53F0;&#x63D0;&#x4EA4;&#x6570;&#x636E;&#xFF0C;&#x90E8;&#x5206;&#x66F4;&#x65B0;&#x9875;&#x9762;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x5728;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x9875;&#x9762;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x5728;&#x540E;&#x53F0;&#x4E0E;&#x670D;&#x52A1;&#x5668;&#x8FDB;&#x884C;&#x4E86;&#x6570;&#x636E;&#x4EA4;&#x4E92;&#xFF0C;&#x83B7;&#x53D6;&#x5230;&#x6570;&#x636E;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x5229;&#x7528;<code>JavaScript</code>&#x6539;&#x53D8;&#x7F51;&#x9875;&#xFF0C;&#x8FD9;&#x6837;&#x7F51;&#x9875;&#x5185;&#x4E8C;&#x5C31;&#x4F1A;&#x66F4;&#x65B0;&#x4E86;&#x3002;</p><p>&#x4E3E;&#x4F8B;&#x8BF4;&#x660E;&#xFF1A;&#x6211;&#x4EEC;&#x67E5;&#x770B;&#x5FAE;&#x535A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x90FD;&#x4F1A;&#x770B;&#x5230;&#x67E5;&#x770B;&#x4E86;&#x4E00;&#x5B9A;&#x7248;&#x9762;&#x7684;&#x5FAE;&#x535A;&#x4E4B;&#x540E;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x4E00;&#x4E2A;&#x52A0;&#x8F7D;&#x7684;&#x52A8;&#x753B;&#xFF0C;&#x8FC7;&#x4E00;&#x4F1A;&#x4E4B;&#x540E;&#x4F1A;&#x51FA;&#x73B0;&#x65B0;&#x7684;&#x5FAE;&#x535A;&#x3002;&#x8FD9;&#x4E2A;&#x52A0;&#x8F7D;&#x7684;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;<code>Ajax</code>&#x52A0;&#x8F7D;&#x3002;</p><p><code>Ajax</code>&#x8BF7;&#x6C42;&#x6B65;&#x9AA4;&#xFF1A;</p><ul><li>&#x53D1;&#x9001;&#x8BF7;&#x6C42;</li><li>&#x89E3;&#x6790;&#x5185;&#x5BB9;</li><li>&#x6E32;&#x67D3;&#x7F51;&#x9875;</li></ul></blockquote><ul><li>JSON</li></ul><blockquote><p>&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x9700;&#x8981;&#x4ECB;&#x7ECD;&#x7684;&#x6982;&#x5FF5;&#xFF08;&#x522B;&#x602A;&#x6211;&#x5570;&#x55E6;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4E5F;&#x662F;&#x5C0F;&#x767D;&#xFF0C;&#x5BF9;web&#x77E5;&#x8BC6;&#x4E86;&#x89E3;&#x7684;&#x4E5F;&#x4E0D;&#x591A;&#xFF0C;&#x8FB9;&#x505A;&#x8FB9;&#x5B66;&#xFF09;&#x662F;<code>JSON</code>&#xFF0C;&#x8FD9;&#x4E2A;&#x5B66;&#x672F;&#x4E0A;&#x7684;&#x540D;&#x79F0;&#x662F;<code>JavaScript Object Notation</code>&#xFF0C;&#x672C;&#x8D28;&#x4E0A;&#x8BF4;&#x4ED6;&#x662F;&#x4E00;&#x79CD;&#x4F20;&#x9012;&#x5BF9;&#x8C61;&#x7684;&#x8BED;&#x6CD5;&#xFF0C;&#x5BF9;&#x8C61;&#x53EF;&#x4EE5;&#x662F;name/value&#x952E;&#x503C;&#x5BF9;&#xFF0C;&#x6570;&#x7EC4;&#x548C;&#x5176;&#x4ED6;&#x5BF9;&#x8C61;&#x3002;</p><p>&#x4E3B;&#x8981;&#x7EC4;&#x6210;&#x662F;&#xFF1A;{}&#x3001;[]&#x3001;:&#x3001;&#xFF0C;</p></blockquote><ul><li>pycharm &#x76F8;&#x540C;&#x76EE;&#x5F55;&#x4E0B;&#x5F15;&#x7528;&#x5176;&#x4ED6;&#x6587;&#x4EF6;</li></ul><blockquote><p>pycharm&#x4E0D;&#x4F1A;&#x5C06;&#x5F53;&#x524D;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x81EA;&#x52A8;&#x52A0;&#x5165;&#x81EA;&#x5DF1;&#x7684;source_path.&#x53F3;&#x952E;make_directory as-&gt;source path &#x5C06;&#x5F53;&#x524D;&#x5DE5;&#x4F5C;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x52A0;&#x5165; source_path&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;</p></blockquote><h3><span id="x9879x76eex7ed3x6784">&#x9879;&#x76EE;&#x7ED3;&#x6784;</span></h3><p>&#x200B;    &#x597D;&#x4E86;&#xFF0C;&#x4E4B;&#x524D;&#x6211;&#x4EEC;&#x8BF4;&#x5230;&#x4E86;&#x771F;&#x5B9E;&#x6570;&#x636E;&#x662F;<code>Ajax</code>&#x8BF7;&#x6C42;&#x5F97;&#x5230;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x6293;&#x53D6;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#xFF0C;&#x9700;&#x8981;&#x77E5;&#x9053;&#x8FD9;&#x4E9B;&#x8BF7;&#x6C42;&#x65F6;&#x600E;&#x4E48;&#x53D1;&#x9001;&#x7684;&#xFF0C;&#x53D1;&#x9001;&#x5230;&#x54EA;&#x91CC;&#xFF0C;&#x53D1;&#x4E86;&#x54EA;&#x4E9B;&#x53C2;&#x6570;&#x3002;&#x8BF7;&#x770B;<code>Ajax</code>&#x5206;&#x6790;&#xFF1A;</p><ol><li><p>&#x67E5;&#x770B;&#x8BF7;&#x6C42;</p><blockquote><p>&#x5728;&#x5FAE;&#x535A;&#x754C;&#x9762;&#x4E0A;&#x6309;<code>F12</code>&#x952E;&#xFF0C;&#x4FBF;&#x53EF;&#x4EE5;&#x5F39;&#x51FA;&#x5F00;&#x53D1;&#x8005;&#x6A21;&#x5F0F;&#x3002;&#x5728;<code>Element</code>&#x9009;&#x9879;&#x5361;&#x4E2D;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x7F51;&#x9875;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x70B9;&#x51FB;<code>Network</code>&#x9009;&#x9879;&#x5361;&#xFF0C;&#x4E4B;&#x540E;&#x518D;&#x91CD;&#x65B0;&#x5237;&#x65B0;&#x9875;&#x9762;&#xFF0C;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6709;&#x5F88;&#x591A;&#x6761;&#x76EE;&#xFF0C;&#x8FD9;&#x4E2A;&#x5C31;&#x662F;&#x9875;&#x9762;&#x52A0;&#x8F7D;&#x8FC7;&#x7A0B;&#x4E2D;&#x6D4F;&#x89C8;&#x5668;&#x4E0E;&#x670D;&#x52A1;&#x5668;&#x4E4B;&#x95F4;&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#x548C;&#x63A5;&#x53D7;&#x54CD;&#x5E94;&#x7684;&#x6240;&#x6709;&#x8BB0;&#x5F55;&#x3002;</p><p>&#x5728;&#x8FD9;&#x4E9B;&#x8BB0;&#x5F55;&#x91CC;&#x9762;&#x67E5;&#x627E;<code>Ajax</code>&#x8BF7;&#x6C42;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;<code>getIndex</code>&#x5F00;&#x5934;&#x7684;&#x4FE1;&#x606F;&#x91CC;&#x9762;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#xFF0C;&#x5176;<code>Type</code>&#x4E3A;<code>xhr</code>&#x7684;&#x8BF7;&#x6C42;&#x7C7B;&#x578B;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;<code>Ajax</code>&#x3002;</p><p>&#x6211;&#x4EEC;&#x770B;&#x5230;&#x7684;&#x5FAE;&#x535A;&#x9875;&#x9762;&#x7684;&#x771F;&#x5B9E;&#x6570;&#x636E;&#x5E76;&#x4E0D;&#x662F;&#x539F;&#x59CB;&#x9875;&#x9762;&#x8FD4;&#x56DE;&#x7684;&#xFF0C;&#x800C;&#x662F;&#x540E;&#x6765;&#x6267;&#x884C;<code>JavaScript</code> &#x540E;&#x518D;&#x6B21;&#x5411;&#x540E;&#x53F0;&#x53D1;&#x9001;&#x4E86;<code>Ajax</code>&#x8BF7;&#x6C42;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x62FF;&#x5230;&#x6570;&#x636E;&#x4E4B;&#x540E;&#x8FDB;&#x4E00;&#x6B65;&#x6E32;&#x67D3;&#x51FA;&#x6765;&#x7684;&#x3002;</p></blockquote></li><li><p>&#x8FC7;&#x6EE4;&#x8BF7;&#x6C42;</p><blockquote><p>&#x6D4F;&#x89C8;&#x5668;&#x91CC;&#x6309;F12&#x51FA;&#x73B0;&#x5F00;&#x53D1;&#x8005;&#x5DE5;&#x5177;&#x7B5B;&#x9009;&#x529F;&#x80FD;&#x7B5B;&#x9009;&#x51FA;&#x6240;&#x6709;&#x7684;<code>Ajax</code>&#x8BF7;&#x6C42;&#xFF0C;&#x5728;&#x8BF7;&#x6C42;&#x4E0A;&#x65B9;&#x6709;&#x4E00;&#x5C42;&#x7B5B;&#x9009;&#x680F;&#xFF0C;&#x76F4;&#x63A5;&#x70B9;&#x51FB;<code>XHR</code>&#xFF0C;&#x6B64;&#x65F6;&#x4E0B;&#x65B9;&#x663E;&#x793A;&#x7684;&#x6240;&#x6709;&#x8BF7;&#x6C42;&#x5C31;&#x662F; <code>Ajax</code>&#x8BF7;&#x6C42;&#x4E86;&#x3002;&#x5411;&#x4E0B;&#x6ED1;&#x52A8;&#x7F51;&#x9875;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6709;&#x65B0;&#x7684;<code>Ajax</code>&#x8BF7;&#x6C42;&#x51FA;&#x73B0;&#x3002;</p></blockquote></li></ol><p>&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x8BF4;&#x5B9E;&#x8BDD;&#x662F;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x57FA;&#x672C;&#x7684;&#x722C;&#x866B;&#x7EC3;&#x624B;&#x9879;&#x76EE;&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x722C;&#x53D6;&#x4ECA;&#x65E5;&#x5934;&#x6761;&#x4E0A;&#x7684;&#x7F8E;&#x5973;&#x56FE;&#x7247;&#x3002;&#x4E3B;&#x8981;&#x7684;&#x6D41;&#x7A0B;&#x6846;&#x67B6;&#x662F;&#xFF1A;</p><ul><li><p>&#x6293;&#x53D6;&#x7D22;&#x5F15;&#x9875;&#x5185;&#x5BB9;</p><blockquote><p>&#x5229;&#x7528;request&#x8BF7;&#x6C42;&#x76EE;&#x6807;&#x7AD9;&#x70B9;&#xFF0C;&#x5F97;&#x5230;&#x7D22;&#x5F15;&#x7F51;&#x9875;HTML&#x4EE3;&#x7801;&#xFF0C;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x3002;</p></blockquote></li><li><p>&#x6293;&#x53D6;&#x8BE6;&#x60C5;&#x9875;&#x5185;&#x5BB9;</p><blockquote><p>&#x89E3;&#x6790;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#xFF0C;&#x5F97;&#x5230;&#x8BE6;&#x60C5;&#x9875;&#x7684;&#x94FE;&#x63A5;&#xFF0C;&#x5E76;&#x8FDB;&#x4E00;&#x6B65;&#x6293;&#x53D6;&#x8BE6;&#x60C5;&#x9875;&#x7684;&#x4FE1;&#x606F;</p></blockquote></li><li><p>&#x5F00;&#x542F;&#x5FAA;&#x73AF;&#x53CA;&#x591A;&#x7EBF;&#x7A0B;</p><blockquote><p>&#x5BF9;&#x591A;&#x9875;&#x5185;&#x5BB9;&#x904D;&#x5386;&#xFF0C;&#x5F00;&#x542F;&#x591A;&#x7EBF;&#x7A0B;&#x63D0;&#x9AD8;&#x6293;&#x53D6;&#x901F;&#x5EA6;</p></blockquote></li><li><p>&#x4E0B;&#x8F7D;&#x56FE;&#x7247;&#x4E0E;&#x4FDD;&#x5B58;&#x6570;&#x636E;&#x5E93;</p><blockquote><p>&#x5C06;&#x56FE;&#x7247;&#x4E0B;&#x8F7D;&#x5230;&#x672C;&#x5730;&#xFF0C;&#x5E76;&#x628A;&#x9875;&#x9762;&#x4FE1;&#x606F;&#x53CA;&#x56FE;&#x7247;URL&#x4FDD;&#x5B58;&#x81F3;MongoDB</p></blockquote></li></ul><p>&#x597D;&#x4E86;&#xFF0C;&#x4ECB;&#x7ECD;&#x5B8C;&#x5927;&#x4F53;&#x67B6;&#x6784;&#x4E86;&#xFF0C;&#x7136;&#x540E;&#x5C31;&#x8981;&#x5F00;&#x59CB;&#x5B9E;&#x64CD;&#x4E86;&#x3002;&#x6211;&#x7528;&#x7684;&#x662F;pycharm&#x6765;&#x5199;python&#x4EE3;&#x7801;&#x7684;&#x3002;&#x754C;&#x9762;&#x6BD4;&#x8F83;&#x53CB;&#x597D;&#xFF0C;&#x8FD9;&#x91CC;&#x63A8;&#x8350;&#x4E00;&#x4E0B;&#x3002;&#x7136;&#x540E;&#x518D;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;pycharm&#x7684;&#x5FEB;&#x6377;&#x952E;&#xFF0C;&#x65B9;&#x4FBF;&#x5927;&#x5BB6;&#x5FEB;&#x901F;&#x4FBF;&#x6377;&#x5730;&#x5199;&#x51FA;&#x4F18;&#x96C5;&#x7684;&#x4EE3;&#x7801;&#x3002;</p><img src="/2018/11/07/&#x3010;2&#x3011;&#x722C;&#x866B;&#x5B66;&#x4E60;/1.jpg" title="Pycharm Windows&#x5FEB;&#x6377;&#x952E;"><h3><span id="x4ee3x7801x5206x6790">&#x4EE3;&#x7801;&#x5206;&#x6790;</span></h3><p>&#x4EE3;&#x7801;&#x6587;&#x4EF6;&#x603B;&#x5171;&#x662F;&#x4E24;&#x4E2A;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;spider.py&#xFF0C;&#x4E00;&#x4E2A;&#x662F;config.py&#x6587;&#x4EF6;&#x3002;</p><ul><li>spider.py</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5728;URL&#x4E2D;&#x6CA1;&#x6709;&#x76F8;&#x5E94;&#x7684;&#x641C;&#x7D22;&#x5B57;&#x6BB5;&#xFF0C;&#x53EF;&#x4EE5;&#x5224;&#x65AD;&#x7F51;&#x9875;&#x5185;&#x5BB9;&#x662F;`Ajax`&#x52A0;&#x8F7D;&#xFF0C;&#x7136;&#x540E;&#x7528;`JavaScript`&#x6E32;&#x67D3;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5207;</span></span><br><span class="line"><span class="comment">#&#x6362;&#x5230; XHR&#x8FC7;&#x6EE4;&#x9009;&#x9879;&#x5361;&#xFF0C;&#x53EF;&#x4EE5;&#x67E5;&#x770B;`Ajax`&#x8BF7;&#x6C42;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x8BF7;&#x6C42;&#x662F;&#x5C5E;&#x4E8E;GET&#x8BF7;&#x6C42;&#x7684;&#xFF0C;&#x8BF7;&#x6C42;URL&#x7684;&#x53C2;&#x6570;&#x6709;offset&#xFF0C;#format&#xFF0C;keyword&#xFF0C;autoload&#xFF0C;count&#x548C;cur_tab &#x9700;&#x8981;&#x627E;&#x51FA;&#x8FD9;&#x4E9B;&#x53C2;&#x6570;&#x7684;&#x89C4;&#x5F8B;&#xFF0C;&#x8FD9;&#x6837;&#x624D;&#x80FD;&#x65B9;&#x4FBF;&#x5730;&#x6784;&#x9020;&#x7A0B;&#x5E8F;&#x3002;</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> ConnectionError</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> json.decoder <span class="keyword">import</span> JSONDecodeError</span><br><span class="line"><span class="keyword">from</span> config <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x7528;&#x6765;&#x548C;MongoDB&#x6570;&#x636E;&#x5E93;&#x8FDB;&#x884C;&#x8FDE;&#x63A5;</span></span><br><span class="line">client = pymongo.MongoClient(MONGO_URL, connect=<span class="keyword">False</span>)</span><br><span class="line">db = client[MONGO_DB]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x83B7;&#x53D6;URL&#x5185;&#x5BB9;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_page_index</span><span class="params">(offset, keyword)</span>:</span></span><br><span class="line">    data = {</span><br><span class="line">        <span class="string">&apos;autoload&apos;</span>: <span class="string">&apos;true&apos;</span>,</span><br><span class="line">        <span class="string">&apos;count&apos;</span>: <span class="number">20</span>,</span><br><span class="line">        <span class="string">&apos;cur_tab&apos;</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="string">&apos;format&apos;</span>: <span class="string">&apos;json&apos;</span>,</span><br><span class="line">        <span class="string">&apos;keyword&apos;</span>: keyword,</span><br><span class="line">        <span class="string">&apos;offset&apos;</span>: offset,</span><br><span class="line">    }</span><br><span class="line">    params = urlencode(data)</span><br><span class="line">    base = <span class="string">&apos;http://www.toutiao.com/search_content/&apos;</span></span><br><span class="line">    url = base + <span class="string">&apos;?&apos;</span> + params</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">    <span class="keyword">except</span> ConnectionError:</span><br><span class="line">        print(<span class="string">&apos;Error occurred&apos;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x4E0B;&#x8F7D;&#x56FE;&#x7247;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_image</span><span class="params">(url)</span>:</span></span><br><span class="line">    print(<span class="string">&apos;Downloading&apos;</span>, url)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            save_image(response.content)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">    <span class="keyword">except</span> ConnectionError:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x4FDD;&#x5B58;&#x56FE;&#x7247;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_image</span><span class="params">(content)</span>:</span></span><br><span class="line">    file_path = <span class="string">&apos;{0}/{1}.{2}&apos;</span>.format(os.getcwd(), md5(content).hexdigest(), <span class="string">&apos;jpg&apos;</span>)</span><br><span class="line">    print(file_path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(file_path):</span><br><span class="line">        <span class="keyword">with</span> open(file_path, <span class="string">&apos;wb&apos;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(content)</span><br><span class="line">            f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x89E3;&#x6790;&#x5BFC;&#x822A;&#x9875;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_page_index</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        data = json.loads(text)</span><br><span class="line">        <span class="keyword">if</span> data <span class="keyword">and</span> <span class="string">&apos;data&apos;</span> <span class="keyword">in</span> data.keys():</span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> data.get(<span class="string">&apos;data&apos;</span>):</span><br><span class="line">                <span class="keyword">yield</span> item.get(<span class="string">&apos;article_url&apos;</span>)</span><br><span class="line">    <span class="keyword">except</span> JSONDecodeError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x83B7;&#x53D6;&#x8BE6;&#x60C5;&#x9875;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_page_detail</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">    <span class="keyword">except</span> ConnectionError:</span><br><span class="line">        print(<span class="string">&apos;Error occurred&apos;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x89E3;&#x6790;&#x8BE6;&#x60C5;&#x9875;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_page_detail</span><span class="params">(html, url)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&apos;lxml&apos;</span>)</span><br><span class="line">    result = soup.select(<span class="string">&apos;title&apos;</span>)</span><br><span class="line">    title = result[<span class="number">0</span>].get_text() <span class="keyword">if</span> result <span class="keyword">else</span> <span class="string">&apos;&apos;</span></span><br><span class="line">    images_pattern = re.compile(<span class="string">&apos;gallery: JSON.parse\(&quot;(.*)&quot;\)&apos;</span>, re.S)</span><br><span class="line">    result = re.search(images_pattern, html)</span><br><span class="line">    <span class="keyword">if</span> result:</span><br><span class="line">        data = json.loads(result.group(<span class="number">1</span>).replace(<span class="string">&apos;\\&apos;</span>, <span class="string">&apos;&apos;</span>))</span><br><span class="line">        <span class="keyword">if</span> data <span class="keyword">and</span> <span class="string">&apos;sub_images&apos;</span> <span class="keyword">in</span> data.keys():</span><br><span class="line">            sub_images = data.get(<span class="string">&apos;sub_images&apos;</span>)</span><br><span class="line">            images = [item.get(<span class="string">&apos;url&apos;</span>) <span class="keyword">for</span> item <span class="keyword">in</span> sub_images]</span><br><span class="line">            <span class="keyword">for</span> image <span class="keyword">in</span> images: download_image(image)</span><br><span class="line">            <span class="keyword">return</span> {</span><br><span class="line">                <span class="string">&apos;title&apos;</span>: title,</span><br><span class="line">                <span class="string">&apos;url&apos;</span>: url,</span><br><span class="line">                <span class="string">&apos;images&apos;</span>: images</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5B58;&#x50A8;&#x5230;&#x6570;&#x636E;&#x5E93;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_to_mongo</span><span class="params">(result)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> db[MONGO_TABLE].insert(result):</span><br><span class="line">        print(<span class="string">&apos;Successfully Saved to Mongo&apos;</span>, result)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(offset)</span>:</span></span><br><span class="line">    text = get_page_index(offset, KEYWORD)</span><br><span class="line">    urls = parse_page_index(text)</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        html = get_page_detail(url)</span><br><span class="line">        result = parse_page_detail(html, url)</span><br><span class="line">        <span class="keyword">if</span> result: save_to_mongo(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x8FD9;&#x91CC;&#x5B9A;&#x4E49;&#x4E86;&#x5206;&#x9875;&#x7684;&#x8D77;&#x59CB;&#x9875;&#x6570;&#x548C;&#x7EC8;&#x6B62;&#x9875;&#x6570;&#xFF0C;&#x5206;&#x522B;GROUP_START &#x548C; GROUP_END&#xFF0C;&#x5229;&#x7528;&#x4E86;&#x591A;&#x7EBF;&#x7A0B;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x5E76;&#x8C03;&#x7528;#`map`&#x51FD;&#x6570;&#x5B9E;&#x73B0;&#x591A;&#x7EBF;&#x7A0B;&#x4E0B;&#x8F7D;</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&apos;__main__&apos;</span>:</span><br><span class="line">    pool = Pool()</span><br><span class="line">    groups = ([x * <span class="number">20</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(GROUP_START, GROUP_END + <span class="number">1</span>)])</span><br><span class="line">    pool.map(main, groups)</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br></pre></td></tr></tbody></table></figure><ul><li>config.py</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MONGO_URL = <span class="string">&apos;localhost&apos;</span></span><br><span class="line">MONGO_DB = <span class="string">&apos;toutiao&apos;</span></span><br><span class="line">MONGO_TABLE = <span class="string">&apos;toutiao&apos;</span></span><br><span class="line"></span><br><span class="line">GROUP_START = <span class="number">1</span></span><br><span class="line">GROUP_END = <span class="number">20</span></span><br><span class="line">KEYWORD=<span class="string">&apos;&#x8857;&#x62CD;&apos;</span></span><br></pre></td></tr></tbody></table></figure><h2><span id="x53c2x8003x6587x732e">&#x53C2;&#x8003;&#x6587;&#x732E;</span></h2><p><a href="https://www.zhihu.com/question/37787004/answer/186042335" target="_blank" rel="noopener">&#x4F60;&#x6709;&#x54EA;&#x4E9B;&#x60F3;&#x8981;&#x5206;&#x4EAB;&#x7684; PyCharm &#x4F7F;&#x7528;&#x6280;&#x5DE7;&#xFF1F;</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> mongoDB </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>【论文笔记】GAN相关资料阅读笔记</title>
      <link href="/2018/11/02/%E3%80%90%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0%E3%80%91GAN%E7%9B%B8%E5%85%B3%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/11/02/%E3%80%90%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0%E3%80%91GAN%E7%9B%B8%E5%85%B3%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>&#x200B;    &#x8FD9;&#x7BC7;&#x535A;&#x5BA2;&#x4E3B;&#x8981;&#x4ECB;&#x7ECD;&#x7684;&#x662F;&#x6700;&#x8FD1;&#x770B;&#x5230;&#xFF0C;&#x5B66;&#x5230;&#xFF0C;&#x7406;&#x89E3;&#x7684;&#x4E00;&#x4E9B;&#x6709;&#x5173;GAN (&#x5BF9;&#x6297;&#x751F;&#x6210;&#x7F51;&#x7EDC;)&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x77E5;&#x8BC6;&#x3002;&#x4F1A;&#x8BB2;&#x5230;&#x4E00;&#x4E9B;&#x6709;&#x5173;GAN&#x7684;&#x7C7B;&#x522B;&#xFF0C;&#x5404;&#x4E2A;&#x7C7B;&#x522B;GAN&#x7684;&#x5E94;&#x7528;&#x573A;&#x666F;&#x3002;</p><p>&#x200B;    &#x5728;&#x5F00;&#x59CB;&#x4E4B;&#x524D;&#x5148;&#x5410;&#x69FD;&#x4E00;&#x4E0B;Next&#x7684;&#x5C01;&#x9762;&#x63D2;&#x56FE;&#x548C;&#x6B63;&#x6587;&#x63D2;&#x56FE;&#x7684;&#x4F7F;&#x7528;&#xFF0C;&#x771F;&#x7684;&#x662F;&#x4E2A;&#x5751;&#x3002;&#x7F51;&#x4E0A;&#x597D;&#x591A;&#x4ECB;&#x7ECD;&#x7684;&#x6559;&#x7A0B;&#x90FD;&#x662F;&#x9519;&#x7684;&#xFF0C;&#x65E0;&#x60C5;&#x6389;&#x5751;&#x591A;&#x6B21;&#x3002;</p><ul><li><p>&#x535A;&#x5BA2;&#x5C01;&#x9762;&#x63D2;&#x56FE;&#x7684;&#x63D2;&#x5165;&#x65B9;&#x5F0F;</p><blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> title: &#x3010;&#x8BBA;&#x6587;&#x7B14;&#x8BB0;&#x3011;GAN&#x76F8;&#x5173;&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> date: 2018-11-02 13:58:24</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> categories: </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> - &#x8BBA;&#x6587;&#x9605;&#x8BFB;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> tags:</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> - GAN&#x7684;&#x76F8;&#x5173;&#x8BBA;&#x6587;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> - GAN&#x7684;&#x4ECB;&#x7ECD;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> photos:</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     - <span class="string">&quot;https://ask.qcloudimg.com/http-save/yehe-1565119/czwhuw5w22.jpeg?imageView2/2/w/1620&quot;</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>&#x5C31;&#x662F;&#x5728;tags&#x4E0B;&#x9762;&#x52A0;&#x4E0A;photos&#xFF0C;&#x7136;&#x540E;&#x6DFB;&#x52A0;&#x4E0A;&#x56FE;&#x7247;&#x7684;&#x7F51;&#x5740;&#x94FE;&#x63A5;&#xFF0C;&#x672C;&#x5730;&#x5730;&#x5740;&#x597D;&#x50CF;&#x4E0D;&#x597D;&#x7528;&#xFF0C;&#x8BD5;&#x4E86;&#x51E0;&#x6B21;&#xFF0C;&#x90FD;&#x6CA1;&#x597D;&#x7528;</p></blockquote></li><li><p>&#x535A;&#x5BA2;&#x6B63;&#x6587;&#x63D2;&#x56FE;&#x7684;&#x63D2;&#x5165;&#x65B9;&#x5F0F;&#xFF1A;</p><blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="comment"># {% asset_img example.jpg This is an example image %}</span></span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>&#x5BF9;&#x5C31;&#x662F;&#x8FD9;&#x6837;&#x63D2;&#x5165;&#x7684;&#xFF0C;&#x8FD9;&#x662F;&#x91C7;&#x7528;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#x5F15;&#x7528;&#x7684;&#x6807;&#x7B7E;&#x63D2;&#x4EF6;&#x8FDB;&#x884C;&#x63D2;&#x5165;&#x56FE;&#x7247;&#x7684;&#xFF0C;&#x9700;&#x8981;&#x5F00;&#x542F;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x5177;&#x4F53;&#x770B;<a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="noopener">&#x5B98;&#x65B9;&#x64CD;&#x4F5C;&#x624B;&#x518C;</a></p></blockquote></li></ul><p>&#x5E9F;&#x8BDD;&#x8BF4;&#x592A;&#x591A;&#x4E86;&#xFF0C;&#x73B0;&#x5728;&#x5F00;&#x59CB;&#x8BB2;GAN&#x3002;</p><h2><span id="ganx7684x6982x5ff5">GAN&#x7684;&#x6982;&#x5FF5;</span></h2><p>&#x200B;    GAN&#x5168;&#x79F0;Generator adversarial networks,&#x7FFB;&#x8BD1;&#x6210;&#x4E2D;&#x6587;&#x5C31;&#x662F;&#x5BF9;&#x6297;&#x751F;&#x6210;&#x7F51;&#x7EDC;&#x3002;&#x662F;&#x4E00;&#x79CD;&#x65E0;&#x76D1;&#x7763;&#x7C7B;&#x578B;&#x7684;&#x751F;&#x6210;&#x6A21;&#x578B;&#x3002;&#x662F;&#x4E00;&#x4E2A;&#x53EB;Good fellow&#x7684;&#x5927;&#x4F6C;&#x5728;2014&#x5E74;&#x63D0;&#x51FA;&#x7684;&#xFF0C;GAN&#x7684;&#x601D;&#x60F3;&#x975E;&#x5E38;&#x6734;&#x7D20;&#xFF0C;&#x5C31;&#x662F;&#x751F;&#x6210;&#x5668;&#x548C;&#x5224;&#x522B;&#x4E24;&#x4E2A;&#x6781;&#x5927;&#x6781;&#x5C0F;&#x7684;&#x535A;&#x5F08;&#x3002;&#x81EA;&#x6B64;&#x4E4B;&#x540E;&#xFF0C;&#x8FD9;&#x4E2A;&#x6A21;&#x578B;&#x88AB;&#x5F88;&#x591A;&#x4E1A;&#x754C;&#xFF0C;&#x5B66;&#x672F;&#x754C;&#x7684;&#x5927;&#x4F6C;&#x75AF;&#x72C2;&#x7814;&#x7A76;&#xFF0C;&#x5728;github&#x4E0A;&#x6709;&#x4E00;&#x4E2A;&#x53EB;<a href="https://github.com/hindupuravinash/the-gan-zoo" target="_blank" rel="noopener">GAN zoo</a>&#x7684;&#x4ED3;&#x5E93;&#xFF0C;&#x5B58;&#x653E;&#x4E86;&#x5404;&#x79CD;&#x5404;&#x6837;&#x7684;GAN&#x3002;&#x5927;&#x5BB6;&#x6709;&#x5174;&#x8DA3;&#x53EF;&#x4EE5;&#x5230;&#x4E0A;&#x9762;&#x641C;&#x96C6;&#x81EA;&#x5DF1;&#x60F3;&#x8981;&#x7684;GAN&#x6A21;&#x578B;&#x3002;</p><h3><span id="ganx76f8x5173x7684x6570x5b66x6982x5ff5">GAN&#x76F8;&#x5173;&#x7684;&#x6570;&#x5B66;&#x6982;&#x5FF5;</span></h3><ol><li>&#x76EE;&#x6807;&#x51FD;&#x6570;</li></ol><p>GAN&#x7684;&#x76EE;&#x6807;&#x51FD;&#x6570;&#xFF1A;</p><p>$min_Gmax_DV(D,G)=E_{x~p_{data}}[logD(x)]+E_{z~p_{z}(z)}[log(1-D(G(z)))]$</p><p>&#x4ECE;&#x5224;&#x522B;&#x5668;D&#x89D2;&#x5EA6;&#x6765;&#x770B;&#xFF0C;&#x4ED6;&#x662F;&#x5E0C;&#x671B;&#x81EA;&#x5DF1;&#x5C3D;&#x53EF;&#x80FD;&#x5730;&#x533A;&#x5206;&#x771F;&#x5B9E;&#x6837;&#x672C;&#x548C;&#x5047;&#x6837;&#x672C;&#xFF0C;&#x6240;&#x4EE5;$D(x)$&#x9700;&#x8981;&#x5C3D;&#x53EF;&#x80FD;&#x5730;&#x5927;&#xFF0C;$D(G(z))$&#x5C3D;&#x53EF;&#x80FD;&#x5730;&#x5C0F;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;$V(D,G)$&#x5C3D;&#x53EF;&#x80FD;&#x5730;&#x5927;&#x3002;&#x4ECE;&#x751F;&#x6210;&#x5668;G&#x6765;&#x8BF4;&#xFF0C;&#x4ED6;&#x5E0C;&#x671B;&#x81EA;&#x5DF1;&#x5C3D;&#x53EF;&#x80FD;&#x9A97;&#x8FC7;D&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5E0C;&#x671B;$D(G(z))$&#x5C3D;&#x53EF;&#x80FD;&#x5730;&#x5927;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;$V(D,G)$ &#x5C3D;&#x53EF;&#x80FD;&#x5730;&#x5C0F;&#x3002;&#x7136;&#x540E;&#x4E24;&#x4E2A;&#x6A21;&#x578B;&#x4E0D;&#x65AD;&#x5BF9;&#x6297;&#xFF0C;&#x6700;&#x540E;&#x8FBE;&#x5230;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x3002;</p><blockquote><p>&#x7B26;&#x53F7;&#x5B9A;&#x4E49;&#xFF1A;</p><p>$data$&#xFF1A;&#x771F;&#x5B9E;&#x6570;&#x636E;&#xFF08;groundtruth&#xFF09;</p><p>$P_{data}$&#xFF1A;&#x771F;&#x5B9E;&#x6570;&#x636E;&#x7684;&#x5206;&#x5E03;</p><p>$z$&#xFF1A;&#x566A;&#x97F3;&#xFF08;&#x8F93;&#x5165;&#x6570;&#x636E;&#xFF09;</p><p>$P_z$&#xFF1A;&#x539F;&#x59CB;&#x566A;&#x97F3;&#x5206;&#x5E03;</p><p>$P_g$&#xFF1A;&#x7ECF;&#x8FC7;&#x751F;&#x6210;&#x5668;&#x4E4B;&#x540E;&#x7684;&#x6570;&#x636E;&#x5206;&#x5E03;</p><p>$D$&#xFF1A;&#x751F;&#x6210;&#x5668;&#xFF0C;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x591A;&#x5C42;&#x611F;&#x77E5;&#x673A;&#xFF0C;&#x4F20;&#x5165;&#x7684;&#x6570;&#x636E;&#x662F;&#x771F;&#x5B9E;&#x6570;&#x636E;</p><p>$G$&#xFF1A;&#x5224;&#x522B;&#x5668; &#xFF0C;&#x662F;&#x751F;&#x6210;&#x5668;&#xFF0C;&#x7ED3;&#x6784;&#x662F;&#x4E00;&#x4E2A;&#x591A;&#x5C42;&#x611F;&#x77E5;&#x673A;&#xFF0C;&#x5C06;&#x566A;&#x58F0;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x6570;&#x636E;&#x7A7A;&#x95F4;</p></blockquote><ol start="2"><li>&#x6700;&#x4F18;&#x5316;&#x95EE;&#x9898;&#x8868;&#x8FBE;</li></ol><p>&#x5B9A;&#x4E49;&#x6700;&#x4F18;&#x5316;&#x95EE;&#x9898;&#x7684;&#x65B9;&#x6CD5;&#x7531;&#x4E24;&#x90E8;&#x5206;&#x7EC4;&#x6210;&#x3002;&#x9996;&#x5148;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x5224;&#x522B;&#x5668;D&#x4EE5;&#x53CA;&#x5224;&#x522B;&#x6837;&#x672C;&#x662F;&#x4E0D;&#x662F;$P_{data}(x)$&#x5206;&#x5E03;&#x4E2D;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#x7684;&#x3002;&#x6240;&#x4EE5;&#x6709;&#xFF1A;</p><p>$E_{x~p_{data}(x)}log(D(x))$</p><blockquote><p>&#x5176;&#x4E2D;&#xFF1A;E&#x662F;&#x6307;&#x671F;&#x671B;&#xFF0C;&#x8FD9;&#x4E00;&#x9879;&#x662F;&#x6839;&#x636E;&#x3010;&#x6B63;&#x7C7B;&#x3011;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x5224;&#x522B;&#x51FA;x&#x5C5E;&#x4E8E;&#x771F;&#x5B9E;&#x6570;&#x636E;data&#xFF09;&#x7684;&#x5BF9;&#x6570;&#x635F;&#x5931;&#x51FD;&#x6570;&#x800C;&#x6784;&#x5EFA;&#x7684;&#x3002;&#x6700;&#x5927;&#x5316;&#x8FD9;&#x4E00;&#x9879;&#x76F8;&#x5F53;&#x4E8E;&#x4EE4;&#x5224;&#x522B;&#x5668;D &#x5728;x&#x670D;&#x4ECE;&#x4E8E;data&#x7684;&#x6982;&#x7387;&#x5BC6;&#x5EA6;&#x65F6;&#x80FD;&#x591F;&#x51C6;&#x786E;&#x5730;&#x9884;&#x6D4B;$D(x)=1$</p><p>&#x4E5F;&#x5C31;&#x662F;&#xFF1A;$D(x)=1 when x~p_{data}(x)$</p></blockquote><p>&#x53E6;&#x4E00;&#x9879;&#x662F;&#x4F01;&#x56FE;&#x6B3A;&#x9A97;&#x5224;&#x522B;&#x5668;&#x7684;&#x751F;&#x6210;&#x5668;G &#x3002;&#x8FD9;&#x9879;&#x6839;&#x636E;&#x3010;&#x8D1F;&#x7C7B;&#x3011;&#x7684;&#x5BF9;&#x6570;&#x635F;&#x5931;&#x51FD;&#x6570;&#x6784;&#x5EFA;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#xFF1A;</p><p>$E_{z~p_z(z)}log(1-D(G(z)))$</p><p>&#x597D;&#x4E86;&#xFF0C;&#x4EE5;&#x4E0A;&#x6211;&#x4EEC;&#x5927;&#x4F53;&#x4E86;&#x89E3;&#x4E86;GAN&#x7684;&#x5DE5;&#x4F5C;&#x7684;&#x6570;&#x5B66;&#x539F;&#x7406;&#xFF0C;&#x60F3;&#x8981;&#x6DF1;&#x5165;&#x5176;&#x4E2D;&#x7684;&#x6570;&#x5B66;&#x63A8;&#x5BFC;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;<a href="https://blog.csdn.net/stalbo/article/details/79283399" target="_blank" rel="noopener">&#x300A;GAN&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x2014;&#x2014;&#x539F;&#x59CB;GAN&#xFF08;&#x57FA;&#x672C;&#x6982;&#x5FF5;&#x53CA;&#x7406;&#x8BBA;&#x63A8;&#x5BFC;&#xFF09;&#x300B;</a>&#x4EE5;&#x53CA;&#x76F8;&#x5173;&#x7684;&#x8BBA;&#x6587;&#x3002;</p><h3><span id="ganx76f8x5173x7684x5e94x7528">GAN&#x76F8;&#x5173;&#x7684;&#x5E94;&#x7528;</span></h3><p>&#x200B;    &#x968F;&#x7740;GAN&#x7684;&#x7406;&#x8BBA;&#x4E0D;&#x65AD;&#x53D1;&#x5C55;&#xFF0C;GAN&#x7684;&#x5E94;&#x7528;&#x4E5F;&#x4E0D;&#x4EC5;&#x5C40;&#x9650;&#x5728;&#x56FE;&#x50CF;&#x7684;&#x751F;&#x6210;&#x3002;&#x76EE;&#x524D;&#x6765;&#x8BF4;&#xFF0C;GAN&#x7684;&#x5E94;&#x7528;&#x4E3B;&#x8981;&#x6709;&#xFF1A;&#x56FE;&#x50CF;&#x751F;&#x6210;&#xFF0C;&#x56FE;&#x50CF;&#x8F6C;&#x6362;&#xFF0C;&#x56FE;&#x50CF;&#x5408;&#x6210;&#xFF08;&#x573A;&#x666F;&#x5408;&#x6210;&#xFF0C;&#x4EBA;&#x8138;&#x5408;&#x6210;&#xFF0C;&#x6587;&#x672C;&#x5230;&#x56FE;&#x50CF;&#x7684;&#x5408;&#x6210;&#xFF09;&#xFF0C;&#x98CE;&#x683C;&#x8FC1;&#x79FB;&#xFF0C;&#x56FE;&#x50CF;&#x8D85;&#x5206;&#x8FA8;&#x7387;&#xFF0C;&#x56FE;&#x50CF;&#x57DF;&#x7684;&#x8F6C;&#x6362;&#xFF0C;&#x56FE;&#x50CF;&#x4FEE;&#x590D;&#x3002;</p><ol><li>&#x56FE;&#x50CF;&#x751F;&#x6210;</li></ol><p>&#x56FE;&#x50CF;&#x751F;&#x6210;&#x662F;GAN&#x6700;&#x5F00;&#x59CB;&#x7684;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#xFF0C;&#x5F53;&#x7136;&#x4E5F;&#x4E0D;&#x5C40;&#x9650;&#x4E8E;&#x751F;&#x6210;&#x56FE;&#x50CF;&#x8FD8;&#x53EF;&#x4EE5;&#x751F;&#x6210;&#x97F3;&#x9891;&#xFF0C;&#x89C6;&#x9891;&#x7B49;&#x3002;&#x6BD4;&#x8F83;&#x6709;&#x610F;&#x601D;&#x7684;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x662F;&#x540C;&#x6D4E;&#x5927;&#x5B66;&#xFF0C;&#x590D;&#x65E6;&#x5927;&#x5B66;&#xFF0C;&#x7EBD;&#x7EA6;&#x5DDE;&#x7ACB;&#x5927;&#x5B66;&#x4E00;&#x8D77;&#x6253;&#x9020;&#x7684;&#x57FA;&#x4E8E;GAN&#x7684;&#x4E8C;&#x6B21;&#x5143;&#x8F6F;&#x59B9;&#x5B50;&#x7684;&#x9762;&#x90E8;&#x56FE;&#x50CF;&#x751F;&#x6210;&#x5668;&#xFF0C;&#x8FD9;&#x662F;<a href="https://make.girls.moe/#/" target="_blank" rel="noopener">&#x5E94;&#x7528;&#x5730;&#x5740;</a> &#x53EF;&#x4EE5;&#x7B97;&#x5F97;&#x4E0A;&#x662F;&#x5B85;&#x7537;&#x798F;&#x97F3;&#x4E86;&#x3002;</p><ol start="2"><li>&#x56FE;&#x50CF;&#x8F6C;&#x6362;</li></ol><p>&#x56FE;&#x50CF;&#x8F6C;&#x6362;&#x8FD9;&#x4E2A;&#x6211;&#x4E5F;&#x662F;&#x6700;&#x8FD1;&#x521A;&#x63A5;&#x89E6;&#x5230;&#x7684;&#xFF0C;&#x5F53;&#x7136;&#x662F;&#x56E0;&#x4E3A;&#x9879;&#x76EE;&#x7684;&#x539F;&#x56E0;&#x3002;&#x5F00;&#x59CB;&#x6211;&#x770B;&#x7684;&#x662F;<a href="https://link.springer.com/chapter/10.1007/978-3-030-00536-8_1" target="_blank" rel="noopener">&#x300A;Medical Image Synthesis for Data Augmentation and Anonymization using Generative Adversarial Networks&#x300B;</a> &#x8FD9;&#x7BC7;&#x8BBA;&#x6587;&#xFF0C;&#x7136;&#x540E;&#x8FD9;&#x7BC7;&#x8BBA;&#x6587;&#x91CC;&#x9762;&#x6240;&#x751F;&#x6210;&#x7684;&#x6838;&#x78C1;&#x5171;&#x632F;&#x56FE;&#x50CF;&#x6D89;&#x53CA;&#x5230;&#x4E86;pix2pix&#x7684;&#x751F;&#x6210;&#x6A21;&#x578B;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x987A;&#x85E4;&#x6478;&#x74DC;&#x627E;&#x5230;&#x4E86;&#x8FD9;&#x7BC7;<a href="http://openaccess.thecvf.com/content_cvpr_2017/papers/Isola_Image-To-Image_Translation_With_CVPR_2017_paper.pdf" target="_blank" rel="noopener">&#x300A;Image-to-Image Translation with Conditional Adversarial Networks&#x300B;</a> &#x8FD9;&#x7BC7;&#x8BBA;&#x6587;&#x91CC;&#x9762;&#xFF0C;&#x4E3B;&#x8981;&#x8BB2;&#x7684;&#x5C31;&#x662F;&#x56FE;&#x50CF;&#x8F6C;&#x6362;&#xFF0C;&#x5C06;&#x4E00;&#x79CD;&#x56FE;&#x50CF;&#x8F6C;&#x6362;&#x4E3A;&#x53E6;&#x4E00;&#x79CD;&#x5F62;&#x5F0F;&#x7684;&#x56FE;&#x50CF;&#x3002;</p><p>&#x4E00;&#x822C;&#x6765;&#x8BF4;GAN&#x7684;&#x751F;&#x6210;&#x5668;G&#x8F93;&#x5165;&#x662F;&#x968F;&#x673A;&#x5411;&#x91CF;&#xFF0C;&#x8F93;&#x51FA;&#x7684;&#x662F;&#x56FE;&#x50CF;&#x3002;&#x800C;&#x56FE;&#x50CF;&#x8F6C;&#x6362;&#x6A21;&#x578B;&#x7684;&#x8F93;&#x5165;&#x662F;&#x56FE;&#x50CF;&#xFF0C;&#x8F93;&#x51FA;&#x7684;&#x662F;&#x8F6C;&#x6362;&#x4E4B;&#x540E;&#x7684;&#x56FE;&#x50CF;&#x3002;&#x8FD9;&#x4E2A;<a href="https://affinelayer.com/pixsrv/" target="_blank" rel="noopener">&#x7F51;&#x7AD9;</a>&#x662F;&#x53EF;&#x4EE5;&#x8BD5;&#x73A9;&#x7684;pix2pix&#x7684;demo &#x3002;&#x63D0;&#x5230;pix2pix&#xFF0C;&#x5C31;&#x4E0D;&#x5F97;&#x4E0D;&#x63D0;&#xFF0C;cycle-GAN&#xFF0C;&#x8FD9;&#x4E2A;&#x6A21;&#x578B;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x4E0D;&#x540C;&#x753B;&#x98CE;&#x4E4B;&#x95F4;&#x7684;&#x8F6C;&#x53D8;&#xFF0C;&#x5E76;&#x4E14;&#x6709;&#x5C06;&#x5176;&#x5E94;&#x7528;&#x5728;&#x89C6;&#x9891;&#x4E0A;&#x7684;demo&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;<a href="https://junyanz.github.io/CycleGAN/" target="_blank" rel="noopener">&#x7F51;&#x7AD9;</a>&#x4E0A;&#x4F60;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5404;&#x79CD;&#x5404;&#x6837;&#x7684;&#x98CE;&#x683C;&#x8FC1;&#x79FB;&#x6548;&#x679C;&#x3002;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#x8FD8;&#x6709;&#x4E00;&#x7BC7;&#x6BD4;&#x8F83;&#x76F8;&#x4F3C;&#x7684;&#x8BBA;&#x6587;&#xFF0C;&#x4F7F;&#x7528;&#x7684;&#x662F;DiscoGAN&#x5B9E;&#x73B0;&#x7684;&#x662F;&#x5728;&#x4E0D;&#x7528;label&#x548C;pairing&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x5B66;&#x4E60;&#x4EA4;&#x53C9;domain&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x6BD4;&#x5982;&#x53EF;&#x4EE5;&#x5C06;&#x4E0D;&#x540C;&#x5305;&#x7684;&#x98CE;&#x683C;&#x8FC1;&#x79FB;&#x5230;&#x978B;&#x5B50;&#x4E0A;&#x3002;</p><ol start="3"><li>&#x56FE;&#x50CF;&#x5408;&#x6210;</li></ol><p>&#x56FE;&#x50CF;&#x5408;&#x6210;&#x662F;&#x901A;&#x8FC7;&#x67D0;&#x79CD;&#x5F62;&#x5F0F;&#x7684;&#x56FE;&#x50CF;&#x63CF;&#x8FF0;&#x521B;&#x5EFA;&#x65B0;&#x56FE;&#x50CF;&#x7684;&#x8FC7;&#x7A0B;&#x3002;&#x4E4B;&#x524D;pix2pix&#x548C;cycleGAN&#x90FD;&#x5C5E;&#x4E8E;&#x56FE;&#x50CF;&#x5408;&#x6210;&#x7684;&#x9886;&#x57DF;&#x3002;</p><ul><li><p>&#x573A;&#x666F;&#x5408;&#x6210;</p><blockquote><p>&#x573A;&#x666F;&#x5408;&#x6210;&#xFF1A;&#x901A;&#x8FC7;&#x7ED9;&#x5B9A;&#x7684;&#x90E8;&#x5206;&#x573A;&#x666F;&#x4FE1;&#x606F;&#x8FD8;&#x539F;&#x51FA;&#x771F;&#x5B9E;&#x7684;&#x573A;&#x666F;&#x4FE1;&#x606F;&#x3002;&#x6BD4;&#x5982;&#x6839;&#x636E;&#x5206;&#x5272;&#x56FE;&#x50CF;&#x8FD8;&#x539F;&#x51FA;&#x539F;&#x59CB;&#x573A;&#x666F;&#x4FE1;&#x606F;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x56FE;&#x50CF;&#x5206;&#x5272;&#x7684;&#x9006;&#x8FC7;&#x7A0B;&#xFF0C;&#x8FD9;&#x4E2A;&#x5728;&#x65E0;&#x4EBA;&#x9A7E;&#x9A76;&#x9886;&#x57DF;&#x5177;&#x6709;&#x975E;&#x5E38;&#x5E7F;&#x9614;&#x7684;&#x5E94;&#x7528;&#x573A;&#x666F;&#x3002;</p></blockquote></li><li><p>&#x4EBA;&#x8138;&#x5408;&#x6210;</p><blockquote><p>&#x4EBA;&#x8138;&#x5408;&#x6210;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x4E00;&#x5F20;&#x4EBA;&#x8138;&#x7684;&#x56FE;&#x50CF;&#xFF0C;&#x5408;&#x6210;&#x51FA;&#x4E0D;&#x540C;&#x89D2;&#x5EA6;&#x7684;&#x4EBA;&#x8138;&#x56FE;&#x50CF;&#xFF0C;&#x5E94;&#x7528;&#x7684;&#x573A;&#x666F;&#x662F;&#x4EBA;&#x8138;&#x5BF9;&#x9F50;&#xFF0C;&#x59FF;&#x6001;&#x8F6C;&#x6362;&#x7B49;&#x8F85;&#x52A9;&#x624B;&#x6BB5;&#x63D0;&#x9AD8;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x7CBE;&#x5EA6;&#xFF0C;&#x4E2D;&#x79D1;&#x9662;&#x7684;TP-GAN&#x7684;&#x6548;&#x679C;&#x5E94;&#x8BE5;&#x7B97;&#x662F;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x3002;</p></blockquote></li><li><p>&#x6587;&#x672C;&#x5230;&#x56FE;&#x50CF;&#x7684;&#x5408;&#x6210;</p><blockquote><p>&#x6587;&#x672C;&#x5230;&#x56FE;&#x50CF;&#x7684;&#x5408;&#x6210;&#xFF1A;&#x662F;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x548C;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x7684;&#x7ED3;&#x5408;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x7ED9;&#x5B9A;&#x7684;&#x4E00;&#x6BB5;&#x8BDD;&#x6765;&#x751F;&#x6210;&#x4E0E;&#x6587;&#x5B57;&#x76F8;&#x5339;&#x914D;&#x7684;&#x56FE;&#x50CF;&#x3002;</p></blockquote></li></ul><ol start="4"><li>&#x98CE;&#x683C;&#x8FC1;&#x79FB;</li></ol><p>&#x8FD9;&#x90E8;&#x5206;&#x5E94;&#x7528;&#x662F;&#x6765;&#x81EA;&#x4E0E;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;<a href="https://link.springer.com/chapter/10.1007/978-3-319-46487-9_43" target="_blank" rel="noopener">&#x300A;Precomputed Real-Time Texture Synthesis with Markovian Generative Adversarial Networks&#x300B;</a> &#xFF0C;&#x901A;&#x8FC7;&#x53EB;&#x505A;&#x4E00;&#x79CD;&#x9A6C;&#x5C14;&#x79D1;&#x592B;GAN&#x7684;&#x6A21;&#x578B;&#x8FDB;&#x884C;&#x5206;&#x5272;&#x8FC1;&#x79FB;&#xFF0C;&#x4E4B;&#x524D;&#x6709;&#x4E00;&#x6B3E;&#x6BD4;&#x8F83;&#x706B;&#x7684;&#x8F6F;&#x4EF6;<em>Prisma</em> &#x5927;&#x4F53;&#x5C31;&#x662F;&#x8FD9;&#x4E48;&#x6574;&#x7684;&#x3002;</p><ol start="5"><li>&#x56FE;&#x50CF;&#x8D85;&#x5206;&#x8FA8;&#x7387;</li></ol><p>&#x5176;&#x5B9E;&#x8FD9;&#x4E2A;&#x5E94;&#x7528;&#x6211;&#x5728;&#x7814;&#x4E00;&#x7684;&#x65F6;&#x5019;&#x63A5;&#x89E6;&#x8FC7;&#xFF0C;&#x4E0D;&#x8FC7;&#x90A3;&#x4E2A;&#x65F6;&#x5019;&#x5BF9;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF0C;&#x5BF9;&#x6297;&#x751F;&#x6210;&#x7F51;&#x7EDC;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x7684;&#x77E5;&#x8BC6;&#x57FA;&#x7840;&#xFF0C;&#x6CA1;&#x6709;&#x6DF1;&#x5165;&#x7814;&#x7A76;&#x8FDB;&#x53BB;&#x3002;&#x5F53;&#x65F6;&#x53EA;&#x662F;&#x62FF;&#x522B;&#x4EBA;&#x7684;&#x4EE3;&#x7801;&#x8DD1;&#x4E86;&#x8DD1;&#xFF0C;&#x770B;&#x6548;&#x679C;&#x4E0D;&#x4F73;&#x5C31;&#x65E9;&#x65E9;&#x653E;&#x5F03;&#x4E86;&#x3002;&#x5176;&#x5B9E;GAN&#x5728;&#x56FE;&#x50CF;&#x8D85;&#x5206;&#x8FA8;&#x7387;&#x4E0A;&#x7684;&#x5E94;&#x7528;&#x4E3B;&#x8981;&#x662F;&#x5929;&#x6587;&#x56FE;&#x50CF;&#x548C;&#x536B;&#x661F;&#x56FE;&#x50CF;&#x7684;&#x5E94;&#x7528;&#x3002;&#x5176;&#x5B9E;&#x518D;&#x6DF1;&#x5165;&#x5730;&#x60F3;&#x4E00;&#x4E0B;&#xFF0C;GAN&#x65E2;&#x7136;&#x53EF;&#x4EE5;&#x63D0;&#x5347;&#x56FE;&#x50CF;&#x5206;&#x8FA8;&#x7387;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x80FD;&#x53BB;&#x9A6C;&#x8D5B;&#x514B;&#x5462;&#xFF1F;&#x563F;&#x563F;&#xFF0C;&#x6240;&#x4EE5;GAN&#x5728;&#x53BB;&#x9A6C;&#x8D5B;&#x514B;&#x4E0A;&#x4E5F;&#x6709;&#x6BD4;&#x8F83;&#x4F18;&#x826F;&#x7684;&#x8868;&#x73B0;&#xFF0C;&#x77E5;&#x4E4E;&#x4E0A;&#x7684;&#x8FD9;&#x7BC7;&#x4E13;&#x680F;<a href="https://zhuanlan.zhihu.com/p/27199954" target="_blank" rel="noopener">&#x300A;&#x63D0;&#x9AD8;&#x9A7E;&#x9A76;&#x6280;&#x672F;&#xFF1A;&#x7528;GAN&#x53BB;&#x9664;(&#x7231;&#x60C5;)&#x52A8;&#x4F5C;&#x7247;&#x4E2D;&#x7684;&#x9A6C;&#x8D5B;&#x514B;&#x548C;&#x8863;&#x670D;&#x300B;</a> &#x5C31;&#x662F;&#x8BB2;&#x8FF0;&#x5982;&#x4F55;&#x901A;&#x8FC7;GAN&#x6280;&#x672F;&#x53BB;&#x6389;&#x9A6C;&#x8D5B;&#x514B;&#x7684;&#xFF0C;&#x6211;&#x611F;&#x89C9;&#x5B66;&#x6280;&#x672F;&#x548C;&#x5B66;&#x8BED;&#x8A00;&#x4E00;&#x6837;&#xFF0C;&#x4E00;&#x822C;&#x4EBA;&#x90FD;&#x662F;&#x4ECE;&#x6BD4;&#x8F83;&#x6C61;&#x79FD;&#x7684;&#x65B9;&#x9762;&#x5B66;&#x8D77;&#x6765;&#x5FEB;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E0D;&#x5931;&#x4E3A;&#x4E00;&#x7BC7;&#x597D;&#x6587;&#x7AE0;&#x3002;</p><ol start="6"><li>&#x56FE;&#x50CF;&#x57DF;&#x8F6C;&#x6362;</li></ol><p>GAN&#x975E;&#x5E38;&#x9002;&#x5408;&#x5B66;&#x4E60;&#x8FDE;&#x7EED;&#x6570;&#x636E;&#x7684;&#x5206;&#x5E03;&#xFF08;&#x56E0;&#x4E3A;&#x672C;&#x8D28;&#x4E0A;&#x751F;&#x6210;&#x5668;&#x5DE5;&#x4F5C;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x4E0D;&#x65AD;&#x53BB;&#x63A5;&#x8FD1;&#x771F;&#x5B9E;&#x56FE;&#x7247;&#x7684;&#x5206;&#x5E03;&#x7684;&#x8FC7;&#x7A0B;&#xFF09;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x80FD;&#x5B8C;&#x6210;domain&#x8F6C;&#x6362;&#x7684;&#x4EFB;&#x52A1;&#x3002;&#x4E4B;&#x524D;&#x63D0;&#x5230;&#x7684;pix2pix&#x6A21;&#x578B;&#x8FD8;&#x662F;cycleGAN&#x6A21;&#x578B;&#x90FD;&#x662F;&#x89E3;&#x51B3;&#x7684;&#x4E00;&#x5BF9;&#x4E00;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x800C;StarGAN&#x662F;&#x8FDB;&#x884C;&#x591A;&#x4E2A;domain&#x4E0B;&#x7684;&#x8F6C;&#x6362;&#xFF0C;&#x53EF;&#x4EE5;&#x505A;&#x591A;&#x4E2A;&#x56FE;&#x50CF;&#x7FFB;&#x8BD1;&#x4EFB;&#x52A1;&#x3002;&#x8FDB;&#x4E00;&#x6B65;&#x7684;&#x662F;&#x901A;&#x8FC7;domain&#x8F6C;&#x6362;&#x89E3;&#x51B3;&#x7A7F;&#x8863;&#x642D;&#x914D;&#x95EE;&#x9898;&#x3002;</p><ol start="7"><li>&#x56FE;&#x50CF;&#x4FEE;&#x590D;</li></ol><p>GAN&#x5728;image inpainting&#x4E0A;&#x662F;&#x975E;&#x5E38;&#x8BA9;&#x4EBA;&#x60CA;&#x8273;&#x7684;&#xFF0C;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;<a href="http://openaccess.thecvf.com/content_cvpr_2018/CameraReady/0456.pdf" target="_blank" rel="noopener">&#x300A;Generative Image Inpainting with Contextual Attention&#x300B;</a> &#x7B97;&#x662F;&#x5176;&#x4E2D;&#x7684;&#x4EE3;&#x8868;&#x4F5C;&#x4E86;&#x3002;&#x82F1;&#x4F1F;&#x8FBE;&#x4E4B;&#x540E;&#x53C8;&#x5C06;&#x5176;&#x6548;&#x679C;&#x5F80;&#x4E0A;&#x53C8;&#x63A8;&#x4E86;&#x4E00;&#x6B65;&#xFF0C;&#x6BD4;&#x5982;&#x8FD9;&#x7BC7;<a href="https://arxiv.org/abs/1804.07723" target="_blank" rel="noopener">&#x300A;Image Inpainting for Irregular Holes Using Partial Convolutions&#x300B;</a> &#x3002;</p><h2><span id="ganx6a21x578bx9700x8981x53bbx89e3x51b3x7684x95eex9898">GAN&#x6A21;&#x578B;&#x9700;&#x8981;&#x53BB;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;</span></h2><p>GAN&#x6A21;&#x578B;&#x4E3B;&#x8981;&#x9762;&#x5BF9;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x6CDB;&#x5316;&#x6027;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;mode collapse&#x3002;&#x8FD9;&#x7BC7;&#x77E5;&#x4E4E;&#x4E13;&#x680F;&#x300A;<a href="https://zhuanlan.zhihu.com/p/36410443" target="_blank" rel="noopener">&#x4ECE;&#x6CDB;&#x5316;&#x6027;&#x5230;Mode Collapse&#xFF1A;&#x5173;&#x4E8E;GAN&#x7684;&#x4E00;&#x4E9B;&#x601D;&#x8003;</a>&#x300B;&#x5BF9;&#x6211;&#x9879;&#x76EE;&#x91C7;&#x7528;GAN&#x7684;&#x7406;&#x8BBA;&#x652F;&#x6301;&#x975E;&#x5E38;&#x5927;&#x3002;</p><ul><li>&#x6CDB;&#x5316;&#x6027;&#xFF1A; &#x6A21;&#x578B;&#x80FD;&#x4E0D;&#x80FD;&#x751F;&#x6210;&#x65B0;&#x7684;&#x7684;&#x6837;&#x5F0F;&#x548C;&#x53D8;&#x5316;&#x6A21;&#x5F0F;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4EC5;&#x4EC5;&#x8BB0;&#x4F4F;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;&#x6837;&#x672C;&#x548C;&#x6A21;&#x5F0F;&#x3002;&#x53EA;&#x6709;&#x6CDB;&#x5316;&#x80FD;&#x529B;&#x63D0;&#x9AD8;&#xFF0C;<code>&#x624D;&#x80FD;&#x4EA7;&#x751F;&#x6709;&#x4EF7;&#x503C;&#x7684;&#x65B0;&#x6837;&#x672C;&#x6765;&#x589E;&#x5F3A;&#x8BAD;&#x7EC3;&#x96C6;&#xFF0C;&#x5E76;&#x5E2E;&#x52A9;&#x6A21;&#x578B;&#x901A;&#x8FC7;&#x6316;&#x6398;&#x51FA;&#x66F4;&#x6709;&#x4FE1;&#x606F;&#x7684;&#x7C7B;&#x5185;&#x548C;&#x7C7B;&#x95F4;&#x7684;&#x53D8;&#x5316;&#x6765;&#x63D0;&#x9AD8;&#x5C0F;&#x6837;&#x672C;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x5206;&#x7C7B;&#x51C6;&#x786E;&#x7387;&#x3002;</code></li><li>mode collapse&#xFF1A;&#x662F;&#x5728;&#x5B9E;&#x9645;&#x5E94;&#x7528;&#x4E2D;&#x771F;&#x5B9E;&#x53D1;&#x751F;&#x7684;&#x73B0;&#x8C61;&#x3002;&#x5982;&#x679C;&#x751F;&#x6210;&#x7684;&#x6837;&#x672C;&#x57FA;&#x672C;&#x7C7B;&#x4F3C;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x906D;&#x53D7;&#x4E86;mode collapse&#x3002;&#x6309;&#x7167;<code>good fellow</code>&#x8BF4;&#x6CD5;&#xFF0C;mode collapse&#x603B;&#x4F1A;&#x5B58;&#x5728;&#xFF0C;&#x5373;&#x4FBF;&#x751F;&#x6210;&#x7684;&#x6574;&#x4F53;&#x6709;&#x5DEE;&#x5F02;&#xFF0C;&#x4F46;&#x662F;&#x5C40;&#x90E8;&#x7EB9;&#x7406;&#x6216;&#x8005;&#x989C;&#x8272;&#x6CA1;&#x5565;&#x53D8;&#x5316;&#xFF0C;GAN&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x662F;&#x906D;&#x53D7;&#x4E86;mode collapse&#x3002;</li></ul><p>&#x5728;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#x90A3;&#x7BC7;&#x77E5;&#x4E4E;&#x4E13;&#x680F;&#x91CC;&#xFF0C;&#x8FD8;&#x63D0;&#x5230;&#x4E86;&#xFF0C;&#x73B0;&#x5728;&#x975E;&#x6B63;&#x5219;&#x7684;GAN&#x6A21;&#x578B;&#xFF08;&#x6240;&#x8C13;&#x7684;&#x975E;&#x6B63;&#x5219;GAN&#x662F;&#x4E0D;&#x5BF9;&#x8981;&#x751F;&#x6210;&#x7684;&#x6837;&#x672C;&#x5206;&#x5E03;&#x505A;&#x4EFB;&#x4F55;&#x5148;&#x9A8C;&#x5047;&#x8BBE;&#xFF0C;&#x5C1D;&#x8BD5;&#x53BB;&#x89E3;&#x51B3;&#x4E00;&#x822C;&#x6027;&#x7684;&#x6570;&#x636E;&#x6837;&#x672C;&#x751F;&#x6210;&#x95EE;&#x9898;&#x3002;&#xFF09;&#x4ECE;&#x7406;&#x8BBA;&#x548C;&#x5B9E;&#x8DF5;&#x90FD;&#x65E0;&#x6CD5;&#x8BC1;&#x660E;&#x4ED6;&#x7684;&#x6CDB;&#x5316;&#x80FD;&#x529B;&#x3002;&#x800C;&#x5982;&#x679C;&#x7ED9;&#x8981;&#x751F;&#x6210;&#x7684;&#x6570;&#x636E;&#x52A0;&#x5165;&#x4E00;&#x4E9B;&#x5148;&#x9A8C;&#x6761;&#x4EF6;&#xFF0C;&#x6BD4;&#x5982;<code>&#x6570;&#x636E;&#x7684;&#x5206;&#x5E03;&#x5BC6;&#x5EA6;&#x5728;&#x7A7A;&#x95F4;&#x4E2D;&#x53D8;&#x5316;&#x901F;&#x5EA6;&#x662F;&#x6709;&#x9650;&#x7684;</code>&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x6784;&#x5EFA;&#x6B63;&#x5219;&#x5316;GAN&#x7684;&#x52A8;&#x673A;&#x3002;</p><p><code>Loss-Sensitive GAN&#x3001;WGAN</code>&#x7B49;&#x90FD;&#x662F;&#x57FA;&#x4E8E;<code>Lipschitz&#x6B63;&#x5219;&#x6761;&#x4EF6;</code>&#x3002;</p><h2><span id="x8bc4x4ef7ganx6a21x578bx6027x80fdx7684x6307x6807">&#x8BC4;&#x4EF7;GAN&#x6A21;&#x578B;&#x6027;&#x80FD;&#x7684;&#x6307;&#x6807;</span></h2><p>&#x5728;<a href="http://www.cs.ucf.edu/~gqi/publications/LSGAN_QI.pdf" target="_blank" rel="noopener">&#x300A;Loss-Sensitive Generative Adversarial Networks on Lipschitz Densities&#x300B;</a>&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4E2D;&#x63D0;&#x51FA;&#x4E86;<code>MRE(Minimum Reconstruction Error)</code>&#x7684;&#x6307;&#x6807;&#x6765;&#x5EA6;&#x91CF;&#x6CDB;&#x5316;&#x6027;&#x3002;&#x8BC4;&#x4EF7;&#x65B9;&#x5F0F;&#x662F;&#xFF1A;&#x5148;&#x5C06;&#x6570;&#x636E;&#x96C6;&#x5212;&#x5206;&#x4E3A;&#x8BAD;&#x7EC3;&#x96C6;&#x3001;&#x6D4B;&#x8BD5;&#x96C6;&#xFF0C;&#x9A8C;&#x8BC1;&#x96C6;&#x4E09;&#x4E2A;&#x90E8;&#x5206;&#x3002;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x4E0A;&#x8BAD;&#x7EC3;GAN&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x9A8C;&#x8BC1;&#x96C6;&#x4E0A;&#x8C03;&#x8BD5;&#x8D85;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x6837;&#x6A21;&#x578B;&#x5728;&#x8BAD;&#x7EC3;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x5C31;&#x6CA1;&#x6709;&#x5230;&#x4EFB;&#x4F55;&#x6D4B;&#x8BD5;&#x7684;&#x6837;&#x672C;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x6CDB;&#x5316;&#x6027;&#xFF0C;&#x5B83;&#x5C31;&#x6709;&#x80FD;&#x529B;&#x6BD4;&#x8F83;&#x597D;&#x5730;&#x53BB;&#x751F;&#x6210;&#x672A;&#x89C1;&#x5230;&#x7684;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#x3002;</p><h2><span id="x901ax8fc7ganx6765x63d0x5347x5206x7c7bx51c6x786ex7387">&#x901A;&#x8FC7;GAN&#x6765;&#x63D0;&#x5347;&#x5206;&#x7C7B;&#x51C6;&#x786E;&#x7387;</span></h2><p>&#x8FD9;&#x4E2A;&#x6807;&#x9898;&#x4E5F;&#x662F;&#x6211;&#x4F7F;&#x7528;GAN&#x7684;&#x76EE;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x5F53;&#x9879;&#x76EE;&#x7684;&#x6570;&#x636E;&#x91CF;&#x6BD4;&#x8F83;&#x5C0F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x5982;&#x679C;&#x91C7;&#x7528;&#x4E00;&#x822C;&#x7684;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#x6BD4;&#x5982;SVM&#x7B49;&#xFF0C;&#x53EF;&#x80FD;&#x4E5F;&#x80FD;&#x8FBE;&#x5230;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x6548;&#x679C;&#xFF0C;&#x4F46;&#x662F;&#x8FBE;&#x5230;&#x4E00;&#x4E2A;&#x5F88;&#x9AD8;&#xFF0C;&#x6BD4;&#x5982;95%&#x4E4B;&#x4E0A;&#x7684;&#x4E00;&#x4E2A;&#x51C6;&#x786E;&#x7387;&#x53EF;&#x80FD;&#x5C31;&#x4E0D;&#x662F;&#x5F88;&#x5BB9;&#x6613;&#x4E86;&#x3002;&#x57FA;&#x4E8E;&#x8FD9;&#x4E2A;&#x60F3;&#x6CD5;&#xFF0C;&#x901A;&#x8FC7;GAN&#x6765;&#x751F;&#x6210;&#x65B0;&#x7684;&#x7684;&#x6837;&#x672C;&#xFF0C;&#x518D;&#x5C06;&#x6240;&#x6709;&#x7684;&#x6837;&#x672C;&#xFF08;&#x751F;&#x6210;&#x7684;&#x548C; &#x771F;&#x5B9E;&#x6837;&#x672C;&#xFF09;&#x653E;&#x5230;CNN&#x4E2D;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#xFF0C;&#x89C2;&#x5BDF;&#x662F;&#x5426;&#x80FD;&#x8FBE;&#x5230;&#x4E00;&#x4E2A;&#x8BA9;&#x4EBA;&#x6EE1;&#x610F;&#x7684;&#x7ED3;&#x679C;&#x3002;</p><p>&#x4E4B;&#x524D;&#x5728;&#x67D0;&#x4E00;&#x516C;&#x5171;&#x53F7;&#x4E0A;&#x770B;&#x5230;&#x82F1;&#x4F1F;&#x8FBE;&#x5728;&#x6838;&#x78C1;&#x5171;&#x632F;&#x56FE;&#x50CF;&#x4E0A;&#x57FA;&#x4E8E;GAN&#x8FDB;&#x4E00;&#x6B65;&#x63D0;&#x5347;&#x4E86;&#x5206;&#x7C7B;&#x51C6;&#x786E;&#x7387;&#xFF0C;&#x4ED6;&#x7684;&#x8BBA;&#x6587;&#x662F;<a href="https://link.springer.com/chapter/10.1007/978-3-030-00536-8_1" target="_blank" rel="noopener">&#x300A;Medical Image Synthesis for Data Augmentation and Anonymization Using Generative Adversarial Networks&#x300B;</a> &#x770B;&#x4E86;&#x4E00;&#x904D;&#x611F;&#x89C9;&#x5BF9;&#x6211;&#x9879;&#x76EE;&#x7684;&#x610F;&#x4E49;&#x4E0D;&#x5927;&#x3002;&#x4ECA;&#x5929;&#x5728;&#x817E;&#x8BAF;&#x4E91;&#x4E0A;&#x53C8;&#x770B;&#x5230;&#x4E00;&#x7BC7;&#x7C7B;&#x4F3C;&#x60F3;&#x6CD5;&#x7684;&#x8BBA;&#x6587;<a href="https://arxiv.org/pdf/1701.07717.pdf" target="_blank" rel="noopener">&#x300A;Unlabeled Samples Generated by GAN Improve the Person Re-identification Baseline in vitro&#x300B;</a> &#xFF0C;&#x8FD9;&#x4E2A;&#x817E;&#x8BAF;&#x4E91;&#x4E13;&#x680F;&#x7684;&#x5730;&#x5740;&#x662F;&#x7B2C;&#x516D;&#x4E2A;&#x53C2;&#x8003;&#x6587;&#x732E;&#x3002;</p><p>&#x6211;&#x4EEC;&#x5148;&#x8BB2;&#x817E;&#x8BAF;&#x4E91;&#x7684;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#xFF0C;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x7528;&#x539F;&#x59CB;&#x6570;&#x636E;&#x96C6;&#x8FDB;&#x884C;&#x534A;&#x76D1;&#x7763;&#x5B66;&#x4E60;&#xFF0C;&#x63D0;&#x9AD8;&#x884C;&#x4EBA;&#x518D;&#x8BC6;&#x522B;&#x7684;&#x51C6;&#x786E;&#x7387;&#x3002;&#x6587;&#x7AE0;&#x63D0;&#x51FA;&#x4F7F;&#x7528;GAN&#x8FDB;&#x884C;&#x65B0;&#x6570;&#x636E;&#x7684;&#x751F;&#x6210;&#xFF0C;&#x7136;&#x540E;&#x91C7;&#x7528;&#x81EA;&#x5DF1;&#x63D0;&#x51FA;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x8BA1;&#x7B97;&#x6700;&#x7EC8;&#x7684;&#x635F;&#x5931;&#x3002;</p><img src="/2018/11/02/&#x3010;&#x8BBA;&#x6587;&#x7B14;&#x8BB0;&#x3011;GAN&#x76F8;&#x5173;&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;/4.jpg" title="&#x6A21;&#x578B;&#x7ED3;&#x6784;"><p>&#x4F5C;&#x8005;&#x4F7F;&#x7528;&#x771F;&#x5B9E;&#x6570;&#x636E;&#x5148;&#x8BAD;&#x7EC3;&#x4E00;&#x4E2A;DCGAN&#x6A21;&#x578B;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;DCGAN&#x4F5C;&#x4E3A;&#x6570;&#x636E;&#x751F;&#x6210;&#x5DE5;&#x5177;&#xFF0C;&#x751F;&#x6210;&#x6CA1;&#x6709;&#x6807;&#x7B7E;&#x7684;&#x6570;&#x636E;&#x3002;&#x7136;&#x540E;&#x7528;&#x771F;&#x5B9E;&#x6570;&#x636E;&#x548C;&#x751F;&#x6210;&#x7684;&#x6CA1;&#x6709;&#x6807;&#x7B7E;&#x7684;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x8BAD;&#x7EC3;&#xFF0C;&#x5206;&#x7C7B;&#x6A21;&#x578B;&#x91C7;&#x7528;&#x7684;&#x662F;resnet50&#x3002;&#x6C42;&#x635F;&#x5931;&#x51FD;&#x6570;&#x7684;&#x90E8;&#x5206;&#x7B97;&#x662F;&#x4F5C;&#x8005;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x521B;&#x65B0;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x4F5C;&#x8005;&#x91C7;&#x7528;LSRO&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5C31;&#x662F;&#x4E0B;&#x9762;&#x8FD9;&#x4E2A;&#x516C;&#x5F0F;&#x3002;</p><img src="/2018/11/02/&#x3010;&#x8BBA;&#x6587;&#x7B14;&#x8BB0;&#x3011;GAN&#x76F8;&#x5173;&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;/5.jpg" title="&#x635F;&#x5931;&#x51FD;&#x6570;&#x516C;&#x5F0F;"><p>&#x5728;&#x6587;&#x4E2D;&#xFF0C;&#x4F5C;&#x8005;&#x8FD8;&#x5BF9;&#x8FD9;&#x4E2A;&#x635F;&#x5931;&#x51FD;&#x6570;&#x8FDB;&#x884C;&#x4E86;&#x63A8;&#x5BFC;&#x3002;&#x4F5C;&#x8005;&#x7684;&#x5B9E;&#x9A8C;&#x7EC6;&#x8282;&#xFF1A;</p><ul><li><p>&#x4F5C;&#x8005;&#x5C06;LSRO&#x548C;&#x4E24;&#x4E2A;&#x73B0;&#x6709;&#x7684;&#x65B9;&#x6CD5;&#xFF08;All in one &#x548C; Pseudo label&#xFF09;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#xFF0C;All in one&#x662F;&#x5C06;&#x751F;&#x6210;&#x6A21;&#x578B;&#x4EA7;&#x751F;&#x7684;&#x56FE;&#x7247;&#x5F53;&#x505A;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x7C7B;&#x522B;&#x3002;Pseudo label&#x65B9;&#x6CD5;&#x662F;&#x5C06;&#x7F51;&#x7EDC;&#x7684;softmax&#x8F93;&#x51FA;&#x7684;&#x6700;&#x5927;&#x6982;&#x7387;&#x6240;&#x5BF9;&#x5E94;&#x7684;&#x5206;&#x7C7B;&#x5F53;&#x505A;&#x662F;&#x751F;&#x6210;&#x56FE;&#x7247;&#x7684;&#x6807;&#x7B7E;&#x3002;</p></li><li><p>&#x4F7F;&#x7528;TensorFlow&#x548C;DCGAN&#x5305;&#x8BAD;&#x7EC3;GAN&#x6A21;&#x578B;&#xFF0C;&#x8BAD;&#x7EC3;&#x6570;&#x636E;&#x88AB;resize&#x4E3A;128&#xD7;128&#xFF0C;&#x5E76;&#x968F;&#x673A;&#x7FFB;&#x8F6C;&#xFF0C;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E2D;&#x662F;30&#x4E2A;epoch&#x3002;&#x751F;&#x6210;&#x6570;&#x636E;&#x65F6;&#x968F;&#x673A;&#x8F93;&#x5165;100&#x7EF4;&#x7684;&#x5411;&#x91CF;&#xFF0C;&#x5C06;&#x5927;&#x5C0F;resize&#x4E3A;256&#xD7;256&#x5E76;&#x7528;CNN&#x8FDB;&#x884C;&#x8BAD;&#x7EC3;&#xFF08;LSRO&#x65B9;&#x6CD5;&#xFF09;</p></li><li><p>&#x5BF9;CNN&#xFF0C;&#x4FEE;&#x6539;ResNet50 &#x7684;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#xFF0C;&#x4F7F;&#x5F97;&#x8F93;&#x51FA;&#x7C7B;&#x522B;&#x4E3A;751,702,1367&#x5206;&#x522B;&#x5BF9;&#x5E94;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x636E;&#x96C6;&#x8F93;&#x5165;&#x7C7B;&#x522B;&#x6570;&#x3002;&#x6240;&#x6709;&#x8BAD;&#x7EC3;&#x56FE;&#x7247;&#x88AB;&#x526A;&#x88C1;&#x5230;224&#xD7;224&#x5E76;&#x968F;&#x673A;&#x7FFB;&#x8F6C;&#xFF0C;&#x540C;&#x65F6;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x4E4B;&#x524D;&#x52A0;&#x5165;&#x4E86;dropout&#x5C42;&#xFF0C;&#x5BF9;&#x5E94;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x636E;&#x96C6;&#x8BBE;&#x7F6E;&#x4E0D;&#x540C;&#x7684;dropout&#x6982;&#x7387;&#xFF0C;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x51B2;&#x91CF;&#x4EE5;&#x53CA;&#x5B66;&#x4E60;&#x7387;&#x4E5F;&#x90FD;&#x8BBE;&#x7F6E;&#x4E3A;&#x4E0D;&#x540C;&#x7684;&#x53C2;&#x6570;&#x3002;</p></li></ul><p><strong>&#x6CE8;&#x610F;&#xFF1A;</strong> &#x8FD9;&#x4E2A;&#x884C;&#x4EBA;&#x518D;&#x8BC6;&#x522B;&#xFF0C;&#x51C6;&#x786E;&#x5730;&#x8BF4;&#x662F;&#x56FE;&#x7247;&#x68C0;&#x7D22;&#x800C;&#x4E0D;&#x662F;&#x56FE;&#x7247;&#x5206;&#x7C7B;&#x7684;&#x95EE;&#x9898;&#x3002;</p><h2><span id="ganx5bf9x4e8ex6837x672cx4e0dx5e73x8861x7684x6539x8fdb">GAN&#x5BF9;&#x4E8E;&#x6837;&#x672C;&#x4E0D;&#x5E73;&#x8861;&#x7684;&#x6539;&#x8FDB;</span></h2><p>&#x73B0;&#x5728;&#x5B9E;&#x9A8C;&#x8FD8;&#x6CA1;&#x5F00;&#x59CB;&#x505A;&#xFF0C;&#x4E3B;&#x8981;&#x7684;&#x60F3;&#x6CD5;&#x8FD8;&#x662F;&#x7528;GAN&#x6765;&#x6539;&#x8FDB;&#x6837;&#x672C;&#x4E0D;&#x5E73;&#x8861;&#x7684;&#x95EE;&#x9898;&#x3002;&#x9996;&#x5148;&#x8C08;&#x4E00;&#x4E0B;&#x6837;&#x672C;&#x4E0D;&#x5E73;&#x8861;&#x5BF9;CNN&#x5206;&#x7C7B;&#x6A21;&#x578B;&#x7684;&#x4F24;&#x5BB3;&#x5427;&#x3002;</p><p>&#x5728;&#x7B2C;&#x4E03;&#x4E2A;&#x5F15;&#x7528;&#x6587;&#x732E;&#x4E2D;&#x5DF2;&#x7ECF;&#x8BB2;&#x8FF0;&#x6E05;&#x695A;&#x4E86;&#x6837;&#x672C;&#x4E0D;&#x5E73;&#x8861;&#x7684;&#x4F24;&#x5BB3;&#xFF0C;&#x5F53;&#x7136;&#x8FD9;&#x7BC7;&#x77E5;&#x4E4E;&#x4E13;&#x680F;&#x4E5F;&#x662F;&#x642C;&#x8FD0;&#x7684;&#x4E00;&#x7BC7;&#x8BBA;&#x6587;<a href="http://www.diva-portal.org/smash/record.jsf?pid=diva2%3A811111&amp;dswid=-1073" target="_blank" rel="noopener">&#x300A;The Impact of Imbalanced Training Data for Convolutional Neural Networks&#x300B;</a> &#x5177;&#x4F53;&#x5185;&#x5BB9;&#x4E0D;&#x7EC6;&#x6570;&#x4E86;&#xFF0C;&#x76F4;&#x63A5;&#x8D34;&#x4E0A;&#x5B9E;&#x9A8C;&#x6570;&#x636E;&#x56FE;&#x3002;</p><img src="/2018/11/02/&#x3010;&#x8BBA;&#x6587;&#x7B14;&#x8BB0;&#x3011;GAN&#x76F8;&#x5173;&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;/1.png" title="&#x63A7;&#x5236;&#x8BAD;&#x7EC3;&#x6570;&#x76EE;&#x5BF9;&#x6BD4;&#x8868;"><img src="/2018/11/02/&#x3010;&#x8BBA;&#x6587;&#x7B14;&#x8BB0;&#x3011;GAN&#x76F8;&#x5173;&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;/2.png" title="&#x5206;&#x7C7B;&#x51C6;&#x786E;&#x7387;&#x5BF9;&#x6BD4;&#x8868;"><img src="/2018/11/02/&#x3010;&#x8BBA;&#x6587;&#x7B14;&#x8BB0;&#x3011;GAN&#x76F8;&#x5173;&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;/3.png" title="&#x8FC7;&#x91C7;&#x6837;&#x5206;&#x7C7B;&#x51C6;&#x786E;&#x7387;&#x5BF9;&#x6BD4;&#x8868;"><h2><span id="x5c0fx6837x672cx4e0dx9002x5408x6df1x5ea6x5b66x4e60xff1f">&#x5C0F;&#x6837;&#x672C;&#x4E0D;&#x9002;&#x5408;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF1F;</span></h2><p>&#x6839;&#x636E;&#x77E5;&#x4E4E;&#x4E0A;&#x7684;<a href="https://www.zhihu.com/question/29633459/answer/45049798" target="_blank" rel="noopener">&#x300A;&#x4E3A;&#x4EC0;&#x4E48;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x5BF9;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x7684;&#x6570;&#x91CF;&#x8981;&#x6C42;&#x8F83;&#x9AD8;&#xFF1F;&#x300B;</a> &#x77E5;&#x4E4E;&#x7528;&#x6237;&#x7684;&#x56DE;&#x7B54;&#x3002;&#x6A21;&#x578B;&#x590D;&#x6742;&#x5EA6;&#x60E9;&#x7F5A;&#x503C;&#xFF0C;&#x9700;&#x8981;&#x6570;&#x91CF;&#x6765;&#x538B;&#x4F4E;&#xFF0C;&#x4E0D;&#x7136;&#x5BB9;&#x6613;&#x8FC7;&#x62DF;&#x5408;&#x3002;</p><h2><span id="x53c2x8003x6587x732e">&#x53C2;&#x8003;&#x6587;&#x732E;</span></h2><p><a href="https://blog.csdn.net/qq_25737169/article/details/80874717" target="_blank" rel="noopener">GAN&#x5E94;&#x7528;&#x6C47;&#x603B;</a></p><p><a href="https://blog.csdn.net/FungLeo/article/details/78784180" target="_blank" rel="noopener">Python3 &#x521D;&#x5B66;&#x5B9E;&#x8DF5;&#x6848;&#x4F8B;&#xFF08;3&#xFF09;argparse &#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x5E93;&#x7684;&#x4F7F;&#x7528;</a></p><p><a href="https://blog.csdn.net/u013139259/article/details/78885815" target="_blank" rel="noopener">&#x5BF9;&#x6297;&#x7F51;&#x7EDC;&#x4E4B;PG-GAN&#xFF0C;&#x65E0;&#x6761;&#x4EF6;&#x4E0B;&#x751F;&#x6210;&#x66F4;&#x771F;&#x5B9E;&#x7684;&#x4EBA;&#x8138;&#x56FE;&#x50CF;[3]</a></p><p><a href="https://www.jiqizhixin.com/articles/2018-08-11-10" target="_blank" rel="noopener">GANs&#x6709;&#x563B;&#x54C8;&#xFF1A;&#x4E00;&#x6B21;&#x5B66;&#x5B8C;10&#x4E2A;GANs&#x660E;&#x661F;&#x6A21;&#x578B;&#xFF08;&#x9644;&#x89C6;&#x9891;&#xFF09;</a></p><p>&#x300A;<a href="https://zhuanlan.zhihu.com/p/36410443" target="_blank" rel="noopener">&#x4ECE;&#x6CDB;&#x5316;&#x6027;&#x5230;Mode Collapse&#xFF1A;&#x5173;&#x4E8E;GAN&#x7684;&#x4E00;&#x4E9B;&#x601D;&#x8003;</a>&#x300B;</p><p><a href="https://cloud.tencent.com/developer/article/1009970" target="_blank" rel="noopener">&#x300A;GAN&#x63D0;&#x9AD8;&#x4EBA;&#x4F53;&#x91CD;&#x8BC6;&#x522B;&#x51C6;&#x786E;&#x7387;&#x300B;</a></p><p><a href="https://zhuanlan.zhihu.com/p/23444244" target="_blank" rel="noopener">&#x300A;&#x8BAD;&#x7EC3;&#x96C6;&#x6837;&#x672C;&#x4E0D;&#x5E73;&#x8861;&#x95EE;&#x9898;&#x5BF9;CNN&#x7684;&#x5F71;&#x54CD;&#x300B;</a></p><p><a href="https://www.zhihu.com/question/29633459/answer/45049798" target="_blank" rel="noopener">&#x300A;&#x4E3A;&#x4EC0;&#x4E48;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x5BF9;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x7684;&#x6570;&#x91CF;&#x8981;&#x6C42;&#x8F83;&#x9AD8;&#xFF1F;&#x300B;</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 论文阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GAN的相关论文 </tag>
            
            <tag> GAN的介绍 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>【1】爬虫学习</title>
      <link href="/2018/10/25/%E3%80%901%E3%80%91%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/10/25/%E3%80%901%E3%80%91%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>&#x4E00;&#x76F4;&#x60F3;&#x5B66;&#x722C;&#x866B;&#xFF0C;&#x4E5F;&#x662F;&#x7531;&#x4E8E;&#x79CD;&#x79CD;&#x539F;&#x56E0;&#x5427;&#xFF0C;&#x6CA1;&#x80FD;&#x7CFB;&#x7EDF;&#x5730;&#x5B66;&#x4E60;&#x3002;&#x6B63;&#x597D;&#x6700;&#x8FD1;&#x5728;&#x5927;&#x5DE5;pt&#x4E0A;&#x770B;&#x5230;&#x4E86;&#x722C;&#x866B;&#x7684;&#x7CFB;&#x7EDF;&#x6559;&#x7A0B;&#xFF0C;&#x5168;&#x4E0B;&#x8F7D;&#x4E0B;&#x6765;&#x5B66;&#x4E60;&#xFF0C;&#x5E76;&#x5728;&#x535A;&#x5BA2;&#x4E0A;&#x8BB0;&#x5F55;&#x4E00;&#x4E0B;&#x3002;&#x56E0;&#x4E3A;&#x6211;&#x5BF9;&#x4E8E;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x4EE5;&#x53CA;&#x5176;&#x5206;&#x652F;-&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF0C;&#x722C;&#x866B;&#x7B49;&#x81EA;&#x52A8;&#x5316;&#x7684;&#x6280;&#x672F;&#x975E;&#x5E38;&#x7740;&#x8FF7;&#xFF0C;&#x53EA;&#x8981;&#x80FD;&#x8BA9;&#x673A;&#x5668;&#x6765;&#x505A;&#x4E0D;&#x9700;&#x8981;&#x7528;&#x4EBA;&#x7684;&#x5DE5;&#x4F5C;&#x6A21;&#x5F0F;&#xFF0C;&#x662F;&#x6211;&#x4E00;&#x76F4;&#x4EE5;&#x6765;&#x7684;&#x6267;&#x5FF5;&#x3002;</p><a id="more"></a><p>&#x672C;&#x6587;&#x5206;&#x4E3A;&#x4E24;&#x4E2A;&#x90E8;&#x5206;&#x6765;&#x5199;&#xFF1A;&#x722C;&#x866B;&#x7B80;&#x4ECB;&#xFF0C;&#x722C;&#x866B;&#x524D;&#x671F;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;</p><h2><span id="x722cx866bx7b80x4ecb">&#x722C;&#x866B;&#x7B80;&#x4ECB;</span></h2><p>&#x722C;&#x866B;&#x672C;&#x8D28;&#x4E0A;&#x6765;&#x8BF4;&#x662F;&#x4E00;&#x79CD;&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x89C4;&#x5219;&#xFF0C;&#x81EA;&#x52A8;&#x5730;&#x6293;&#x53D6;&#x4E07;&#x7EF4;&#x7F51;&#x4FE1;&#x606F;&#x7684;&#x811A;&#x672C;&#x3002;&#x7F51;&#x7EDC;&#x6293;&#x53D6;&#x7684;&#x7B56;&#x7565;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#x3001;&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#x548C;&#x6700;&#x4F73;&#x4F18;&#x5148;&#x4E09;&#x79CD;&#x3002;&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#x5728;&#x5F88;&#x591A;&#x60C5;&#x51B5;&#x4E0B;&#x4F1A;&#x5BFC;&#x81F4;trapped&#x7684;&#x95EE;&#x9898;&#x3002;</p><blockquote><ul><li><p>&#x6700;&#x4F73;&#x4F18;&#x5148;&#x641C;&#x7D22;&#x7B56;&#x7565;</p><p>&#x6700;&#x4F73;&#x4F18;&#x5148;&#x641C;&#x7D22;&#x7B56;&#x7565;&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x7684;&#x7F51;&#x9875;&#x5206;&#x6790;&#x7B97;&#x6CD5;&#xFF0C;&#x9884;&#x6D4B;&#x5019;&#x9009;URL&#x4E0E;&#x76EE;&#x6807;&#x7F51;&#x9875;&#x7684;&#x76F8;&#x4F3C;&#x5EA6;&#xFF0C;&#x6216;&#x4E0E;&#x4E3B;&#x9898;&#x7684;&#x76F8;&#x5173;&#x6027;&#xFF0C;&#x5E76;&#x9009;&#x53D6;&#x8BC4;&#x4EF7;&#x6700;&#x597D;&#x7684;&#x4E00;&#x4E2A;&#x6216;&#x51E0;&#x4E2A;URL&#x8FDB;&#x884C;&#x6293;&#x53D6;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x79CD;&#x5C40;&#x90E8;&#x6700;&#x4F18;&#x7684;&#x641C;&#x7D22;&#x82CF;&#x51E1;</p></li></ul></blockquote><p>&#x722C;&#x866B;&#x7684;&#x7EC4;&#x6210;&#x90E8;&#x5206;:</p><ul><li>&#x63A7;&#x5236;&#x5668;&#xFF1A;&#x4E3B;&#x8981;&#x662F;&#x8D1F;&#x8D23;&#x7ED9;&#x591A;&#x7EBF;&#x7A0B;&#x4E2D;&#x7684;&#x5404;&#x4E2A;&#x722C;&#x866B;&#x7EBF;&#x7A0B;&#x5206;&#x914D;&#x5DE5;&#x4F5C;&#x4EFB;&#x52A1;</li><li>&#x89E3;&#x6790;&#x5668;&#xFF1A;&#x4E3B;&#x8981;&#x662F;&#x4E0B;&#x8F7D;&#x7F51;&#x9875;&#xFF0C;&#x8FDB;&#x884C;&#x9875;&#x9762;&#x5904;&#x7406;&#xFF0C;&#x5C06;&#x4E00;&#x4E9B;JS&#x811A;&#x672C;&#x6807;&#x7B7E;&#x3001;CSS&#x4EE3;&#x7801;&#x5185;&#x5BB9;&#x3001;&#x7A7A;&#x683C;&#x5B57;&#x7B26;&#x3001;HTML&#x6807;&#x7B7E;&#x5904;&#x7406;&#x6389;</li><li>&#x8D44;&#x6E90;&#x5E93;&#xFF1A;&#x7528;&#x6765;&#x5B58;&#x653E;&#x4E0B;&#x8F7D;&#x5230;&#x7684;&#x7F51;&#x9875;&#x8D44;&#x6E90;&#xFF0C;&#x4E00;&#x822C;&#x4F7F;&#x7528;&#x6570;&#x636E;&#x5E93;&#x8FDB;&#x884C;&#x5B58;&#x50A8;</li></ul><p>&#x722C;&#x866B;&#x5DE5;&#x4F5C;&#x7684;&#x57FA;&#x672C;&#x6D41;&#x7A0B;&#xFF1A;</p><ul><li>&#x53D1;&#x8D77;&#x8BF7;&#x6C42;&#xFF1A;&#x901A;&#x8FC7;HTTP&#x5E93;&#x5411;&#x76EE;&#x6807;&#x7AD9;&#x70B9;&#x53D1;&#x8D77;&#x8BF7;&#x6C42;&#xFF0C;&#x5373;&#x53D1;&#x9001;&#x4E00;&#x4E2A;Request&#xFF0C;&#x8BF7;&#x6C42;&#x5305;&#x542B;&#x989D;&#x5916;&#x7684;headers&#x7B49;&#x4FE1;&#x606F;&#xFF0C;&#x7B49;&#x5F85;&#x670D;&#x52A1;&#x5668;&#x54CD;&#x5E94;&#x3002;</li><li>&#x83B7;&#x53D6;&#x54CD;&#x5E94;&#x5185;&#x5BB9;&#xFF1A;&#x5982;&#x679C;&#x670D;&#x52A1;&#x5668;&#x80FD;&#x6B63;&#x5E38;&#x54CD;&#x5E94;&#xFF0C;&#x4F1A;&#x5F97;&#x5230;&#x4E00;&#x4E2A;Response&#xFF0C;Response&#x7684;&#x5185;&#x5BB9;&#x5C31;&#x662F;&#x6240;&#x8981;&#x83B7;&#x53D6;&#x7684;&#x9875;&#x9762;&#x5185;&#x5BB9;&#xFF0C;&#x7C7B;&#x578B;&#x53EF;&#x80FD;&#x6709;HTML&#xFF0C;JSon&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x636E;&#xFF08;&#x5982;&#x56FE;&#x7247;&#xFF0C;&#x89C6;&#x9891;&#xFF09;&#x7B49;&#x7C7B;&#x578B;</li><li>&#x89E3;&#x6790;&#x5185;&#x5BB9;&#xFF1A;&#x5F97;&#x5230;&#x7684;&#x5185;&#x5BB9;&#x53EF;&#x80FD;&#x662F;HTML&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x7F51;&#x9875;&#x89E3;&#x6790;&#x5E93;&#x8FDB;&#x884C;&#x89E3;&#x6790;&#x3002;&#x53EF;&#x80FD;&#x662F;JSon&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8F6C;&#x4E3A;JSon&#x5BF9;&#x8C61;&#x89E3;&#x6790;&#xFF0C;&#x53EF;&#x80FD;&#x662F;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x636E;&#xFF0C;&#x53EF;&#x4EE5;&#x4FDD;&#x5B58;&#x6216;&#x8005;&#x8FDB;&#x4E00;&#x6B65;&#x5904;&#x7406;</li><li>&#x4FDD;&#x5B58;&#x6570;&#x636E;&#xFF1A;&#x4FDD;&#x5B58;&#x81F3;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x6216;&#x8005;&#x4FDD;&#x5B58;&#x7279;&#x5B9A;&#x683C;&#x5F0F;&#x7684;&#x6587;&#x4EF6;&#x3002;</li></ul><blockquote><p>&#x540D;&#x8BCD;&#x89E3;&#x91CA;&#xFF1A;</p><ul><li><p>Request&#x548C;Response&#xFF1A;</p><ul><li>&#x6D4F;&#x89C8;&#x5668;&#x53D1;&#x9001;&#x4FE1;&#x606F;&#x7ED9;&#x4FE1;&#x606F;&#x7ED9;&#x7F51;&#x5740;&#x6240;&#x5728;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x53EB;&#x505A;HTTP Request</li><li>&#x670D;&#x52A1;&#x5668;&#x6536;&#x5230;&#x6D4F;&#x89C8;&#x5668;&#x53D1;&#x9001;&#x7684;&#x4FE1;&#x606F;&#x4E4B;&#x540E;&#xFF0C;&#x80FD;&#x591F;&#x6839;&#x636E;&#x6D4F;&#x89C8;&#x5668;&#x53D1;&#x9001;&#x4FE1;&#x606F;&#x7684;&#x5185;&#x5BB9;&#x4F5C;&#x51FA;&#x76F8;&#x5E94;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x6D88;&#x606F;&#x56DE;&#x4F20;&#x7ED9;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x53EB;&#x505A;HTTP Response</li><li>&#x6D4F;&#x89C8;&#x5668;&#x6536;&#x5230;&#x670D;&#x52A1;&#x5668;&#x7684;Response&#x4FE1;&#x606F;&#x4E4B;&#x540E;&#xFF0C;&#x4F1A;&#x5BF9;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x76F8;&#x5E94;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x7136;&#x540E;&#x663E;&#x793A;</li></ul></li><li><p>Request&#x5305;&#x542B;&#x7684;&#x4FE1;&#x606F;&#xFF1A;</p><ul><li>&#x8BF7;&#x6C42;&#x65B9;&#x5F0F;&#xFF1A;&#x4E3B;&#x8981;&#x6709;GET&#xFF0C;POST&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#xFF0C;&#x53E6;&#x5916;&#x8FD8;&#x6709;HEAD,DELETE,OPTIONS&#x7B49;</li><li>&#x8BF7;&#x6C42;URL&#xFF1A;URL(&#x7EDF;&#x4E00;&#x8D44;&#x6E90;&#x5B9A;&#x4F4D;&#x7B26;)&#xFF0C;&#x5982;&#x4E00;&#x4E2A;&#x7F51;&#x9875;&#x6587;&#x6863;&#xFF0C;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#xFF0C;&#x4E00;&#x4E2A;&#x89C6;&#x9891;&#x7B49;&#x90FD;&#x53EF;&#x4EE5;&#x7528;URL&#x552F;&#x4E00;&#x786E;&#x5B9A;&#x3002;</li><li>&#x8BF7;&#x6C42;&#x5934;&#xFF1A;&#x5305;&#x542B;&#x8BF7;&#x6C42;&#x65F6;&#x7684;&#x5934;&#x90E8;&#x4FE1;&#x606F;&#xFF0C;&#x5982;User-Agent&#xFF0C;Host&#xFF0C;Cookies&#x7B49;&#x4FE1;&#x606F;</li><li>&#x8BF7;&#x6C42;&#x4F53;&#xFF1A;&#x8BF7;&#x6C42;&#x989D;&#x5916;&#x643A;&#x5E26;&#x7684;&#x4FE1;&#x606F;</li></ul></li><li><p>Response&#x5305;&#x542B;&#x7684;&#x4FE1;&#x606F;&#xFF1A;</p><ul><li>&#x54CD;&#x5E94;&#x72B6;&#x6001;&#xFF1A;&#x6709;&#x591A;&#x79CD;&#x54CD;&#x5E94;&#x72B6;&#x6001;&#xFF0C;&#x5982;200&#x4EE3;&#x8868;&#x6210;&#x529F;&#xFF0C;301&#x4EE3;&#x8868;&#x8DF3;&#x8F6C;&#xFF0C;404&#x4EE3;&#x8868;&#x627E;&#x4E0D;&#x5230;&#x9875;&#x9762;&#xFF0C;502&#x4EE3;&#x8868;&#x670D;&#x52A1;&#x5668;&#x9519;&#x8BEF;</li><li>&#x54CD;&#x5E94;&#x5934;&#xFF1A;&#x5982;&#x5185;&#x5BB9;&#x7C7B;&#x578B;&#xFF0C;&#x5185;&#x5BB9;&#x957F;&#x5EA6;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x4FE1;&#x606F;&#xFF0C;&#x8BBE;&#x7F6E;Cookie&#x7B49;</li><li>&#x54CD;&#x5E94;&#x4F53;&#xFF1A;&#x6700;&#x4E3B;&#x8981;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x5305;&#x542B;&#x8BF7;&#x6C42;&#x8D44;&#x6E90;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5982;&#x7F51;&#x9875;HTML&#xFF0C;&#x56FE;&#x7247;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x636E;&#x7B49;</li></ul></li><li><p>&#x7F51;&#x9875;&#x89E3;&#x6790;&#x65B9;&#x5F0F;&#xFF1A;</p><ul><li>&#x76F4;&#x63A5;&#x5904;&#x7406;</li><li>JSon&#x89E3;&#x6790;</li><li>&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;</li><li>BeautifulSoup</li><li>XPath</li><li>PyQuery</li></ul></li><li><p>&#x89E3;&#x51B3;JavaScript&#x6E32;&#x67D3;&#x95EE;&#x9898;</p><ul><li>&#x5206;&#x6790;Ajax&#x8BF7;&#x6C42;</li><li>selenium/WebDriver</li><li>Splash</li><li>PyV8,Ghost.py</li></ul></li></ul></blockquote><h2><span id="x524dx671fx51c6x5907x5de5x4f5c">&#x524D;&#x671F;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;</span></h2><p>&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#x4E09;&#x4E2A;&#x90E8;&#x5206;&#x8FDB;&#x884C;&#xFF0C;python&#x7684;&#x5B89;&#x88C5;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5B89;&#x88C5;&#xFF0C;&#x722C;&#x866B;&#x5E38;&#x7528;&#x5E93;&#x7684;&#x5B89;&#x88C5;</p><ol><li><p>python&#x7684;&#x5B89;&#x88C5;&#xFF1A;&#x91C7;&#x7528;anaconda&#x8FDB;&#x884C;&#xFF0C;anaconda&#x76F8;&#x5F53;&#x4E8E;&#x662F;&#x4E00;&#x4E2A;&#x80AF;&#x5FB7;&#x57FA;&#x5168;&#x5BB6;&#x6876;&#xFF0C;&#x4E00;&#x6B21;&#x6027;&#x5B89;&#x88C5;python&#x548C;&#x76F8;&#x5173;&#x7684;&#x5E93;</p><blockquote><p>&#x6CE8;&#x610F;&#x70B9;&#xFF1A;</p><p>&#x5982;&#x679C;&#x4F60;&#x7684;&#x7535;&#x8111;&#x91CC;&#x6709;python2&#xFF0C;python3&#xFF0C;&#x4F1A;&#x9762;&#x4E34;python&#x51B2;&#x7A81;&#x7684;&#x95EE;&#x9898;&#x3002;&#x9700;&#x8981;&#x5C06;python.exe&#x7684;&#x540D;&#x79F0;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x5176;&#x6240;&#x5728;&#x6587;&#x4EF6;&#x5939;&#x6DFB;&#x52A0;&#x5230;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x3002;</p></blockquote></li><li><p>&#x6570;&#x636E;&#x5E93;&#x7684;&#x5B89;&#x88C5;</p></li></ol><ul><li><p>&#x975E;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;MongoDB&#x5B89;&#x88C5;&#xFF1A;</p><ul><li>&#x8C37;&#x6B4C;&#x641C;&#x7D22;MongoDB&#xFF0C;&#x4E0B;&#x8F7D;&#x5B89;&#x88C5;MongoDB</li><li>&#x5728;MongoDB&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x521B;&#x5EFA;data&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x7136;&#x540E;&#x5728;data&#x6587;&#x4EF6;&#x5939;&#x91CC;&#x9762;&#x65B0;&#x5EFA;db&#x6587;&#x4EF6;&#x5939;</li><li>&#x5728;bin&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#xFF0C;&#x6253;&#x5F00;&#x547D;&#x4EE4;&#x884C;&#xFF0C;&#x8F93;&#x5165;&#x2019;mongod &#x2013;dbpath bin&#x6587;&#x4EF6;&#x5939;&#x2019;</li><li>&#x7136;&#x540E;&#x5728;data&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x65B0;&#x5EFA;logs&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x5E76;&#x5728;logs&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x65B0;&#x5EFA;mongo.log&#x6587;&#x4EF6;&#xFF08;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#xFF09;</li><li>&#x7136;&#x540E;&#x5728;&#x8FD9;&#x4E2A;logs&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#xFF0C;&#x6253;&#x5F00;&#x547D;&#x4EE4;&#x884C;&#xFF0C;&#x8F93;&#x5165;&#x2019;mongod &#x2013;bind_ip 0.0.0.0 &#x2013;logpath log&#x6587;&#x4EF6;&#x7684;&#x8DEF;&#x5F84;&#xFF08;&#x5305;&#x62EC;&#x6587;&#x4EF6;&#x540D;&#xFF09; &#x2013;logappend &#x2013;dbpath db&#x6587;&#x4EF6;&#x5939; &#x2013;port 27017 &#x2013;serviceName &#x201C;MongoDB&#x201D; &#x2013;serviceplayName &#x201C;MongoDB&#x201D; &#x2013;install&#x2019;</li><li>&#x7136;&#x540E;&#x53EF;&#x4EE5;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x7BA1;&#x7406;&#x5668;&#x4E2D;&#x5C06;mongoDB&#x6253;&#x5F00;</li><li>&#x4E0B;&#x8F7D;Robomongo&#xFF08;&#x8FD9;&#x662F;MongoDB&#x7684;&#x53EF;&#x89C6;&#x5316;&#x754C;&#x9762;&#xFF09;</li></ul></li><li><p>Redis&#x5B89;&#x88C5;</p><ul><li>Redis&#x662F;&#x4E00;&#x4E2A;&#x5F00;&#x6E90;&#x7684;&#xFF0C;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5B58;&#x50A8;&#x7CFB;&#x7EDF;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x7528;&#x4F5C;&#x6570;&#x636E;&#x5E93;&#x3001;&#x7F13;&#x5B58;&#x548C;&#x4FE1;&#x606F;&#x4E2D;&#x95F4;&#x4EF6;&#x3002;</li><li>&#x5728;github&#x4E0A;&#x4E0B;&#x8F7D;Redis desktop&#x5B89;&#x88C5;&#x6570;&#x636E;&#x5E93;&#x53EF;&#x89C6;&#x5316;&#x754C;&#x9762;</li><li>&#x7528;&#x4E8E;&#x7EF4;&#x62A4;&#x975E;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x722C;&#x53D6;</li></ul></li><li><p>MySQL&#x7684;&#x5B89;&#x88C5;</p><ul><li>&#x9996;&#x5148;&#x5B89;&#x88C5;MySQL&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;<a href="https://blog.csdn.net/zhouzezhou/article/details/52446608" target="_blank" rel="noopener">&#x8FD9;&#x4E2A;&#x535A;&#x5BA2;</a></li></ul></li></ul><ol start="3"><li>&#x722C;&#x866B;&#x5E38;&#x7528;&#x5E93;&#x7684;&#x5B89;&#x88C5;</li></ol><ul><li>Requests&#x5E93;&#x8BE6;&#x89E3; $\begin{cases}&#x6982;&#x5FF5;&#xFF1A;requests&#x57FA;&#x4E8E;urllib,&#x91C7;&#x7528;\text{Apache2 licensed}&#x5F00;&#x6E90;&#x534F;&#x8BAE;&#x7684;HTTP&#x5E93; \ &#x5B89;&#x88C5;&#xFF1A;\text{pip install requests} \end{cases}$</li><li>Scrapy&#x5B89;&#x88C5;&#x8BE6;&#x89E3;$\begin{cases}&#x6982;&#x5FF5;&#xFF1A;python&#x5F00;&#x53D1;&#x7684;&#x4E00;&#x4E2A;&#x5FEB;&#x901F;&#x3001;&#x9AD8;&#x5C42;&#x6B21;&#x7684;&#x5C4F;&#x5E55;&#x6293;&#x53D6;&#x548C;web&#x6293;&#x53D6;&#x6846;&#x67B6;&#xFF0C;&#x7528;&#x4E8E;&#x6293;&#x53D6;web&#x7AD9;&#x70B9;&#x5E76;&#x4ECE;&#x9875;&#x9762;&#x4E2D;&#x63D0;&#x53D6;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E; \ &#x5B89;&#x88C5;&#xFF1A;&#x901A;&#x8FC7;anaconda&#x8FDB;&#x884C;&#x5B89;&#x88C5;&#x662F;&#x6700;&#x65B9;&#x4FBF;&#x7684; &#xFF1A;\text{conda install Scrapy} \end{cases}$</li><li><p>BeautifulSoup&#x5B89;&#x88C5;&#x8BE6;&#x89E3;$\begin{cases}&#x6982;&#x5FF5;&#xFF1A;&#x4ECE;&#x7F51;&#x9875;&#x6293;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x53EF;&#x4EE5;&#x51FA;&#x6765;&#x5BFC;&#x822A;&#xFF0C;&#x641C;&#x7D22;&#xFF0C;&#x4FEE;&#x6539;&#x5206;&#x6811;&#x7684;&#x529F;&#x80FD; \ &#x5B89;&#x88C5;&#xFF1A;\text{pip install beautifulsoup4} \end{cases}&#x200B;$</p></li><li><p>Selenium&#x5B89;&#x88C5;&#x8BE6;&#x89E3;$\begin{cases}&#x6982;&#x5FF5;&#xFF1A;&#x81EA;&#x52A8;&#x5316;&#x6D4B;&#x8BD5;&#x5DE5;&#x5177;&#x3002;&#x5982;&#x679C;&#x4F60;&#x5728;&#x8FD9;&#x4E9B;&#x6D4F;&#x89C8;&#x5668;&#x91CC;&#x9762;&#x5B89;&#x88C5;&#x4E00;&#x4E2A; Selenium &#x7684;&#x63D2;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x4FBF;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x5730;&#x5B9E;&#x73B0;Web&#x754C;&#x9762;&#x7684;&#x6D4B;&#x8BD5; \ &#x5B89;&#x88C5;&#xFF1A;\text{pip install selenium} \end{cases}$</p></li><li><p>PhantomJs&#x5B89;&#x88C5;&#x8BE6;&#x89E3;$\begin{cases}&#x6982;&#x5FF5;&#xFF1A;&#x6CA1;&#x6709;&#x754C;&#x9762;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x540E;&#x53F0;&#x5B89;&#x9759;&#x5730;&#x8FD0;&#x884C; \ &#x5B89;&#x88C5;&#xFF1A;&#x4E0B;&#x8F7D;phantomJs&#xFF0C;&#x7136;&#x540E;&#x89E3;&#x538B;&#xFF0C;&#x5C06;exe&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x653E;&#x5230;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x91CC;&#x9762; \end{cases}$</p></li><li><p>lxml&#x5B89;&#x88C5;&#x8BE6;&#x89E3;$\begin{cases}&#x6982;&#x5FF5;&#xFF1A;&#x7528;&#x4E8E;&#x7F51;&#x9875;&#x89E3;&#x6790; \ &#x5B89;&#x88C5;&#xFF1A;\text{pip install lxml}\end{cases}$</p></li><li><p>pymysql&#x5B89;&#x88C5;&#x8BE6;&#x89E3;&#xFF1A;$\begin{cases}&#x6982;&#x5FF5;&#xFF1A;&#x7528;&#x4E8E;&#x8FDE;&#x63A5;mysql \ &#x5B89;&#x88C5;&#xFF1A;\text{pip install pymsql}\end{cases}$</p></li><li><p>pymongo&#x5B89;&#x88C5;&#x8BE6;&#x89E3;&#xFF1A;$\begin{cases}&#x6982;&#x5FF5;&#xFF1A;&#x7528;&#x4E8E;&#x8FDE;&#x63A5;mongoDB \ &#x5B89;&#x88C5;&#xFF1A;\text{pip install pymongo}\end{cases}$</p></li><li><p>flask&#x5B89;&#x88C5;&#x8BE6;&#x89E3;&#xFF1A;$\begin{cases}&#x6982;&#x5FF5;&#xFF1A;Python&#x7F16;&#x5199;&#x7684;Web &#x5FAE;&#x6846;&#x67B6;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Python&#x8BED;&#x8A00;&#x5FEB;&#x901F;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x7F51;&#x7AD9;&#x6216;Web&#x670D;&#x52A1;&#x3002; \ &#x5B89;&#x88C5;&#xFF1A;\text{pip install flask}\end{cases}$</p></li><li><p>django&#x5B89;&#x88C5;&#x8BE6;&#x89E3;&#xFF1A;$\begin{cases}&#x6982;&#x5FF5;&#xFF1A;Django &#x662F;&#x5E94;&#x7528;&#x4E8E; Web &#x5F00;&#x53D1;&#x7684;&#x9AD8;&#x7EA7;&#x52A8;&#x6001;&#x8BED;&#x8A00;&#x6846;&#x67B6;,&#x5206;&#x5E03;&#x5F0F;&#x722C;&#x866B;&#x9700;&#x8981;&#x7528;&#x5230; \ &#x5B89;&#x88C5;&#xFF1A;\text{pip install django}\end{cases}$</p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> mongoDB </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>博客搭建（Hexo+Github）</title>
      <link href="/2018/10/20/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2018/10/20/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>&#x603B;&#x7B97;&#x4E0B;&#x5B9A;&#x51B3;&#x5FC3;&#x8981;&#x628A;&#x535A;&#x5BA2;&#x642D;&#x5EFA;&#x8D77;&#x6765;&#x4E86;&#xFF0C;&#x4E4B;&#x524D;&#x4E00;&#x76F4;&#x56E0;&#x4E3A;&#x60F3;&#x627E;&#x5DE5;&#x4F5C;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x6CA1;&#x6709;&#x6574;&#x3002;&#x73B0;&#x5728;&#x6E05;&#x95F2;&#x4E0B;&#x6765;&#x4E86;&#xFF0C;&#x518D;&#x52A0;&#x4E0A;&#x6700;&#x8FD1;&#x5FC3;&#x6001;&#x653E;&#x677E;&#x4E86;&#xFF0C;&#x4E0D;&#x592A;&#x60F3;&#x5B66;&#x4E60;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x60F3;&#x7740;&#x627E;&#x70B9;&#x4E1C;&#x897F;&#x73A9;&#x513F;&#x3002;</p><a id="more"></a><p>&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;&#x7684;&#x642D;&#x5EFA;&#x662F;Hexo&#x4E0E;Github&#x914D;&#x5408;&#x8FDB;&#x884C;&#x642D;&#x5EFA;&#x3002;&#x901A;&#x8FC7;Hexo&#x4F60;&#x53EF;&#x4EE5;&#x8F7B;&#x677E;&#x5730;&#x901A;&#x8FC7;Markdown&#x7F16;&#x5199;&#x6587;&#x7AE0;&#xFF0C;&#x9664;&#x4E86;&#x652F;&#x6301;Markdown&#x672C;&#x8EAB;&#x7684;&#x8BED;&#x6CD5;&#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;Hexo&#x63D0;&#x4F9B;&#x7684;&#x6807;&#x7B7E;&#x63D2;&#x4EF6;&#x6765;&#x5FEB;&#x901F;&#x63D2;&#x5165;&#x7279;&#x5B9A;&#x5F62;&#x5F0F;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x672C;&#x6587;&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#x4E09;&#x4E2A;&#x90E8;&#x5206;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x535A;&#x5BA2;&#x642D;&#x5EFA;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#xFF0C;&#x4E8C;&#x662F;&#x535A;&#x5BA2;&#x754C;&#x9762;&#x7684;&#x4FEE;&#x6539;&#x548C;&#x88C5;&#x9970;&#xFF0C;&#x4E09;&#x662F;&#x4F7F;&#x7528;hexo&#x5199;&#x535A;&#x5BA2;&#x3002;</p><p>[TOC]</p><h1><span id="x535ax5ba2x642dx5efax51c6x5907x5de5x4f5c">&#x535A;&#x5BA2;&#x642D;&#x5EFA;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;</span></h1><p>&#x76F8;&#x5173;&#x6280;&#x672F;&#x5E73;&#x53F0;&#x4ECB;&#x7ECD;&#xFF1A;</p><ul><li>Hexo&#x662F;&#x4E00;&#x6B3E;&#x57FA;&#x4E8E;Node.js&#x7684;&#x9759;&#x6001;&#x535A;&#x5BA2;&#x6846;&#x67B6;&#xFF0C;&#x4F9D;&#x8D56;&#x5C11;&#x3001;&#x6613;&#x4E8E;&#x5B89;&#x88C5;&#x4F7F;&#x7528;&#xFF0C;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x7684;&#x751F;&#x6210;&#x9759;&#x6001;&#x7F51;&#x9875;&#x6258;&#x7BA1;&#x5728;github&#x548C;heroku&#x4E0A;&#xFF0C;&#x662F;&#x642D;&#x5EFA;&#x535A;&#x5BA2;&#x7684;&#x9996;&#x9009;&#x6846;&#x67B6;&#x3002;&#x540C;&#x65F6;hexo&#x7684;&#x521B;&#x5EFA;&#x4EBA;&#x662F;&#x53F0;&#x6E7E;&#x4EBA;&#xFF0C;&#x5BF9;&#x4E2D;&#x6587;&#x7684;&#x652F;&#x6301;&#x8FD8;&#x662F;&#x5F88;&#x53CB;&#x597D;&#x7684;&#x3002;</li><li>git&#x662F;&#x5F00;&#x6E90;&#x7684;&#x5206;&#x5E03;&#x5F0F;&#x7248;&#x672C;&#x63A7;&#x5236;&#x7CFB;&#x7EDF;&#xFF0C;&#x7528;&#x4E8E;&#x654F;&#x6377;&#x9AD8;&#x6548;&#x5730;&#x5904;&#x7406;&#x9879;&#x76EE;&#xFF0C;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;&#x642D;&#x5EFA;&#x597D;&#x4E86;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x4F7F;&#x7528;git&#x540C;&#x6B65;&#x5230;github&#x4E0A;&#x3002;&#x7136;&#x540E;&#x8BF4;&#x4E00;&#x4E0B;git&#x548C;github&#x7684;&#x533A;&#x522B;&#xFF0C;git&#x662F;&#x4E00;&#x6B3E;&#x514D;&#x8D39;&#x5F00;&#x6E90;&#x7684;&#x5206;&#x5E03;&#x5F0F;&#x7248;&#x672C;&#x63A7;&#x5236;&#x7CFB;&#x7EDF;&#xFF0C;&#x800C;github&#x662F;&#x7528;git&#x505A;&#x7248;&#x672C;&#x63A7;&#x5236;&#x7684;&#x4EE3;&#x7801;&#x6258;&#x7BA1;&#x5E73;&#x53F0;&#x3002;</li></ul><p>&#x6CE8;&#x610F;&#x70B9;&#xFF1A;&#x5728;Hexo&#x4E2D;&#x6709;&#x4E24;&#x4EFD;&#x4E3B;&#x8981;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x540D;&#x79F0;&#x90FD;&#x662F;<code>_config.yml</code>&#x3002;&#x5176;&#x4E2D;&#xFF0C;&#x4E00;&#x4EFD;&#x5728;&#x7AD9;&#x70B9;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x4E3B;&#x8981;&#x5305;&#x542B;Hexo&#x672C;&#x8EAB;&#x7684;&#x914D;&#x7F6E;&#xFF1B;&#x53E6;&#x5916;&#x4E00;&#x4EFD;&#x4F4D;&#x4E8E;&#x4E3B;&#x9898;&#xFF08;&#x5C31;&#x662F;&#x4F60;&#x4E0B;&#x8F7D;&#x7684;theme&#x4E3B;&#x9898;&#xFF09;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x8FD9;&#x4EFD;&#x914D;&#x7F6E;&#x7531;&#x4E3B;&#x9898;&#x7684;&#x4F5C;&#x8005;&#x63D0;&#x4F9B;&#xFF0C;&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x914D;&#x7F6E;&#x4E3B;&#x9898;&#x76F8;&#x5173;&#x7684;&#x9009;&#x9879;&#xFF0C;&#x524D;&#x8005;&#x79F0;&#x4E3A; $ \color{blue}{&#x7AD9;&#x70B9;&#x914D;&#x7F6E;&#x6587;&#x4EF6;}$&#xFF0C;&#x540E;&#x8005;&#x79F0;&#x4E3A;$\color{red}{&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;}$</p><h2><span id="gitx4e0bx8f7dx5b89x88c5x4ee5x53cax7ed1x5b9agithubx8d26x53f7">git&#x4E0B;&#x8F7D;&#x5B89;&#x88C5;&#x4EE5;&#x53CA;&#x7ED1;&#x5B9A;github&#x8D26;&#x53F7;</span></h2><p>&#x53EF;&#x4EE5;&#x53C2;&#x770B;<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">&#x5ED6;&#x96EA;&#x5CF0;&#x8001;&#x5E08;&#x7684;Git&#x6559;&#x7A0B;</a>&#xFF0C;&#x7136;&#x540E;&#x4ECE;Git&#x5B98;&#x7F51;<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">&#x4E0B;&#x8F7D;Git</a> &#x3002;&#x5B89;&#x88C5;&#x597D;Git&#x4E4B;&#x540E;&#x9700;&#x8981;&#x5C06;github&#x8D26;&#x53F7;&#x4E0E;&#x5176;&#x7ED1;&#x5B9A;&#x3002;&#x5728;&#x83DC;&#x5355;&#x4E2D;&#x641C;&#x7D22;Git Bash&#xFF0C;&#x8BBE;&#x7F6E;user.name&#x548C;user.email&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#xFF1A;</p><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global user.name <span class="string">&quot;&#x4F60;&#x7684;GitHub&#x7528;&#x6237;&#x540D;&quot;</span></span><br><span class="line">git<span class="built_in"> config </span>--global user.email <span class="string">&quot;&#x4F60;&#x7684;GitHub&#x6CE8;&#x518C;&#x90AE;&#x7BB1;&quot;</span></span><br></pre></td></tr></tbody></table></figure><p>&#x751F;&#x6210;ssh&#x5BC6;&#x94A5;&#x6587;&#x4EF6;</p><figure class="highlight excel"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -<span class="built_in">t</span> rsa -C <span class="string">&quot;&#x4F60;&#x7684;GitHub&#x6CE8;&#x518C;&#x90AE;&#x7BB1;&quot;</span></span><br></pre></td></tr></tbody></table></figure><p>&#x7136;&#x540E;&#x76F4;&#x63A5;&#x4E09;&#x6B21;&#x56DE;&#x8F66;&#x5C31;&#x884C;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E0D;&#x9700;&#x8981;&#x8BBE;&#x7F6E;&#x5BC6;&#x7801;</p><p>&#x7136;&#x540E;&#x627E;&#x5230;&#x751F;&#x6210;&#x7684;.ssh&#x7684;&#x6587;&#x4EF6;&#x4E2D;&#x7684;id_rsa.pub&#x5BC6;&#x94A5;&#xFF0C;&#x5C06;&#x5185;&#x5BB9;&#x5168;&#x90E8;&#x590D;&#x5236;&#x3002;&#x6253;&#x5F00;Github_Settings_keys&#x9875;&#x9762;&#xFF0C;&#x65B0;&#x5EFA;new SSH Key&#x3002;Title&#x662F;&#x6807;&#x9898;&#xFF0C;&#x4EFB;&#x610F;&#x586B;&#x5C31;&#x884C;&#xFF0C;&#x5C06;&#x521A;&#x521A;&#x590D;&#x5236;&#x7684;id_rsa.pub&#x5185;&#x5BB9;&#x590D;&#x5236;&#x8FDB;&#x53BB;&#xFF0C;&#x6700;&#x540E;&#x70B9;&#x51FB;Add SSH Key&#x3002;&#x5728;Git Bash&#x4E2D;&#x68C0;&#x6D4B;Github&#x516C;&#x94A5;&#x8BBE;&#x7F6E;&#x662F;&#x5426;&#x6210;&#x529F;&#xFF0C;&#x8F93;&#x5165;ssh <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a></p><p>&#x8BBE;&#x7F6E;github&#x5BC6;&#x94A5;&#x7684;&#x539F;&#x56E0;&#x662F;&#xFF0C;&#x901A;&#x8FC7;&#x975E;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;&#x7684;&#x516C;&#x94A5;&#x4E0E;&#x79C1;&#x94A5;&#x6765;&#x5B8C;&#x6210;&#x52A0;&#x5BC6;&#xFF0C;&#x516C;&#x94A5;&#x653E;&#x7F6E;&#x5728;github&#x4E0A;&#xFF0C;&#x79C1;&#x94A5;&#x653E;&#x7F6E;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x7535;&#x8111;&#x4E0A;&#xFF0C;github&#x8981;&#x6C42;&#x6BCF;&#x6B21;&#x63A8;&#x9001;&#x4EE3;&#x7801;&#x90FD;&#x662F;&#x5408;&#x6CD5;&#x7528;&#x6237;&#xFF0C;&#x6240;&#x4EE5;&#x6BCF;&#x6B21;&#x63A8;&#x9001;&#x90FD;&#x9700;&#x8981;&#x8F93;&#x5165;&#x8D26;&#x53F7;&#x5BC6;&#x7801;&#x9A8C;&#x8BC1;&#x63A8;&#x9001;&#x7528;&#x6237;&#x662F;&#x5426;&#x662F;&#x5408;&#x6CD5;&#x7528;&#x6237;&#xFF0C;&#x4E3A;&#x4E86;&#x7701;&#x53BB;&#x6BCF;&#x6B21;&#x8F93;&#x5165;&#x5BC6;&#x7801;&#x7684;&#x6B65;&#x9AA4;&#xFF0C;&#x91C7;&#x7528;&#x4E86;ssh&#xFF0C;&#x5F53;&#x4F60;&#x63A8;&#x9001;&#x7684;&#x65F6;&#x5019;&#xFF0C;git&#x5C31;&#x4F1A;&#x5339;&#x914D;&#x4F60;&#x7684;&#x79C1;&#x94A5;&#x8DDF;github&#x4E0A;&#x9762;&#x7684;&#x516C;&#x94A5;&#x662F;&#x5426;&#x662F;&#x914D;&#x5BF9;&#xFF0C;&#x5982;&#x679C;&#x914D;&#x5BF9;&#x5C31;&#x8BF4;&#x660E;&#x4F60;&#x662F;&#x5408;&#x6CD5;&#x7528;&#x6237;&#x3002;</p><h2><span id="x5b89x88c5nodejs">&#x5B89;&#x88C5;Node.js</span></h2><p>hexo&#x662F;&#x57FA;&#x4E8E;Node.js&#xFF0C;Node.js&#x7684;<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">&#x4E0B;&#x8F7D;&#x5730;&#x5740;</a> &#xFF0C;&#x9009;&#x62E9;&#x5408;&#x9002;&#x7684;&#x4E0B;&#x8F7D;&#x5B89;&#x88C5;&#x5373;&#x53EF;&#x3002;</p><h2><span id="x5b89x88c5hexo">&#x5B89;&#x88C5;hexo</span></h2><p>hexo&#x662F;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;&#x7F51;&#x7AD9;&#x7684;&#x6846;&#x67B6;&#xFF0C;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x5148;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#xFF08;&#x6587;&#x4EF6;&#x5939;&#x547D;&#x540D;&#x6700;&#x597D;&#x662F;&#x82F1;&#x6587;&#xFF0C;&#x4E0D;&#x7136;&#x5BB9;&#x6613;&#x51FA;&#x73B0;&#x4E0D;&#x53EF;&#x9884;&#x77E5;&#x7684;&#x9519;&#x8BEF;&#xFF09;&#x3002;hexo&#x6846;&#x67B6;&#x548C;&#x4EE5;&#x540E;&#x53D1;&#x5E03;&#x7684;&#x7F51;&#x9875;&#x90FD;&#x5728;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#xFF0C;&#x521B;&#x5EFA;&#x597D;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x7136;&#x540E;&#x8FDB;&#x5165;&#xFF0C;&#x53F3;&#x952E;&#x4F7F;&#x7528;Git Bash Here&#x8FDB;&#x884C;hexo&#x7684;&#x5B89;&#x88C5;&#x3002;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x91CC;&#x9762;&#x8F93;&#x5165;&#x4E0B;&#x9762;&#x4E94;&#x6761;&#x8BED;&#x53E5;</p><ul><li>npm install -g hexo-cli</li><li>hexo init </li><li>nmp install</li><li>hexo generate</li><li>hexo server</li></ul><p>&#x7B2C;&#x4E00;&#x6761;&#x8BED;&#x53E5;&#x7528;&#x6765;&#x5B89;&#x88C5;hexo&#xFF08;&#x5B89;&#x88C5;&#x5B8C;&#x4E4B;&#x540E;&#xFF0C;&#x6253;&#x5F00;&#x521A;&#x624D;&#x65B0;&#x5EFA;&#x7684;&#x6587;&#x4EF6;&#x5939;&#xFF09;&#xFF0C;&#x5728;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x4F7F;&#x7528;Git Bash Here&#x8F93;&#x5165;&#x7B2C;&#x4E8C;&#x6761;&#x547D;&#x4EE4;&#xFF0C;&#x7528;&#x6765;&#x81EA;&#x52A8;&#x5728;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x4E0B;&#x8F7D;&#x642D;&#x5EFA;&#x7F51;&#x7AD9;&#x9700;&#x8981;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x7B2C;&#x4E09;&#x6761;&#x8BED;&#x53E5;&#x7528;&#x6765;&#x5B89;&#x88C5;&#x4F9D;&#x8D56;&#x5305;&#xFF0C;&#x7B2C;&#x56DB;&#x6761;&#x8BED;&#x53E5;&#x7528;&#x6765;&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x4EF6;&#x3002;&#x7B2C;&#x4E94;&#x6761;&#x8BED;&#x53E5;&#x7528;&#x6765;&#x542F;&#x52A8;&#x672C;&#x5730;&#x670D;&#x52A1;&#x5668;&#x3002;</p><p>&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8BBF;&#x95EE;<code>http://localhost:4000/</code>&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x672C;&#x5730;&#x5EFA;&#x7ACB;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x4F46;&#x662F;&#x8981;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x5728;&#x7EBF;&#x535A;&#x5BA2;&#x8FD8;&#x9700;&#x8981;&#x5C06;github&#x548C;&#x672C;&#x5730;&#x535A;&#x5BA2;&#x8FDB;&#x884C;&#x8FDE;&#x63A5;&#x3002;</p><h2><span id="x521bx5efagithub-repositoryx8fdcx7a0bx4ed3x5e93">&#x521B;&#x5EFA;github repository&#x8FDC;&#x7A0B;&#x4ED3;&#x5E93;</span></h2><p>&#x521B;&#x5EFA;&#x4E5F;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x5730;&#x65B9;&#x6709;&#x4E00;&#x4E2A;&#x5751;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x7A0D;&#x540E;&#x6765;&#x8BB2;&#x3002;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;<code>username.github.io</code>&#x540D;&#x5B57;&#x7C7B;&#x578B;&#x7684;&#x4ED3;&#x5E93;&#xFF08;&#x8FD9;&#x91CC;&#x9700;&#x8981;$ \color{red}{&#x6CE8;&#x610F;username&#x662F;&#x4F60;github&#x7684;&#x7528;&#x6237;&#x540D;&#xFF0C;&#x5FC5;&#x987B;&#x4E00;&#x81F4;}$&#xFF09;&#xFF0C;&#x4ED3;&#x5E93;&#x5EFA;&#x7ACB;&#x597D;&#x4E4B;&#x540E;&#xFF0C;&#x9700;&#x8981;&#x5728;&#x4ED3;&#x5E93;&#x7684;<code>Setting</code>&#x4E2D;&#x627E;&#x5230;$\textcolor{red}{}$ $ \color{red}{Github Page&#x4E2D;&#x7684;Source&#xFF0C;&#x5C06;&#x5176;&#x4FEE;&#x6539;&#x4E3A;master branch}$ &#x3002;&#x8FD9;&#x4E9B;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x4E3B;&#x8981;&#x6765;&#x81EA;&#x4E8E;<a href="https://blog.csdn.net/dajian790626/article/details/78595684" target="_blank" rel="noopener">hexo&#x642D;&#x5EFA;Github&#x535A;&#x5BA2;&#x4E0A;&#x4F20;&#x540E;&#xFF0C;&#x7F51;&#x9875;&#x663E;&#x793A;404&#x95EE;&#x9898;&#x89E3;&#x51B3;&#x65B9;&#x6848;</a> </p><h2><span id="x90e8x7f72x672cx5730x6587x4ef6x5230github">&#x90E8;&#x7F72;&#x672C;&#x5730;&#x6587;&#x4EF6;&#x5230;github</span></h2><p>&#x8FDC;&#x7A0B;&#x4ED3;&#x5E93;&#x548C;&#x672C;&#x5730;&#x4ED3;&#x5E93;&#x90FD;&#x521B;&#x5EFA;&#x597D;&#x4E86;&#xFF0C;&#x7136;&#x540E;&#x5C31;&#x662F;&#x5EFA;&#x7ACB;&#x5C06;&#x672C;&#x5730;&#x4EE3;&#x7801;&#x63D0;&#x4EA4;&#x8FDC;&#x7A0B;&#x4ED3;&#x5E93;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x7528;&#x4E8E;&#x8FDE;&#x63A5;&#x672C;&#x5730;&#x4ED3;&#x5E93;&#x548C;&#x8FDC;&#x7A0B;&#x4ED3;&#x5E93;&#x3002;&#x9700;&#x8981;&#x7684;&#x64CD;&#x4F5C;&#x662F;&#xFF1A;&#x6253;&#x5F00;&#x4E4B;&#x524D;&#x5EFA;&#x7ACB;&#x597D;&#x7684;hexo&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x91CC;&#x9762;&#x627E;&#x5230;<code>_config.yml</code>&#x6587;&#x4EF6;&#xFF0C;&#x73B0;&#x5728;&#x53EA;&#x9700;&#x8981;&#x66F4;&#x6539;&#x6587;&#x4EF6;&#x6700;&#x4E0B;&#x9762;&#x7684;&#x4E09;&#x884C;&#x4EE3;&#x7801;&#x3002;&#x5728;&#x6700;&#x4E0B;&#x9762;&#x66F4;&#x6539;&#x539F;&#x5148;&#x7684;&#x4EE3;&#x7801;&#x4E3A;&#xFF1A;</p><figure class="highlight less"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repository</span>: <span class="attribute">http</span>:<span class="comment">//github.com/username/username.github.io.git</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></tbody></table></figure><blockquote><p>&#x9700;&#x8981;$ \color{red}{&#x6CE8;&#x610F;}$&#x7684;&#x662F;&#xFF1A;</p><ul><li>&#x6BCF;&#x4E00;&#x4E2A;<code>:</code> &#x4E4B;&#x540E;&#x5FC5;&#x987B;&#x8981;&#x6709;&#x7A7A;&#x683C;</li><li>&#x6CE8;&#x610F;&#x7B2C;&#x4E8C;&#x4E2A;username&#x4E4B;&#x540E;&#x7684;&#x540E;&#x7F00;</li><li>branch&#x4E4B;&#x540E;&#x8DDF;&#x7684;master&#x7684;&#x539F;&#x56E0;&#x662F;&#x4E4B;&#x524D;&#x54B1;&#x4EEC;&#x66F4;&#x6539;&#x4E86;Github Page&#x7684;Source&#x6765;&#x6E90;</li></ul></blockquote><p>&#x914D;&#x7F6E;&#x597D;&#x4E4B;&#x540E;&#x6267;&#x884C;&#xFF1A;</p><figure class="highlight verilog"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">generate</span> (&#x6216;&#x8005;&#x8F93;&#x5165; hexo g)</span><br><span class="line">$ hexo deploy (&#x6216;&#x8005;&#x8F93;&#x5165; hexo d)</span><br></pre></td></tr></tbody></table></figure><p>&#x81F3;&#x6B64;&#xFF0C;&#x535A;&#x5BA2;&#x642D;&#x5EFA;&#x7B97;&#x662F;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x800C;&#x4E14;&#x5DF2;&#x7ECF;&#x53D1;&#x5E03;&#x5230;github&#x4E0A;&#x4E86;&#xFF0C;&#x522B;&#x4EBA;&#x4E5F;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x5230;&#x4E86;&#xFF0C;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E0A;&#x8BBF;&#x95EE;<code>http:\\username.github.io</code>&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x535A;&#x5BA2;&#x3002;</p><blockquote><p>&#x5EFA;&#x8BAE;&#xFF1A;</p><ul><li><p>&#x5728;&#x6BCF;&#x6B21;&#x90E8;&#x7F72;github&#x4E4B;&#x540E;&#xFF0C;&#x53EF;&#x80FD;&#x8981;&#x8FC7;&#x4E00;&#x4F1A;&#x624D;&#x80FD;&#x663E;&#x793A;&#x6700;&#x65B0;&#x7684;&#x9875;&#x9762;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x8F93;&#x5165;&#x5B8C;<code>hexo deploty</code> &#x4E4B;&#x540E;&#xFF0C;&#x5EFA;&#x8BAE;&#x4E00;&#x5F00;&#x59CB;&#x8C03;&#x8BD5;&#x9875;&#x9762;&#x7684;&#x65F6;&#x5019;&#x5728;&#x672C;&#x5730;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x64CD;&#x4F5C;&#xFF0C;&#x53EF;&#x4EE5;&#x8282;&#x7701;&#x65F6;&#x95F4;</p></li><li><p>&#x6BCF;&#x6B21;&#x5728;&#x90E8;&#x7F72;&#x4E4B;&#x524D;&#x6700;&#x597D;&#x5148;clean&#x4E00;&#x4E0B;</p><figure class="highlight verilog"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;   $ hexo clean</span><br><span class="line">&gt;   $ hexo <span class="keyword">generate</span></span><br><span class="line">&gt;   $ hexo deploy</span><br><span class="line">&gt;</span><br></pre></td></tr></tbody></table></figure></li></ul></blockquote><h1><span id="x535ax5ba2x754cx9762x7684x4feex6539x548cx88c5x9970">&#x535A;&#x5BA2;&#x754C;&#x9762;&#x7684;&#x4FEE;&#x6539;&#x548C;&#x88C5;&#x9970;</span></h1><p>&#x5728;&#x7F51;&#x4E0A;&#x6709;&#x8BB8;&#x591A;&#x5F88;&#x597D;&#x770B;&#x7684;Hexo&#x4E3B;&#x9898;&#xFF0C;&#x5927;&#x5BB6;&#x53EF;&#x4EE5;&#x5230;&#x8FD9;&#x4E2A;<a href="https://www.zhihu.com/question/24422335/answer/46357100" target="_blank" rel="noopener">&#x77E5;&#x4E4E;&#x95EE;&#x9898;</a>&#x91CC;&#x9762;&#x81EA;&#x884C;&#x6311;&#x9009;&#x3002;Hexo&#x7684;&#x4E3B;&#x9898;&#x90FD;&#x662F;&#x653E;&#x5728;github&#x4E0A;&#x7684;&#x3002;Hexo&#x7684;&#x4E3B;&#x9898;&#x5B89;&#x88C5;&#x4E5F;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x8981;&#x5C06;&#x4E3B;&#x9898;&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;&#x7AD9;&#x70B9;&#x76EE;&#x5F55;&#x7684;<code>themes</code>&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x7136;&#x540E;&#x4FEE;&#x6539;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5C31;&#x884C;&#x4E86;&#x3002;</p><h2><span id="x4e0bx8f7dx4e3bx9898">&#x4E0B;&#x8F7D;&#x4E3B;&#x9898;</span></h2><p>&#x5728;git&#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#x4E0B;&#xFF0C;&#x5B9A;&#x4F4D;&#x5230;Hexo&#x7AD9;&#x70B9;&#x76EE;&#x5F55;&#x4E0B;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x4F60;&#x4E4B;&#x524D;&#x5EFA;&#x7ACB;&#x7684;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#xFF09;&#xFF0C;&#x8FD9;&#x91CC;&#x6BD4;&#x5982;&#x4E0B;&#x8F7D;Next&#x4E3B;&#x9898;</p><figure class="highlight vim"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">cd</span> your-hexo-site</span><br><span class="line">$ git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/iissnan/hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>&#x5982;&#x679C;&#x4F60;&#x5BF9;Git&#x4E0D;&#x592A;&#x719F;&#x6089;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x7EBF;&#x9605;&#x8BFB;<a href="http://iissnan.com/progit/" target="_blank" rel="noopener">&#x300A;Pro Git&#x300B;</a>&#x8FDB;&#x884C;&#x5B66;&#x4E60;&#x3002;</p></blockquote><h2><span id="x542fx7528x4e3bx9898">&#x542F;&#x7528;&#x4E3B;&#x9898;</span></h2><p>&#x4E0B;&#x8F7D;&#x5B8C;&#x6BD5;&#x4E4B;&#x540E;&#xFF0C;&#x6253;&#x5F00;==&#x7AD9;&#x70B9;&#x914D;&#x7F6E;&#x6587;&#x4EF6;== (<code>_config.yml</code>)&#xFF0C;&#x627E;&#x5230;<code>theme</code>&#x5B57;&#x6BB5;&#xFF0C;&#x5E76;&#x5C06;&#x5176;&#x503C;&#x6539;&#x4E3A;<code>next</code>&#xFF08;&#x6216;&#x8005;&#x662F;&#x4F60;&#x4E0B;&#x8F7D;&#x4E0B;&#x6765;&#x7684;&#x4E3B;&#x9898;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x540D;&#x5B57;&#xFF09;</p><p>&#x7136;&#x540E;&#x9A8C;&#x8BC1;&#x4E3B;&#x9898;&#x66F4;&#x6362;&#x4E4B;&#x524D;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528;<code>hexo clean</code>&#x6E05;&#x9664;hexo&#x7684;&#x7F13;&#x5B58;&#x3002;</p><h2><span id="x4e3bx9898x8bbex5b9a">&#x4E3B;&#x9898;&#x8BBE;&#x5B9A;</span></h2><p>&#x4E3B;&#x9898;&#x8BBE;&#x5B9A;&#xFF0C;&#x5728;&#x8BB8;&#x591A;&#x4E3B;&#x9898;&#x7684;&#x624B;&#x518C;&#x4E0A;&#x90FD;&#x6709;&#x6559;&#x7A0B;&#xFF0C;&#x5927;&#x5BB6;&#x53EF;&#x4EE5;&#x770B;Next&#x7684;&#x8FD9;&#x4E2A;<a href="https://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">&#x6559;&#x7A0B;</a>&#x66F4;&#x6539;&#x81EA;&#x5DF1;&#x9700;&#x8981;&#x7684;&#x6548;&#x679C;&#xFF0C;&#x5305;&#x62EC;&#x8BBE;&#x7F6E;Scheme&#xFF0C;&#x8BED;&#x8A00;&#xFF0C;&#x83DC;&#x5355;&#xFF0C;&#x4FA7;&#x680F;&#xFF0C;&#x5934;&#x50CF;&#xFF0C;&#x6635;&#x79F0;&#xFF0C;&#x7AD9;&#x70B9;&#x63CF;&#x8FF0;&#x4EE5;&#x53CA;&#x96C6;&#x6210;&#x5E38;&#x7528;&#x7684;&#x7B2C;&#x4E09;&#x65B9;&#x670D;&#x52A1;&#x3002;</p><h1><span id="x4f7fx7528hexox5199x535ax5ba2">&#x4F7F;&#x7528;hexo&#x5199;&#x535A;&#x5BA2;</span></h1><h2><span id="x65b0x5efax6587x6863x4ee5x53cax7f16x8f91">&#x65B0;&#x5EFA;&#x6587;&#x6863;&#x4EE5;&#x53CA;&#x7F16;&#x8F91;</span></h2><p>&#x5728;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x91CC;&#x9762;&#x6253;&#x5F00;Git &#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#xFF0C;&#x6267;&#x884C;&#x4E0B;&#x9762;&#x7684;&#x547D;&#x4EE4;</p><p><code>$ hexo new myfirstblog</code></p><p>&#x6267;&#x884C;&#x4E86;&#x4E0A;&#x8FF0;&#x547D;&#x4EE4;&#x5728;<code>./hexo/source/_posts</code> &#x8DEF;&#x5F84;&#x4E0B;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A; <code>myfirstblog.md</code>&#x7684;&#x6587;&#x4EF6;&#x3002;&#x6253;&#x5F00;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x4F60;&#x4F1A;&#x770B;&#x5230;</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">myfirstblog.md</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-10</span><span class="bullet">-16</span> <span class="number">18</span><span class="string">:11:25</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><p>&#x8FD9;&#x4E9B;&#x76F4;&#x63A5;&#x751F;&#x6210;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x662F;&#x7528;&#x6765;&#x8BBE;&#x7F6E;Markdown&#x6587;&#x6863;&#x5728;&#x88AB;&#x89E3;&#x6790;&#x4E3A;&#x9759;&#x6001;&#x7F51;&#x9875;&#x6587;&#x4EF6;&#x65F6;&#x7684;&#x76F8;&#x5173;&#x914D;&#x7F6E;&#xFF0C;&#x5176;&#x4E2D;<code>tags</code>&#x4E0B;&#x9762;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x76F8;&#x5173;&#x7684;&#x6587;&#x7AE0;&#x6807;&#x7B7E;&#x3002;&#x6BD4;&#x5982;&#x6211;&#x7ED9;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x8D34;&#x4E0A;==&#x6280;&#x672F;== &#x7684;&#x6807;&#x7B7E;</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">myfirstblog.md</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-10</span><span class="bullet">-16</span> <span class="number">18</span><span class="string">:11:25</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet"> -</span> <span class="string">&#x6280;&#x672F;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><p>&#x9664;&#x4E86;<code>tags</code>&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x5BF9;&#x6587;&#x7AE0;&#x8FDB;&#x884C;==&#x5206;&#x7C7B;==&#x3002;&#x4F7F;&#x7528;<code>categories</code> &#x7ED9;&#x6587;&#x7AE0;&#x5206;&#x7C7B;&#xFF08;&#x76F8;&#x5F53;&#x4E8E;&#x7ED9;&#x6587;&#x7AE0;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x8BBE;&#x7F6E;&#xFF09;&#xFF0C;&#x8FD9;&#x4E2A;&#x548C;<code>tags</code>&#x4E0D;&#x4E00;&#x6837;&#x3002;</p><p>&#x751F;&#x6210;&#x6587;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x6309;&#x7167;&#x4E0B;&#x9762;&#x7684;&#x547D;&#x4EE4;&#x5C06;markdown&#x6587;&#x6863;&#x751F;&#x6210;&#x76F8;&#x5E94;&#x7684;&#x9759;&#x6001;&#x6587;&#x4EF6;&#x3002;</p><figure class="highlight verilog"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo <span class="keyword">generate</span></span><br></pre></td></tr></tbody></table></figure><h1><span id="x9047x5230x7684x5751">&#x9047;&#x5230;&#x7684;&#x5751;</span></h1><ul><li><p>&#x6807;&#x7B7E;&#xFF0C;&#x5206;&#x7C7B;&#xFF0C;&#x4E3B;&#x9875;&#x8FD9;&#x4E9B;&#xFF0C;&#x5728;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x9700;&#x8981;&#x6309;&#x7167;&#x8FD9;&#x6837;&#x7684;&#x683C;&#x5F0F;&#x6765;&#x5199;&#xFF08;==&#x4E0D;&#x8FC7;&#x51C6;&#x786E;&#x6765;&#x8BF4;&#xFF0C;&#x5E94;&#x8BE5;&#x6309;&#x7167;&#x4F60;&#x5F53;&#x65F6;&#x6240;&#x5728;&#x7248;&#x672C;&#x7684;&#x683C;&#x5F0F;&#x8981;&#x6C42;&#x6765;&#x5199;==&#xFF09;,&#x5F00;&#x59CB;&#x6211;&#x770B;&#x7684;&#x7F51;&#x4E0A;&#x7684;&#x5199;&#x6CD5;&#x90FD;&#x662F;&#x8FD9;&#x6837;&#x5199;&#x7684;<code>tags: /tags</code>&#x6CA1;&#x6709;&#x540E;&#x9762;&#x7684;&#x90A3;&#x4E2A;&#x659C;&#x7EBF;&#xFF0C;&#x7136;&#x800C;&#xFF01;&#xFF01;&#xFF01;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x9519;&#x7684;&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x52A0;&#x659C;&#x7EBF;&#x3002;&#x6211;&#x540E;&#x6765;&#x603B;&#x7ED3;&#x4E86;&#xFF0C;&#x5E94;&#x8BE5;&#x662F;&#x7248;&#x672C;&#x53D8;&#x52A8;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x6240;&#x4EE5;==&#x6309;&#x7167;&#x4E0B;&#x8F7D;&#x5230;&#x7684;&#x7248;&#x672C;&#x6765;&#x5199;&#x3002;==</p><figure class="highlight dts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  home:</span> /    </span><br><span class="line"><span class="symbol">  categories:</span> <span class="meta-keyword">/categories/</span> </span><br><span class="line"><span class="symbol">  about:</span> <span class="meta-keyword">/about/</span>    </span><br><span class="line"><span class="symbol">  archives:</span> <span class="meta-keyword">/archives/</span> </span><br><span class="line"><span class="symbol">  tags:</span> <span class="meta-keyword">/tags/</span> </span><br><span class="line">  <span class="meta">#sitemap: /sitemap.xml</span></span><br><span class="line">  <span class="meta">#commonweal: /404/</span></span><br></pre></td></tr></tbody></table></figure></li></ul><h1><span id="x53c2x8003x6587x732e">&#x53C2;&#x8003;&#x6587;&#x732E;</span></h1><p><a href="https://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">Next&#x5B98;&#x65B9;&#x4F7F;&#x7528;&#x6587;&#x6863;</a></p><p><a href="http://www.regularmisu.com/2018/01/02/set-up-personalBlog/" target="_blank" rel="noopener">Hexo+Github Page&#x642D;&#x5EFA;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;</a> </p><p><a href="https://lfkid.github.io/2016/11/16/Hexo%E6%95%99%E7%A8%8B%EF%BC%9A%EF%BC%88%E4%B8%89%EF%BC%89%E4%BD%BF%E7%94%A8Hexo%E5%86%99%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">Hexo&#x6559;&#x7A0B;&#xFF1A;&#xFF08;&#x4E09;&#xFF09;&#x4F7F;&#x7528;Hexo&#x5199;&#x535A;&#x5BA2;</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
